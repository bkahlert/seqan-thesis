%% Created using Papers on Sun, 18 Oct 2015.
%% http://papersapp.com/papers/

@article{Shull:2000fy,
author = {Basili, V R and Lanubile, F and Shull, F},
title = {{Investigating reading techniques for object-oriented framework learning}},
journal = {IEEE Transactions on Software Engineering},
year = {2000},
volume = {26},
number = {11},
pages = {1101--1118}
}

@inproceedings{Pruitt:2003ki,
author = {Pruitt, John and Grudin, Jonathan},
title = {{Personas}},
booktitle = {DUX {\textquoteright}03: Conference on Designing for User Experiences},
year = {2003},
pages = {1--15},
publisher = {ACM Press},
address = {New York, New York, USA},
annote = {Wie man Personas ermittelt und warum das funktioniert.
- relevant in Verbindung mit Cognitive Dimensions, bei denen man die Zielgruppe kennen muss

Personas-Eigenschaften:
- Geschlecht
- Alter
- Rasse
- Ethnik
- Familie / Umkreis
- Sozio-{\"o}konomischer Hintergrund
- Arbeitumfeld
- Heimumfeld}
}

@inproceedings{Eisenberg:2010bm,
author = {Eisenberg, Daniel S and Stylos, Jeffrey and Myers, Brad A},
title = {{Apatite: a new interface for exploring APIs}},
booktitle = {CHI '10: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
year = {2010},
pages = {1331},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = apr,
annote = {D{\"u}nne Variante des Apatite-Papers}
}

@book{Parnas:2011kr,
author = {Parnas, David Lorge},
title = {{Precise Documentation: The Key to Better Software}},
publisher = {Springer Berlin Heidelberg},
year = {2011},
annote = {SE produziert L{\"o}sungen f{\"u}r ernste und gro{\ss}e Probleme, daher ist Dokumentation so wichtig wie nie

Programmierer sind aktuell zu doof f{\"u}r Dokumentation:
- sollte vorher und w{\"a}hrenddessen - nicht danach - geschrieben werden
- Vorteile:
-- bessere Wiederverwendung alter Designs
-- Besseres Requirements-Verst{\"a}ndnis
-- Nutzbarere Design Reviews
-- Leichtere Integration von separaten Software-Modulen
-- Effektivere Code-Inspektion
-- Effektiveres Testen
-- Effektivere Korrekturen und Verbesserungen

Was macht eine Doku gut?
- Akkurat - Falsche Informationen sind schlimmer als fehlende.
- Eindeutig - M{\"o}glichst nur eine zul{\"a}ssige Interpretation
- Vollst{\"a}ndig - Jeder Draufsicht auf das dokumentierte Artefakt muss vollst{\"a}ndig sien.
- Leichter Zugang - Schneller Zugriff, gute ordnung}
}

@book{Rauterberg:1994vd,
author = {Rauterberg, Matthias and Spinas, Philipp and Strohm, Oliver and Ulich, Eberhard and Waeber, Daniel},
title = {{Benutzerorientierte Software-Entwicklung}},
publisher = {vdf Hochschulverlag AG},
year = {1994},
series = {Konzepte, Methoden und Vorgehen zur Benutzerbeteiligung},
address = {Z{\"u}rich},
month = apr
}

@inproceedings{Li:2008:APU:1357054.1357259,
author = {Li, Yang and Landay, James A.},
title = {{Activity-based prototyping of ubicomp applications for long-lived, everyday human activities}},
booktitle = {CHI '08: Proceeding of the twenty-sixth annual SIGCHI conference on Human factors in computing systems},
year = {2008},
pages = {1303--1312},
publisher = {ACM},
address = {New York, NY, USA}
}

@article{Gasparich:2014eg,
author = {Gasparich, Gail E and Wimmers, Larry},
title = {{Integration of Ethics across the Curriculum: From First Year through Senior Seminar.}},
journal = {Journal of microbiology {\&} biology education},
year = {2014},
volume = {15},
number = {2},
pages = {218--223},
month = dec
}

@misc{Reinert:2011vl,
title = {{Pressemitteilung: \textbf{Ein App-Store f{\"u}r DNA-Analyse: BMBF f{\"o}rdert Informatikprojekt der Freien Universit{\"a}t Berlin}}},
author = {Reinert, Knut},
howpublished = {Freie Universit{\"a}t Berlin},
year = {2011}
}

@inproceedings{Feilkas:dg,
author = {Feilkas, M and Ratiu, D},
title = {{Ensuring Well-Behaved Usage of APIs through Syntactic Constraints}},
booktitle = {The 16th IEEE International Conference on Program Comprehension, 2008. ICPC 2008},
year = {2008},
pages = {248--253},
publisher = {IEEE},
month = jun
}

@inproceedings{Aguiar:2000dn,
author = {Aguiar, Ademar},
title = {{A minimalist approach to framework documentation}},
booktitle = {OOPSLA '00: Proceedings of the 15th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications},
year = {2000},
pages = {143--144},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = jan,
annote = {Kleines Meta-Papier zum Forschungsvorhaben "minimalist framwork documentation"}
}

@article{Tyszberowicz:1992:OPL:131736.131751,
author = {Tyszberowicz, Shmuel and Yehudai, Amiram},
title = {{OBSERV{\textemdash}a prototyping language and environment}},
journal = {ACM Transactions on Software Engineering and Methodology},
year = {1992},
volume = {1},
pages = {269--309},
month = jul
}

@article{Holmes:be,
author = {Holmes, Reid and Walker, Robert and Murphy, Gail},
title = {{Approximate Structural Context Matching: An Approach to Recommend Relevant Examples}},
journal = {IEEE Transactions on Software Engineering},
year = {2006},
volume = {32},
number = {12},
pages = {952--970},
month = dec,
annote = {Werkzeug, das 2 Sachen ben{\"o}tigt:
Code-Repository
Repository, wo der Code verwendet wird

Extrahiert automatisch Code-Examples f{\"u}r Anwendungsf{\"a}lle}
}

@misc{Iterativeprototypg:2011tp,
title = {{Iterative, prototypgesteuerte Entwicklung einer Whiteboard-Funktionalit{\"a}t}},
author = {Jurke, Michael},
howpublished = {Freie Universit{\"a}t Berlin},
year = {2011}
}

@incollection{NoelleNeumann:1989db,
author = {Noelle-Neumann, Elisabeth},
title = {{Die Theorie der Schweigespirale als Instrument der Medienwirkungsforschung}},
booktitle = {Massenkommunikation},
year = {1989},
pages = {418--440},
publisher = {VS Verlag f{\"u}r Sozialwissenschaften},
address = {Wiesbaden}
}

@incollection{Hartmann:1991ju,
author = {Hartmann, Petra},
title = {{Soziale Erw{\"u}nschtheit im Interview}},
booktitle = {Wunsch und Wirklichkeit},
year = {1991},
pages = {35--172},
publisher = {Deutscher Universit{\"a}tsverlag},
address = {Wiesbaden}
}

@article{Fu:2002tp,
author = {Fu, Limin and Salvendy, Gavriel and Turley, Lori},
title = {{Effectiveness of user testing and heuristic evaluation as a function of performance classification}},
journal = {Behaviour {\&} Information Technology},
year = {2002},
volume = {21},
number = {2},
pages = {137--143},
month = jan
}

@webpage{Hearn:2006te,
title = {{Desktop Notification Specification}},
year = {2006},
month = jan,
url = {http://www.galago-project.org/specs/notification/}
}

@inproceedings{Oney:2012ge,
author = {Oney, Stephen and Brandt, Joel},
title = {{Codelets: linking interactive documentation and example code in the editor}},
booktitle = {CHI '12: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
year = {2012},
pages = {2697},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = may
}

@article{BHASKAR:1977dg,
author = {Bhaskar, R and Simon, H A},
title = {{Problem solving in semantically rich domains: An example from engineering thermodynamics}},
journal = {Cognitive Science},
year = {1977},
volume = {1},
number = {2},
pages = {193--215},
month = apr,
annote = {"explain how the domain-specific knowledge is organized and stored to be available for use in problem solving" \cite{Brooks:1983fj}

Starker Bezug zu Formeln-L{\"o}sen}
}

@book{Rosson:2001uf,
author = {Rosson, Mary Beth and Carroll, John M},
title = {{Usability Engineering: Scenario-Based Development of Human-Computer Interaction (Interactive Technologies)}},
publisher = {Morgan Kaufmann},
year = {2001},
edition = {1},
month = oct
}

@article{Berglund:2003bs,
author = {Berglund, Erik},
title = {{Designing electronic reference documentation for software component libraries}},
journal = {Journal of Systems and Software},
year = {2003},
volume = {68},
number = {1},
pages = {65--75},
month = oct
}

@inproceedings{Usability:2007wh,
author = {Miller, Rob},
title = {{Usability}},
booktitle = {Laboratory in Software Engineering, MIT},
year = {2007}
}

@incollection{Grill:2012jm,
author = {Grill, Thomas and Polacek, Ondrej and Tscheligi, Manfred},
title = {{Methods towards API Usability: A Structural Analysis of Usability Problem Categories}},
booktitle = {Human-Centered Software Engineering},
year = {2012},
pages = {164--180},
publisher = {Springer Berlin Heidelberg},
address = {Berlin, Heidelberg},
annote = {Paper, API-Evaluations-Methode vorstellt:

Konzept:
- Methode haben verschiedene Schw{\"a}chen
- Kombination um umfassendes Bild (``big picture'') zu erhalten

Phase 1: Planung

Phasen 2-4: Durchf{\"u}hrung
2) Heuristische Evaluation - soll potentiell problematische Teile finden, um sich darauf zu konzentrieren
- abgeleitet von 16 API-Design-Guidlines von \citep{zibran2008makes}, der Literaturforschung betrieben hat
-- Beispiele:
--- Naming: sollten selberkl{\"a}rend und konsistent sein
--- Documentation: provide documentation and examples
--- Factory Pattern: nur nutzen, wenn unvermeidbar
--- also: alles recht knapp
- durchgef{\"u}hrt von 4 Dom{\"a}nenexperten mit Programmierkenntnissen in der API-Sprache
- Untersuchung von API + Doku
-
3) Workshops
- 8 Teilnehmer, m{\"a}nnlich, um die 30
- 1 Tag
- 7 mit Uniabschluss, 5 mit mehr als 4 Jahren Programmiererfahrung
3.1) Einf{\"u}hrung in die Dom{\"a}ne
3.2) Tutorial mit Hello World Beispiel
3.3) Hands-on: Duften aus Aufgabekatalog selbst eine w{\"a}hlen l{\"o}sen (verschiedene Aufgaben an unterschiedliche Entwickler, damit m{\"o}glichst viel abgedeckt ist)
- Questionnaires w{\"a}hrenddessen: Notieren von Problemen
- w{\"a}hrenddessen Video/Audioaufzeichnungen
4) Semi-strukturierte Interviews (+ Aufzeichnung)
- direkt nach Workshop
- gegliedert nach HEs + Guidelines von \citep{Bloch:2006jk}
- Besprechung individueller Probleme
- max. 30min

Phase 5: Analyse
- HE-Analyse
- Analyse Befragungen + Video/Audioaufzeichnungen
- Interviewanalyse

Analysegegenstand: Studienentwurfssoftware "Contextual Interaction Famework (CIF)"
- Situationen, wo kontextuelle Informationen aus der Umgebung ben{\"o}tigt werden
- Sensoren messen Informationen
-- study environment
-- users
-- tasks done during contextual study
- Erlaubt kontextuelle Studien zu entwerfen
- basiert auf OSGI und ist damit {\"a}hnlich wie APIUA erweiterbar
- Produzenten und Konsumenten von Daten k{\"o}nnen grafisch verbunden werden

Unterschied zu mir:
- HE-Ergebnisse nicht zur Beseitigung grober Fehler, sondern f{\"u}r Fokus-Punkte genutzt
- 3-5 Experten sollten laut Literatur (\citep{UmerFarooq:2010tt}) 60% der Probleme finden soll. ABER: Verweis, dass HE vollst{\"a}ndig sind fehlt. 
- Datenquelle bei mir: unvoreingenommene Rohdaten; Fokuspunkte sind bei mir zus{\"a}tzlich mittels HE und Frageb{\"o}gen entstanden

Ergebnisse:
- 169 Probleme, davon 157 einzigartig, also nur mit einer der Methoden zu finden
- HE
-- meisten Probleme in Dokumentation, Komplexit{\"a}t, Benennung und Konsistenz/Konventionen
- Hands-on
-- schwerste Probleme
- Interviews
-- meisten user experience Aspekte
- Nette Klassifikation von Usability-Problemen
1) Dokumentation
2) Laufzeit (erst beim Ausf{\"u}hren erkennbar)
3) Struktur
4) Benutzererlebnis (alle Aspekte des Erlebnisses wie Attraktivit{\"a}t, Emotionen, etc.)

Kritik:
- Grunds{\"a}tzlicher Unterschied: Laborsetting; es wird kein Versuch unternommen, die Datenerfassung zu verbergen
- HE-Fokuspunkte schr{\"a}nken Sichtfeld bereits ein
- Keine einzige Anwendung dieser Methode gefunden (allerdings relativ neu, um Bewusstsein f{\"u}r API-Usability mangelhaft)
- HEs sehr knapp formuliert; nicht klar, ob Evaluatoren umfangreichere beschreibungen hatten oder nur f{\"u}rs Paper gek{\"u}rzt wurden
- mehr oder minder HE getrieben, also keine Grundlagenforschung (daf{\"u}r aber pragmatisch)
- Validierung fehlt?

FRAGE: Probanden haben Dom{\"a}nenkenntnisse oder nicht?!!!!!!!
wahrscheinlich, da alles Uni-Leute und Dom{\"a}ne "nur" ums Experemtndesign geht}
}

@article{Elliot:2009ev,
author = {Elliot, Andrew J. and Maier, Markus A. and Binser, Martin J. and Friedman, Ron and Pekrun, Reinhard},
title = {{The Effect of Red on Avoidance Behavior in Achievement Contexts}},
journal = {Personality and Social Psychology Bulletin},
year = {2009},
volume = {35},
number = {3},
pages = {365--375},
month = mar
}

@webpage{TheStandardTemplat:1994vd,
author = {Lee, Meng and Stepanov, Alexander},
title = {{The Standard Template Library}},
year = {1994},
month = mar,
url = {http://www.stepanovpapers.com/Stepanov-The_Standard_Template_Library-1994.pdf}
}

@book{Wingchen:2014uk,
author = {Wingchen, J{\"u}rgen},
title = {{Kommunikation und Gespr{\"a}chsf{\"u}hrung f{\"u}r Pflegeberufe}},
publisher = {Schl{\"u}tersche Verlagsgesellschaft},
year = {2014},
series = {Grundlagen {\&} Umsetzung. Modelle {\&} Strategien. F{\"u}r Lehre {\&} Praxis.},
edition = {3. Edition}
}

@inproceedings{Anonymous:9HSMlhmF,
author = {Clarke, Steven and Becker, C},
title = {{Using the cognitive dimensions framework to evaluate the usability of a class library}},
booktitle = {Proceedings of the First Joint Conference of EASE {\&} PPIG 2003},
year = {2003},
pages = {359--366},
month = feb,
annote = {Anpassung von CD f{\"u}r Evaluation von API.
Methode: Anpassung mittels Erfahrung und den Lehren aus einer auf klassische Weise verbesserten Library.
Anwendung mittels Videoaufzeichnung von Entwicklern

	1.	Abstraction Level: what are the minimum and maximum levels of abstraction exposed by the API, and what are the minimum and maximum levels usable by a targeted developer. 
	2.	Learning Style: what are the learning requirements posed by the API, and what are the learning styles available to a targeted developer. 
	3.	Working Framework: what is the size of the conceptual chunk needed to work effectively 
	4.	Work-Step Unit: how much of a programming task must/can be completed in a single step. 
	5.	Progressive Evaluation: to what extent can partially completed code be executed to obtain feedback on code behavior? 
	6.	Premature Commitment: to what extent does a developer have to make decisions before all the needed information is available? 
	7.	Penetrability: how does the API facilitate exploration, analysis, and understanding of its components, and how does a targeted developer go about retrieving what is needed. 
	8.	API Elaboration: to what extent must the API be adapted to meet the needs of a targeted developer? 
9. API Viscosity: what are the barriers to change inherent in the API, and how much effort does a targeted developer need to expend to make a change.
10. Consistency: once part of an API is learned, how much of the rest of it can be inferred?
11. Role Expressiveness: how apparent is the relationship between each component and the program as a whole?
12. Domain Correspondence: how clearly do the API components map to the domain? Are there any special tricks?
}
}

@article{Mey2007,
author = {Mey, G{\"u}nter and Mruck, Katja},
title = {{Grounded Theory Methodologie - Bemerkungen zu einem prominenten Forschungsstil}},
journal = {Historical Social Research, Supplement},
year = {2007},
number = {19},
pages = {11--39}
}

@article{cite-key,
author = {Scofield, Jason and Behrend, Douglas A},
title = {{Two-year-olds differentially disambiguate novel words and facts.}},
journal = {Journal of child language},
year = {2007},
volume = {34},
number = {4},
pages = {875--889},
month = nov
}

@book{strauss1990basics,
author = {Strauss, Anselm Leonard and Corbin, Juliet M},
title = {{Basics of qualitative research: grounded theory procedures and techniques}},
publisher = {Sage Publications},
year = {1990},
annote = {ACHTUNG: Anhang ist Werk von 1998!!!!}
}

@article{Green:1996gm,
author = {Green, TRG and Petre, M},
title = {{Usability Analysis of Visual Programming Environments: A {\textquoteleft}Cognitive Dimensions{\textquoteright} Framework}},
journal = {Journal of Visual Languages {\&} Computing},
year = {1995},
volume = {7},
number = {2},
pages = {131--174},
month = dec,
annote = {<b>Abstract</b>
Erfolgreiche Anwendung des Congnitive Dimensions Framework auf 2 grafische Entwicklungsumgebungen}
}

@book{Martin:1997ux,
editor = {Martin, Robert C and Riehle, Dirk and Buschmann, Frank},
title = {{Pattern languages of program design 3}},
publisher = {Addison-Wesley Longman Publishing Co., Inc.},
year = {1997},
address = {Boston, MA, USA}
}

@webpage{Fortin:2007uu,
author = {Fortin, Michael},
title = {{Sim Daltonism}},
year = {2007},
url = {http://michelf.com/projects/sim-daltonism/}
}

@book{snyder2003paper,
author = {Snyder, Carolyn},
title = {{Paper Prototyping}},
publisher = {Morgan Kaufmann},
year = {2003},
series = {The Fast and Easy Way to Design and Refine User Interfaces}
}

@article{Bloch:2006jk,
author = {Bloch, Joshua},
title = {{How to design a good API and why it matters}},
journal = {OOPSLA '06: Companion to the 21st ACM SIGPLAN symposium on Object-oriented programming systems, languages, and applications},
year = {2006},
pages = {506},
month = oct,
annote = {Gute Zusammenfassung von keynote.pdf}
}

@mastersthesis{Kahlert:2011wr,
author = {Kahlert, Bj{\"o}rn},
title = {{Verbesserung der Out-Of-Box-Experience in Saros mittels Heuristischer Evaluation und Usability-Tests}},
school = {Freie Universit{\"a}t Berlin},
year = {2011},
address = {Berlin, Germany},
month = jan
}

@article{Breckenridge:2012tf,
author = {Breckenridge, J and Jones, D and Elliott, I and Nicol, M},
title = {{Choosing a methodological path: Reflections on the constructivist turn}},
journal = {Grounded Theory Review},
year = {2012},
volume = {11},
number = {1},
pages = {64--71},
month = jun,
annote = {Construktiviste GTM}
}

@article{Baumer:1996:UIP:227726.227841,
author = {Baumer, Dirk and Bischofberger, Walter R. and Lichter, Horst and Zullighoven, Heinz},
title = {{User Interface Prototyping - Concepts, Tools, and Experience.}},
journal = {ICSE},
year = {1996},
pages = {532--541}
}

@webpage{Beaton:2008ta,
author = {Beaton, Wayne},
title = {{Adapters}},
year = {2008},
url = {http://www.eclipse.org/articles/article.php?file=Article-Adapters/index.html}
}

@inproceedings{Nielsen:1993:MMF:169059.169166,
author = {Nielsen, Jakob and Landauer, Thomas K.},
title = {{A mathematical model of the finding of usability problems}},
booktitle = {CHI '95: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
year = {1993},
pages = {206--213},
publisher = {ACM Press},
address = {New York, New York, USA}
}

@article{Mockus:2009cn,
author = {Mockus, A},
title = {{Succession: Measuring transfer of code and developer productivity}},
journal = {ICSE '07: Proceedings of the 29th international conference on Software Engineering},
year = {2009},
pages = {67--77},
month = may,
annote = {Wenn Codeownership wechselt, ist das eine Herausforderung. Wie gut dieser Wechsel abl{\"a}uft will dieses Paper messen k{\"o}nnen.}
}

@article{Ellis:2007kv,
author = {Ellis, B and Stylos, Jeffrey and Myers, B},
title = {{The Factory Pattern in API Design: A Usability Evaluation}},
journal = {ICSE '07: Proceedings of the 29th international conference on Software Engineering},
year = {2007},
pages = {302--312},
month = may,
annote = {Konstruktoren vs. Factories: Factories-Anwender ben{\"o}tigten viel mehr Zeit zur Konstruktion eines Objekts bei Kontextfreien und Kontextbehafteten Situationen;
Empfehlung: nach M{\"o}glicheit Factories vermeiden
Leute suchen bei fehlendem Konstruktor eher nach Subklassen oder erzeugen selbst welche (meist Abbruch, weil zu aufwendig), statt das Objekt indirekt zu erzeugen

Ergebnis Interview: Leute ziehen Factories vor, wenn es sich um unver{\"a}nderliche Objekte handelt, auf denen keine Operationen aufgerufen werden ("opaque objects")

Factory hat offensichtliche Probleme
- Abstract Factory muss alle Implementierungen kennen
- Explizites Downcast notwendig, wenn spezifische Funktionalit{\"a}t aufgerufen werden soll
- Wenn Instanzierung konkreter Klasse Ziel ist, ist es unbefriediegend, nicht zu wissen, welche Klasse es nun wirklich ist, da immer die Oberklasse in der Signatur steht

Unterschiedliche Geschmacksvarianten:
- in .Net eine Factory f{\"u}r verschiedene Objekte
- in Java h{\"a}ufig 1:1 (z.B. ISecureFactory und SecureFactory)

Alternative: Class Cluster (Instanzierung wie {\"u}blich mit "new" aber was zur{\"u}ck kommt, unterscheidet sich)
- auch in Java mittels "handle-body idiom" m{\"o}glich

Experiment:
12 Teilnehmer mit 1-22 Jahren Java-Entwicklungserfahrung
18-35 Jahre
Nur M{\"a}nner
5 Java-Programmieraufgaben, teilweise nur Factory, teilweise nur Constructor, teilweise beides}
}

@book{gesis-solis-00272267,
author = {Steinke, Ines},
title = {{Kriterien qualitativer Forschung : Ans{\"a}tze zur Bewertung qualitativ-empirischer Sozialforschung}},
publisher = {Juventa Verlag},
year = {1999},
series = {Juventa Paperback},
address = {Weinheim}
}

@inproceedings{Wurster:2008kd,
author = {Wurster, G and van Oorschot, P C},
title = {{The developer is the enemy}},
booktitle = {NSPW '08 Proceedings of the 2008 workshop on New security},
year = {2009}
}

@webpage{Microsoft:2011tt,
author = {Farooq, Umer and {Microsoft} and Welicki, Leon and Zirkler, Dieter},
title = {{Notifications}},
year = {2011},
url = {http://msdn.microsoft.com/en-us/library/aa511497.aspx}
}

@book{glaser1978theoretical,
author = {Glaser, Barney G},
title = {{Theoretical Sensitivity: Advances in the Methodology of Grounded Theory}},
publisher = {Sociology Press},
year = {1978},
series = {Advances in the methodology of grounded theory}
}

@inproceedings{Stylos:2006gu,
author = {Stylos, Jeffrey and Myers, Brad A},
title = {{Mica: A Web-Search Tool for Finding API Components and Examples}},
booktitle = {VLHCC '06: Proceedings of the 2006 IEEE Symposium on Visual Languages - Human Centric Computing},
year = {2006},
pages = {195--202},
publisher = {IEEE},
month = sep,
annote = {Suchmachine f{\"u}r APIs basierend auf Google}
}

@article{clarke:DSP:2007:1080,
author = {Clarke, Steven},
title = {{What is an End User Software Engineer?.}},
journal = {End-User Software Engineering 2007},
year = {2007},
annote = {Extraktion von 3 Entwickler Personas
- 12 Monate Beobachtung von Entwickler in Usability Labs und an den eigenen Arbeitspl{\"a}tze
- Arbeit in unterschiedlichen Szenarien

- Aufzeichnung von Arbeitsstil, Charakteristiken und Motivation

Systematic Developer
- defensives Codeschreiben
-- sch{\"u}tzt vor Instabilit{\"a}t
-- Schutz vor nicht-vertrauensw{\"u}rdigen parallel laufenden Code
-- Gr{\"u}ndliches Verst{\"a}ndnis, bevor Technik angewandt wird
- stolz auf elegante L{\"o}sung

Pragmatic Developer
- methodisches Codeschreiben
- baut hinreichend viel Wissen f{\"u}r den Gebrauch einer Technik auf
- stolz auf robuste L{\"o}sung

Opportunistic Developer
- exploratives Codeschreiben
- baut hinreichend viel Wissen auf, um zu Verstehen, wie es eine Business-Problem l{\"o}st
- stolz auf L{\"o}sung von Business-Problem}
}

@article{Teasley:1994gr,
author = {Teasley, Barbee E},
title = {{The effects of naming style and expertise on program comprehension}},
journal = {International Journal of Human-Computer Studies},
year = {1993},
volume = {40},
number = {5},
pages = {757--770},
month = dec,
annote = {<b>Was getan?</b>
Basierend auf Pennington (1987)
- bottom-up learning. Ebenen  "operations", "control flow", "data flow", "state", "function"

Wenn man sinnlose Namen verwendet, d{\"u}rfte das keinen Einfluss haben auf die unteren Ebenen, da nur die h{\"o}chste Ebene = function,
von Benennung beeinflusst wird.

Bei beiden Experimenten:
Labor-Setting
21-zeiliges Pascal-Programm (also kein OOP)

Experiment 1
- Programm mit und ohne sinnvolle Namen
- Fragen zu den verschiedenen Verst{\"a}ndnisebenen
- Ergebnis: kaum Unterschiede auf unteren Ebenen, aber bei "function" bei sinnvollen Namen 20% Unterschied (durschnittlich 75% bei sinnvoll, durschnittlich 55% korrekt beantwortete Fragen bei sinnlos) (Grafik S. 763)
- Ergebnis: Pennington's bottom-up learning wurde nicht angetroffen. Alle Levels scheinen gleichzeitig anzuwachsen. Bestrafung nur bei einer Unterbrechung/St{\"o}rung (z.B. sinnlose Namen)

Experiment 2
- diesmal mit erfahrenen Usersn
- Ergebnis: kein signifikanter Unterschied mehr -{\&}gt; unterst{\"u}tzt die These, dass fortgeschrittene Anwender durch sinnlose Namen nicht negativ beeinflusst werden 
- Ergebnis: Evidenz f{\"u}r bottom-up learning bzgl. der ersten Ebenen und der Funktionsebene
- ALLERDINGS: Kein Unterschied zwischen den ersten Ebenen

<b>Zentrale Aussagen</b>
H{\"a}ufig basieren Style Guides auf Konvention und Intuition.

Viele Experimente (Zitate auf 2. Seite) konnten nicht zeigen, das vorhergesagte Effekte tats{\"a}chlich eintreten w{\"u}rden.

Typische Namensempfehlungen nach Kernighan {\&}amp; Plauger (1978):
Gut: Verwendung Dom{\"a}nen-Begriff (EmployeeName)
Schlecht: Datentyp (IntegerArray); Funktion innerhalb d. Algorithmus (LoopCount); Zuf{\"a}ller Name (GWhiz)

Keine eindeutigen Aussagen bei Mnemonischen Namen (Ged{\"a}chtnisst{\"u}tze)

Laut Teasly (1991) kaum Einfluss von Guter Bennenung und/oder Anwesenheit von Kommentaren auf erfahrene Entwickler

Laut Brooks (1983):
- Anwender macht auf Grundlage des Programmnamens und seiner Dokumentation eine Hypothese {\"u}ber Hauptoperationen und Datenstrukturen
- Dann sucht der Anwender nach unterst{\"u}tzenden/erwarteten beacons. Findet er welche, kr{\"a}ftigt das seine Hypothese. Anderenfalls wird die Hypothese modifiziert.

Laut Gellenbeck und Cook (1991):
- Gute Variablennamen und Funktionsnamen dienen als beacons (noch allgmeiner: "meaningul names" in general)

Geschlussfolgerte Aussage: Nicht eindeutig, da Sheppard (1979) und Shneiderman (1980) keinen und nur sehr geringen Einfluss guter Benamung f{\"u}r fortgeschrittene Programmierer nachweisen konnten.
Daher: F{\"u}r Anf{\"a}nger relevanter als f{\"u}r Fortgeschrittene Entwickler und fortgeschrittene Entwickler haben gr{\"o}{\ss}eres Strategie-Repertoire zum Code-Verstehen
Au{\ss}erdem unbekannt, ob dies auch f{\"u}r komplexe, reale Software gilt, wo sich die Entwickler in einer normalen Arbeitsumgebung befinden.
Beintr{\"a}chtigung durch hohen Zeitdruck (1,5min / 1,0 min Zeit zum verstehen, 2min zur Beantwortung von 10 Fragen) nicht ausgeschlossen

Fix, Wiedenbeck und Scholtz (1993): Anf{\"a}nger und Fortgeschrittene haben gleiche mentale Modelle, die sich nur in ihrem Detailgrad unterscheiden

Gilmore and Green (1988), Gilmore (1989): Role-Expressiveness = "property of the language to that enables the automatization of the mapping between problem and programming knowledge" (Gilmore and Green 1988, p 438)
- discriminability = Grad, um den die Sprache chunks erkennbar macht (z.B. Syntax Highlighting)
- statement-structure mapping = Mapping zwischen einfach Statements und ihrem programmatischen Sinn (ohne Dom{\"a}nenbezug, z.B. bla bla bla macht nichts anderes als eine Variable zu initialisieren)
- statement-task mapping = Rolle des Statements in Bezug auf die L{\"o}sung des inhaltlichen Problems)

Bottom-up learning auf ersten Ebenen nicht erkennbar, wegen Sprachunterschied.
Pennington (1987a) hat n{\"a}mlich heraus bekommen, das Programmierer verschiedener Programmiersprachen unterschiedliche pr{\"a}ferierte mentale Modelle haben

}
}

@article{Alavi:1984:APA:358080.358095,
author = {Alavi, Maryam},
title = {{An assessment of the prototyping approach to information systems development}},
journal = {Communications of the ACM},
year = {1984},
volume = {27},
pages = {556--563},
month = jun
}

@booklet{hayes1975psychological,
title = {{Psychological Differences Among Problem Isomorphs}},
author = {Hayes, J R and Simon, Herbert Alexander},
howpublished = {Carnegie-Mellon University. Department of Psychology},
year = {1975},
annote = {Paper dass der These auf Pennington 87 widerspricht, dass die Programmsprache keine Enfluss darauf hat, welche mentale Rep{\"a}sentation gew{\"a}hlt wird.

Gegenteiliges Paper: \citep{spoehr1984comprehension}}
}

@booklet{Cook:1996wj,
title = {{Process Discovery and Validation Through Event-data Analysis}},
author = {Cook, Jonathan E},
year = {1996},
annote = {PhD thesis; Quantiative Prozess-Ereignisdaten-Analyse zur L{\"o}sung der Probleme "process discovery" und "process validation"

Balboa Framework ist nur Sammeldienst und bietet keine Erleichterung bei der Datenerhebung (Plattformspezifisch, Applikationsspezifisch), S.86

Amadeus [110] = Fremdentwicklung ist eher ein Baustein f{\"u}r process-guidance system; "it is essentially a system for registering process events and triggering actions on the occurrence of those events"}
}

@book{Card:1983:PHI:578027,
author = {Card, Stuart K. and Newell, Allen and Moran, Thomas P.},
title = {{The Psychology of Human-Computer Interaction}},
publisher = {L. Erlbaum Associates Inc.},
year = {1983},
address = {Hillsdale, NJ, USA}
}

@book{glaser2005grounded,
author = {Glaser, Barney G and Strauss, Anselm Leonard},
title = {{Grounded theory: Strategien qualitativer Forschung}},
publisher = {Hans Huber},
year = {2005},
address = {Bern},
edition = {2}
}

@book{clarke2005situational,
author = {Clarke, Adele},
editor = {Clarke, Adele},
title = {{\textbf{Situational Analysis}}},
publisher = {Sage Publications},
year = {2005},
series = {Grounded Theory After the Postmodern Turn},
address = {London}
}

@inproceedings{Horie:2010dq,
author = {Horie, Michihiro and Chiba, Shigeru},
title = {{Tool support for crosscutting concerns of API documentation}},
booktitle = {AOSD '10: Proceedings of the 9th International Conference on Aspect-Oriented Software Development},
year = {2010},
pages = {97--108},
publisher = {ACM Press},
address = {New York, New York, USA},
annote = {"CommentWeaver" = Erweiterung zu JavaDoc, dass das Problem von verteilten (= st{\"a}ndig fast gleiche Kommentare bei {\"a}hnlichen Funktionen) bis verwirrenden Dokumentationseintr{\"a}gen l{\"o}st.
Es erlaubt zus{\"a}tzliche Annotationen und damit eine Kontrolle dar{\"u}ber, wo welche Dokumentationseintr{\"a}ge erscheinen.}
}

@article{Hirschheim:1989:FPI:67933.67937,
author = {Hirschheim, Rudy and Klein, Heinz K.},
title = {{Four paradigms of information systems development}},
journal = {Communications of the ACM},
year = {1989},
volume = {32},
pages = {1199--1216},
month = oct,
annote = {Stellt 4 Paradigmen entlang der Dimensionen Objektivismus-Subjektivismus / Regel-Konflikt vor.}
}

@inproceedings{Schmidt:br,
author = {Schmidt, D C and Buschmann, F},
title = {{Patterns, frameworks, and middleware: their synergistic relationships}},
booktitle = {25th International Conference on Software Engineering, 2003. Proceedings.},
pages = {694--704},
publisher = {IEEE}
}

@article{Vayena:2015kk,
author = {Vayena, Effy and Brownsword, Roger and Edwards, Sarah Jane and Greshake, Bastian and Kahn, Jeffrey P and Ladher, Navjoyt and Montgomery, Jonathan and O'Connor, Daniel and O'Neill, Onora and Richards, Martin P and Rid, Annette and Sheehan, Mark and Wicks, Paul and Tasioulas, John},
title = {{Research led by participants: a new social contract for a new kind of research}},
journal = {Journal of Medical Ethics},
year = {2015},
month = mar
}

@inproceedings{UmerFarooq:2010tt,
author = {Farooq, Umer and Welicki, Leon and Zirkler, Dieter},
title = {{API usability peer reviews: a method for evaluating the usability of application programming interfaces}},
booktitle = {CHI '10: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
year = {2010},
pages = {2327--2336},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = apr,
annote = {siehe anderes gleiches Paper Vorstellung API Usability Peer Review}
}

@inproceedings{Layman:2008:MIU:1370114.1370133,
author = {Layman, Lucas M and Williams, Laurie A and Amant, Robert St},
title = {{MimEc: intelligent user notification of faults in the eclipse IDE}},
booktitle = {CHASE '08: Proceedings of the 2008 international workshop on Cooperative and human aspects of software engineering},
year = {2008},
pages = {73--76},
publisher = {~ACM},
address = {New York, New York, USA},
month = may
}

@inproceedings{Watson:2012es,
author = {Watson, Robert B},
title = {{Development and application of a heuristic to assess trends in API documentation}},
booktitle = {SIGDOC '12: Proceedings of the 30th ACM international conference on Design of communication},
year = {2012},
pages = {295},
publisher = {ACM Press},
address = {New York, New York, USA},
annote = {Vorschlag einer Heuristik zum Untersuchen von API usability

Im Unterschied zu Cognitive Dimensions auch Ber{\"u}cksichtigung der Doku

Heuristik:
Initial impression
- ~Entry page content 
- ~Overview information
Experience 
- ~Top-level navigation type 
- ~Reference topic format 
- ~Code examples 
-- Code snippets o Tutorials -- Sample apps
Additional data
- ~Advanced pages 
- ~Video tutorials 
- ~Comments }
}

@proceedings{Wiederverwendung:2008uv,
title = {{Wiederverwendung}},
year = {2008},
organization = {Freie Universit{\"a}t Berlin},
address = {Berlin, Germany}
}

@inproceedings{Neal:1989ef,
author = {Neal, L R},
title = {{A system for example-based programming}},
booktitle = {CHI '89: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
year = {1989},
pages = {63--68},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = mar,
annote = {Vorstellung von "example-based programming"
- Editor mit zweitem Fenster, indem Beispielcode dargestellt wird
- wenig komfort}
}

@misc{EinfuhrungeinesTes:2011wt,
title = {{Einf{\"u}hrung eines Testprozesses}},
author = {Chen, Lin},
howpublished = {Freie Universit{\"a}t Berlin},
year = {2011}
}

@article{Rudd:1996:LVH:223500.223514,
author = {Rudd, Jim and Stern, Ken and Isensee, Scott},
title = {{Low vs. high-fidelity prototyping debate}},
journal = {interactions},
year = {1996},
volume = {3},
pages = {76--85},
month = jan
}

@book{plauger2001c++,
author = {Plauger, P J},
title = {{The C++ Standard Template Library}},
publisher = {Prentice Hall},
year = {2001},
volume = {42}
}

@incollection{Shi:2011tb,
author = {Shi, Lin and Zhong, Hao and Xie, Tao and Li, Mingshu},
title = {{An Empirical Study on Evolution of API Documentation}},
booktitle = {Lecture Notes in Computer Science},
year = {2011},
editor = {Giannakopoulou, Dimitra and Orejas, Fernando},
pages = {416--431--431},
publisher = {Springer Berlin Heidelberg},
address = {Berlin, Heidelberg}
}

@misc{Salinger:R4Pfv9VO,
title = {{Schriftliche Mitteilung vom 09.05.2011 zum Thema Begriffsabgrenzung verschiedener PP- und DPP-Varianten}},
author = {Salinger, Stephan},
year = {2011}
}

@article{Resnick:2009:SP:1592761.1592779,
author = {Resnick, Mitchel and Maloney, John and Monroy-Hernandez, Andr{\'e}s and Rusk, Natalie and Eastmond, Evelyn and Brennan, Karen and Millner, Amon and Rosenbaum, Eric and Silver, Jay and Silverman, Brian and Kafai, Yasmin},
title = {{Scratch: programming for all}},
journal = {Communications of the ACM},
year = {2009},
volume = {52},
pages = {60--67},
month = nov
}

@article{Bouvet:2006ig,
author = {de Bouvet, Armelle and Deschamps, Claude and Boitte, Pierre and Boury, Dominique},
title = {{Bioinformatics: The philosophical and ethical issues at stake in a new modality of research practices.}},
journal = {Medicine, health care, and philosophy},
year = {2006},
volume = {9},
number = {2},
pages = {201--209}
}

@article{Glass:1992cw,
author = {Glass, Robert L and Vessey, Iris},
title = {{Toward a taxonomy of software application domains: History}},
journal = {Journal of Systems and Software},
year = {1992},
volume = {17},
number = {2},
pages = {189--199},
month = feb,
annote = {Historie der Entwicklung von Anwendungsdom{\"a}nen.

Extrahieren zwei Taxonomien auf Historie:

Taxonomy Derived from Industry History
- Business data processing
- Scientific/engineering
- System programming
- Real-time programming

Taxonomy Derived from ACM Departments
- Business apptications -- management/data base systems
-- management science/operations research
- Scientific applications
- Medical applications
- Real-time programming
- Unusual applications
- Information retrieval}
}

@webpage{SaintAndre:2009vd,
author = {Saint-Andre, Peter},
title = {{XEP-0077: In-Band Registration}},
year = {2009},
url = {http://xmpp.org/extensions/xep-0077.html}
}

@inproceedings{Hennipman:2008:RRP:1473018.1473053,
author = {Hennipman, Elbert-Jan and Oppelaar, Evert-Jan R. G. and van der Veer, Gerrit C. and Bongers, Bert},
title = {{Rapid and rich prototyping: proof of concepts for experience}},
booktitle = {ECCE '08: Proceedings of the 15th European conference on Cognitive ergonomics: the ergonomics of cool interaction},
year = {2008},
pages = {28:1--28:6},
publisher = {ACM},
address = {New York, NY, USA}
}

@incollection{Wharton:1994to,
author = {Wharton, Cathleen and Rieman, John and Lewis, Clayton and Polson, Peter},
title = {{The cognitive walkthrough method: a practitioner's guide}},
booktitle = {Usability Inspection Methods},
year = {1994},
pages = {105--140},
publisher = {Wiley John + Sons},
address = {New York}
}

@webpage{Tisdall:2001td,
author = {Tisdall, James},
title = {{\textbf{Why Biologists Want to Program Computers}}},
year = {2001},
month = oct,
annote = {- Kaum Menschen, die sich sehr gut in Informatik und Bioinformatik auskennen
- Bioinformatiker sind eher opportunistisch bzgl. Programmieren (Mittel zum Zweck, siehe End-User Programming)
- Perl empfohlen als Einstieg (wegen Rapid Prototyping)
- Gro{\ss}e Datenmenge (z.B. 3 Milliarden Basenpaare)
- Automatisierungsbedarf (z.B. workflows, batches)
- enorme Zeitersparnis (h{\"a}ndische Auswertung von Gen-Abschnitten {\textasciitilde}1Monat; programmieren 2 Wochen, Laufzeit: 30min)
- finanziell: Bioinformatik w{\"a}chst schneller, als Ausgebildet wird. Programmieren lernen daher sinnvoll (im Gegensatz: es gibt mehr PhD Biologen, als der Markt aufnehmen kann)
- F{\"u}r neue Probleme gibt es keine grafischen Tools (daher muss programmiert werden)},
url = {http://www.oreillynet.com/pub/a/oreilly/news/perlbio_1001.html}
}

@article{Oman:1988id,
author = {Oman, Paul W and Cook, Curtis R},
title = {{A paradigm for programming style research}},
journal = {ACM SIGPLAN Notices},
year = {1988},
volume = {23},
number = {12},
pages = {69--78},
month = dec,
annote = {Coding Style / Style Guidelines
- ohne solide experimentelle oder theoretische Basis
- Unterscheidung in Typographie und Struktur
-{\&}gt; Bewertung der Faktoren auf Programmverst{\"a}ndnis

Typographie (= "physica layout", no performance effect)
- level and method of indentation
- line length
- detail and placement of comments
- placement of blank lines
- use of embedded spaces
- identifier length
- module length
- formats for type and data declarations

Struktur (= "programming constructs (eg. looping and branching structures, modularity", "affect both performance and maintainability")
- Modularit{\"a}t
- Verwendung von Labels und Gotos
- Verwendung von Konstanten-Definitionen
- Verwendung von inkludierten Dateien
- Verwendung von Literalen
- Verwendung von Methoden zur Definition ovn Typen und Daten
- Verwendung von Library-Funktionen
- Level of nesting
- Kontrollfluss
- Informationsfluss
- Operatoren und Operanden Verwendung
- andere Faktoren der Programmkomplexit{\"a}t}
}

@book{aggarwal2009essentials,
author = {Aggarwal, J C},
title = {{Essentials Of Educational Psychology}},
publisher = {Vikas Publishing House Pvt Ltd},
year = {2009},
edition = {2. Edition},
month = nov,
annote = {Lernphasen:

basiert auf: Gagn{\'e}, R. M. (1977). The conditions of learning (3rd. ed.). New York: Holt, Rinehart and Winston.
(f{\"u}r Details, dort nachlesen)}
}

@book{kelle1994empirisch,
author = {Kelle, U},
title = {{Empirisch begr{\"u}ndete Theoriebildung: zur Logik und Methodologie interpretativer Sozialforschung}},
publisher = {Deutscher Studien Verlag},
year = {1994}
}

@webpage{Nielsen:1995vp,
author = {Nielsen, Jakob},
title = {{Technology Transfer of Heuristic Evaluation and Usability Inspection}},
year = {1995},
url = {http://www.useit.com/papers/heuristic/learning_inspection.html}
}

@article{Hulsenbusch:2014wr,
author = {H{\"u}lsenbusch, Ralph},
title = {{Cloud Computing}},
journal = {iX},
year = {2014},
volume = {2},
number = {Verlag Heinz Heise GmbH {\&} Co. KG},
pages = {20},
month = feb
}

@book{norman2002design,
author = {Norman, D.A.},
title = {{The design of everyday things}},
publisher = {Basic Books},
year = {2002},
edition = {1}
}

@article{Rettig:1994:PTF:175276.175288,
author = {Rettig, Marc and Lange, B M and Moher, T G},
title = {{Prototyping for tiny fingers}},
journal = {Communications of the ACM},
year = {1994},
volume = {37},
pages = {21--27},
month = apr
}

@webpage{Clarke:2004te,
author = {Clarke, Steven},
title = {{Measuring API Usability}},
year = {2004},
month = may,
annote = {Codes
- affordance (= Angebotscharakter)
-- what does an object offer (counter example: Windows Start Button offers Shutdown; 2nd example: Nicht-Verstehen, dass man eine Datei mittels Kopieren und L{\"o}schen Verschieben kann)

Citations
"Application <b>implementation details do not drive the design</b> of the user interface and should not be represented in the interface design. Instead, the design should reflect the way that users expect to work."

"The framework is used to describe both what a given set of users expect from an API and what the API actually provides."

Sprechen sich f{\"u}r Benutzerzentrischen Ansatz aus.
- Beobachtung von Benutzern und Auswertung der Beobachtung mittels CDs
- oder Analyse von Code-Snippets in Konzeptionsphase mittels CDs
- oder Vergleich der eigenen Analyse mit den 3 Persona-Profilen

Kenntnisse {\"u}ber Environment sehr wichtig; ohne diese Erkenntnisse (z.B. Anwenderschaft) alle anderen Bestreben sogar nutzlos (wie auch sonst, wenn man nicht wei{\ss} f{\"u}r wen man eigentlich was tut)},
url = {http://www.drdobbs.com/windows/measuring-api-usability/184405654#}
}

@article{Ng:2007gh,
author = {Ng, T H and Cheung, S C and Chan, W K and Yu, Y T},
title = {{Do Maintainers Utilize Deployed Design Patterns Effectively?}},
journal = {ICSE '07: Proceedings of the 29th international conference on Software Engineering},
year = {2007},
pages = {168--177},
month = may,
annote = {Paper zum Thema Design Pattern in der Wartungsphase (werden sie weiterverwendet, oder nicht?)

Nur relevant, wenn die Einf{\"u}hrung eines Design Patterns zu Wartungsproblemen f{\"u}hren w{\"u}rde und damit wieder eine schlechtere API hervorbringt}
}

@inproceedings{Piccioni:2013uq,
author = {Piccioni, Marco and Furia, Carlo A and Meyer, Bertrand},
title = {{An Empirical Study of API Usability}},
booktitle = {2013 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)},
pages = {5--14},
publisher = {IEEE},
annote = {<b>Untersuchung einer persistence library "ABEL" mittels Cognitive Dimensions, Usability Tokens (ortogonal zu CDs) und Interviews
- 25 Teilnehmer (Master's and PhDs)
- at least one year of OOP exp
- no ABEL exp
- wide range of exp
- mussten Programmcode in Eiffel schreiben
Kombination von Cognitive Dimensions und Usability Tokens: 12 API-Cognitive-Dimensions Fragen und zu jeder Frage das h{\"a}ufigste Usability Token
-> Erfolg dadurch: Bessere Unterscheidung von No-Go's und lediglich ung{\"u}nstigen Problemen (= usability token "incorrect" vs. "unexpected")

Ablauf:
Einweisung (IDE-Funktionen f{\"u}r library documentation, class inheriatance inspection) --> keine eval der OOBE mehr m{\"o}glich
Programmieraufgabe: Client-Code, kein Zeitlimit
W{\"a}hrenddessen: thing aloud (Nachteil, beeinfluss Programmierung)
Danach: Structured Interview (f{\"u}r mehr explizite Einsichten, wie wahrgenommene Usability)
Danach Klassifikation der Episoden der Aufzeichung mit Usability Tokens (abstraction, surprise, choice, missed, incorrect, unexpected)

Kritik:
- Einweisung in IDE {\&} Vorgabe einer speziellen IDE: keine OOBE mehr m{\"o}glich
- Vorgabe IDE: Verf{\"a}lschung, da nicht zwingend die IDE, die der Anwender gew{\"a}hlt h{\"a}tte. Usability-Probleme k{\"o}nnen sich zwischen IDEs unterscheiden (z.B. existierende/fehlende Autovervollst{\"a}ndigung)
- Notwendigkeit eines "Proctor"s, der IDE-Bedienschwierigkeiten behandeln muss, wenn Proband danach fragt (Forscher geben an, das Beeinflussung vernachl{\"a}ssigbar ist)
- In 4 Kategorien gegliederte 12 Fragen --> Herkunft durch CDs nicht erkennbar (Clarke) oder dokumentiert. Nicht alle CDs enthalten, da es zwei Fragen gab, die nach meinem Verst{\"a}ndnis auf die gleiche CD abzielen; komisch, denn der Ansprcuh der Arbeit war neue Aspekte zu finden (ohne von Einschr{\"a}nkungen zu sprechen)

Ergebnis:
- Namensproblem bereits in Informatik schwierig (Beispiel: method in Java, routine in Eiffel, member function in C++)
- Stylos Factory Pattern Ergebnisse best{\"a}tigt
- Typen sind konstanten Strings vorzuziehen
- Doku muss akkurat, eindeutig und in sich abgeschlossen sein; "bad documentation is a nonstarter"
- L{\"o}sungsweg muss eindeutig sein (sonst Probleme: Usability Token "choice"): verschiedene L{\"o}sungsoptionen nur gut, wenn komplement{\"a}r seind


Codes</b>
Aspects of API usability
- <b>understandability</b>
-- what you have to understand
-- purpose of features
-- how to work with the feature
- <b>abstraction level</b>
-- no need to know implementation details
-- match conventions and practices of programmers
-- not being elegantly abstract
-- API "makes simple things simple, and complex things possible"
- <b>reusability
</b>-- concice
-- terse
-- maintainable
-- extensible
- <b>learnability
</b>-- incremental learning (= proportional to what to achieve)
-- positive impact on similar / related tasks}
}

@inproceedings{Gross:2011ie,
author = {Gross, P and Yang, J and Kelleher, C},
title = {{Dinah: An interface to assist non-programmers with selecting program code causing graphical output}},
booktitle = {CHI '11 Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
year = {2011}
}

@article{Gould:1987em,
author = {Gould, John D. and Boies, Stephen J. and Levy, Stephen and Richards, John T. and Schoonard, Jim},
title = {{The 1984 Olympic Message System: a test of behavioral principles of system design}},
journal = {Communications of the ACM},
year = {1987},
volume = {30},
number = {9},
pages = {758--769},
month = sep
}

@incollection{DualaEkoko:2011th,
author = {Duala-Ekoko, Ekwa and Robillard, MartinP},
title = {{Using Structure-Based Recommendations to Facilitate Discoverability in APIs}},
booktitle = {Lecture Notes in Computer Science},
year = {2011},
editor = {Mezini, Mira},
pages = {79--104--104},
publisher = {Springer Berlin Heidelberg},
address = {Berlin, Heidelberg},
annote = {Problem: Nicht direkt in Beziehung stehende API-Elemente werden nicht entdeckt.

L{\"o}sung: Eclipse Plugin "API Explorer", der durch Erkennung struktureller Beziehungen Vorschl{\"a}ge macht, die zwar nicht direkt mit der Klasse aber mit der aktuell erledigten Aufgabe zu tun haben. Erzeugt dynamisch Code zur Erzeugung von Objekten.}
}

@inproceedings{Tomasek:2015:WSU:2811411.2811537,
author = {Tomasek, Martin and Cerny, Tomas},
title = {{On web services UI in user interface generation in standalone applications}},
booktitle = {RACS: Proceedings of the 2015 Conference on research in adaptive and convergent systems},
year = {2015},
publisher = {~ACM  Request Permissions},
month = oct
}

@inproceedings{deSouza:2004fd,
author = {de Souza, Cleidson R B and Redmiles, David and Cheng, Li-Te and Millen, David and Patterson, John},
title = {{Sometimes you need to see through walls: a field study of application programming interfaces}},
booktitle = {CSCW '04: Proceedings of the 2004 ACM conference on Computer supported cooperative work},
year = {2004},
pages = {63--71},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = nov,
annote = {APIs als Hauptfaktor f{\"u}r gute/schlechte kollaborative Softwareentwicklung

GTM, aber nicht erkl{\"a}rt, wie angewendet und ergebnisse auch nicht als GT besprochen

Nicht-partizipative Feldstudie
Semi-strukturierte Interviews

Nettes Passage zu Vorteilen und Nachteilen von APIs}
}

@article{Ko:2011el,
author = {Ko, Andrew J and Abraham, Robin and Beckwith, Laura and Blackwell, Alan F and Burnett, Margaret M and Erwig, Martin and Scaffidi, Christopher and Lawrance, Joseph and Lieberman, Henry and Myers, Brad A and Rosson, Mary Beth and Rothermel, Gregg and Shaw, Mary and Wiedenbeck, Susan},
title = {{The state of the art in end-user software engineering}},
journal = {ACM Computing Surveys (CSUR)},
year = {2011},
volume = {43},
number = {3},
month = apr
}

@article{NickBeauchamp:2014hl,
author = {Blighe, K and Beauchamp, N and Allen, K E and Nesbitt, I M and Dawe, Jennifer and Dalton, Ann},
title = {{Next Generation Sequencing in the National Health Service England: A Pipeline that Completely Agrees with Sanger}},
journal = {J Cancer Sci {\ldots}},
year = {2014},
volume = {06},
number = {10}
}

@incollection{carroll2003hci,
author = {Blackwell, Alan F and Green, Thomas},
title = {{Notational Systems{\textemdash}The Cognitive Dimensions of Notations Framework}},
booktitle = {HCI Models, Theories, and Frameworks},
year = {2003},
editor = {Carroll, John M},
pages = {103--133},
publisher = {Morgan Kaufmann},
address = {San Francisco}
}

@article{Zibran:2011fx,
author = {Zibran, M F and Eishita, F Z and Roy, C K},
title = {{Useful, But Usable? Factors Affecting the Usability of APIs}},
journal = {Working Conference on Reverse Engineering. Proceedings},
year = {2011},
pages = {151--155},
month = sep,
annote = {Untersuchung von 1513 Bugs in 5 verschiedenen BugTrackern; Destilation of Bugs, die was mit API usability zu tun haben

- davon 562 ({\textasciitilde} 35%) API usability issues

- 27.3% der gemeldeten usability-bezogenen Bugs haben was mit mangelhafter Doku zu tun
- {\textasciitilde}10% Inkorrekte Sichtbarkeit von Objekten / Methoden (also sichtbar machen oder unsichtbar machen)
- 8,4% Speicherverbrauch (zu hoch)
- 8,2% zu lange Parameterlisten
- 7.5% Inkompatibilit{\"a}t zwischen Bibliothek und externen Komponenten (DLL, OS, etc.)
- 6.5% Abh{\"a}ngigkeit zwischen Komponenten (insb. unn{\"o}tige Kopplung)
- 6.1% Abw{\"a}rtskompatibilit{\"a}t

}
}

@article{Swanson:2003tj,
author = {Swanson, W. H. and Cohen, J. M.},
title = {{Color vision}},
journal = {Ophthalmology clinics of North America},
year = {2003},
volume = {16},
number = {2},
pages = {179--203},
month = jun,
annote = {Swanson, William HCohen, Jay MEY07716/EY/NEI NIH HHS/United StatesResearch Support, U.S. Gov't, P.H.S.ReviewUnited StatesOphthalmology clinics of North AmericaOphthalmol Clin North Am. 2003 Jun;16(2):179-203.}
}

@article{Eysenck:1941uu,
author = {Eysenck, H. J.},
title = {{A Critical and Experimental Study of Colour Preferences}},
journal = {The American Journal of Psychology},
year = {1941},
volume = {54},
number = {00029556}
}

@inproceedings{Hartmann:2006:RPP:1166253.1166300,
author = {Hartmann, Bj{\"o}rn and Klemmer, Scott R. and Bernstein, Michael and Abdulla, Leith and Burr, Brandon and Robinson-Mosher, Avi and Gee, Jennifer},
title = {{Reflective physical prototyping through integrated design, test, and analysis}},
booktitle = {UIST '06 Proceedings of the 19th annual ACM symposium on User interface software and technology},
year = {2006},
pages = {299--308},
publisher = {ACM Press},
address = {New York, New York, USA}
}

@article{Pirhonen:2005db,
author = {Pirhonen, Antti},
title = {{Supporting a user facing a novel application: learnability in OOBE}},
journal = {Personal and Ubiquitous Computing},
year = {2005},
volume = {9},
number = {4},
pages = {218--226},
month = jul
}

@webpage{Vogel:2011wx,
author = {Vogel, Lars and Muessener, Clemens},
title = {{Eclipse JFace Table - Tutorial}},
year = {2011},
url = {http://www.vogella.de/articles/EclipseJFaceTable/article.html}
}

@webpage{Clarke:2003wk,
author = {Clarke, Steven},
title = {{API usability and the cognitive dimensions framework - So what is a developer experience anyway?}},
year = {2003},
month = oct,
annote = {"The cognitive dimensions framework presents a set of dimensions that describe aspects of an API that impact its usability."

Bisherige Anwendung von API-CDs:
- 5 Entwickler erledigen Aufgaben
- jeweils {\`a} 2h = 10h
- Beobachtung mittels semi-transparenten Spiegel

Problem:
- Was sollen die API-Entwickler mit dem CD-Profil (Netzdiagramm) anfangen?

L{\"o}sung:
- Erstellung von drei API-CD-Profilen f{\"u}r die drei Personas:
  - Opportunistic
  - Pragmatic
  - Systematic
- Vergleich des ermittelten Profils mit denen der Persona, die dem Zielpublikum am n{\"a}chsten kommt},
url = {http://blogs.msdn.com/b/stevencl/archive/2003/10/08/57040.aspx}
}

@article{Herbsleb:2007:GSE:1253532.1254718,
author = {Herbsleb, James D},
title = {{Global Software Engineering: The Future of Socio-technical Coordination}},
journal = {FOSE '07: 2007 Future of Software Engineering},
year = {2007},
pages = {188--198},
month = may
}

@article{Janes:hl,
author = {Janes, A and Scotto, M and Sillitti, A and Succi, G},
title = {{A Perspective on Non Invasive Software Management}},
journal = {IEEE Instrumentation and Measurement Technology Conference. Proceedings},
year = {2006},
pages = {1104--1106},
month = apr
}

@book{Reeves:1996vi,
author = {Reeves, B and Nass, C},
title = {{The media equation: How people treat computers, television,? New media like real people? Places}},
publisher = {Computers and Mathematics with Applications},
year = {1997},
volume = {33}
}

@inproceedings{AlgorithmenundDate:2011wx,
author = {Reinert, Knut and Weese, David and Gr{\"o}pl, Clemens},
title = {{Algorithmen und Datenstrukturen f{\"u}r Bioinformatik}},
booktitle = {Freie Universit{\"a}t Berlin},
year = {2011},
pages = {28}
}

@inproceedings{OCallaghan:2010iv,
author = {O'Callaghan, Portia},
title = {{The API walkthrough method}},
booktitle = {PLATEAU '10: Evaluation and Usability of Programming Languages and Tools},
year = {2010},
pages = {1--6},
publisher = {ACM Press},
address = {New York, New York, USA}
}

@inproceedings{LaToza:2007fj,
author = {LaToza, Thomas D and Garlan, David and Herbsleb, James D and Myers, Brad A},
title = {{Program comprehension as fact finding}},
booktitle = {ESEC-FSE '07: Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering},
year = {2007},
pages = {361},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = sep,
annote = {Laborstudie {\"u}ber 3h mit 13 Entwicklern
- Wie verbringen die Leute ihre Zeit mit Suchen, Lernen, Kritisieren, Erkl{\"a}ren, Vorschlagen und Implementieren
- Dabei hilft Fakten-Finden
-- 3 Auspr{\"a}gungen: changeable (gute Stelle zum {\"A}ndern), constraints (m{\"u}ssen unver{\"a}ndert bleiben), expensive (Investigation teuer)
- 0-10.5 Jahre Programmiererfahrung

- 3x Experts
-- Erkl{\"a}ren und Adressierung von Urgrundsache
-- Abstrakte Beschreibung wie "Caching"
-- Schnelle Implementierung von {\"A}nderungen
-- Erkennen auch von weniger sichtbaren Problemen

- 10x Anf{\"a}nger
-- Anschauen irrelevanter Funktionen
-- Beschreibung und Behebung von Symptomen
-- Konkrete Beschreibung von Statements
-- Langsame Implementierung von {\"A}nderungen
-- Kein Erkennen von versteckten Problemen

Vorschlag eines Tools, dass Fakten extrahieren und separat anzeigen kann}
}

@book{schiffer1998visuelle,
author = {Schiffer, S},
title = {{Visuelle Programmierung}},
publisher = {Addison-Wesley-Longman},
year = {1998}
}

@article{Rosson:1996da,
author = {Rosson, Mary Beth and Carroll, John M},
title = {{The reuse of uses in Smalltalk programming}},
journal = {ACM Transactions on Computer-Human Interaction},
year = {1996},
volume = {3},
number = {3},
pages = {219--253},
month = sep,
annote = {Empirische Studie: 4 Smalltalk-Entwickler-Beobachtung
- "observed extensive "reuse of uses"" (Wiederverwendung von Code-Beispielen)
- verlassen auf durch Beispiel-Programme ausgedr{\"u}ckte implizite Spezifikation = "usage context"
- Suche nach Informationen und Funktionen aus dem usage context

- Code "debugging into existence" - Kopierten Quelltext anpassen und dabei debugging ben{\"o}tigen. Wenn der Programmteil endlich verstanden wurde, ist der Schritt vollbracht}
}

@book{Gibas:2002wk,
author = {Gibas, Cynthia and Jambeck, Per},
title = {{Einf{\"u}hrung in die praktische Bioinformatik}},
publisher = {O'Reilly},
year = {2002}
}

@article{Monperrus:2011bf,
author = {Monperrus, Martin and Eichberg, Michael and Tekes, Elif and Mezini, Mira},
title = {{What should developers be aware of? An empirical study on the directives of API documentation}},
journal = {Empirical Software Engineering},
year = {2011},
volume = {17},
number = {6},
pages = {703--737},
month = dec,
annote = {Themenumfeld: API-Dokumentation

API-Direktive = Nat{\"u}rlichsprachliche Aussage bzgl. contraints / guidelines bzgl. API
- z.B. "must not be null"
- z.B. "not being thread-safe"

Empirische Studie zu API-Direktiven
- Taxonomie mit 23 Typen von API-Direktiven
- basierend auf {\"u}ber 4000 Java API Dokumentationseintr{\"a}gen

Guidelines basierend auf Erfahrung:
- Betroffenes API-Element muss klar identifiziert werden (in Klassendoku nicht von einer Methode sprechen)
- Genau erkl{\"a}ren, wann eine Direktive relevant ist
- Keine vagen Formulieren - insb. kein "should" vewenden
- Fixierte/beschlossene Terminology}
}

@misc{DesignundImplement:2011tm,
title = {{Design und Implementierung der neuen Saros Benutzeroberfl{\"a}che}},
author = {Bitterling, Patrick},
howpublished = {Freie Universit{\"a}t Berlin},
year = {2011}
}

@webpage{Ziegler:2015tt,
author = {Ziegler, Peter-Michael},
title = {{Biotechnologie statt Software: SAP-Gr{\"u}nder Hopp {\"u}ber seine Life-Sciences-Investments}},
year = {2015},
month = apr,
url = {http://www.heise.de/newsticker/meldung/Biotechnologie-statt-Software-SAP-Gruender-Hopp-ueber-seine-Life-Sciences-Investments-2596015.html}
}

@inproceedings{Gross:2010hb,
author = {Gross, Paul and Kelleher, Caitlin},
title = {{Toward transforming freely available source code into usable learning materials for end-users}},
booktitle = {PLATEAU '10: Evaluation and Usability of Programming Languages and Tools},
year = {2010},
pages = {1--6},
publisher = {ACM Press},
address = {New York, New York, USA},
annote = {Code Examples w{\"a}ren wertvolle Resourcen f{\"u}r End-User Programmers, w{\"a}re da nicht das Auswahl-Problem.
- Evaluation von zwei Tools f{\"u}r Auswahl
- Design Guidelines zur weiteren Verbesserung solcher Tools
- Nennung der Schwierigkeiten um aus Code Examples, Lernmaterial zu machen
-- Fragestellung auf Anwenderseite kann zu abstrakt sein; d.h. das Wording findet sich im Code-Beispiel nicht wieder sondern Begrifflichkeiten der L{\"o}sung
-- Code-Verteilung (in Form von Dateien, Packages, Klassen, etc.)
-- Selektionsprobleme (was hilft beim Problem, was kann ich wegschmei{\ss}en?)}
}

@inproceedings{Kramer:1999ih,
author = {Kramer, Douglas},
title = {{API documentation from source code comments: a case study of Javadoc}},
booktitle = {SIGDOC '99: Proceedings of the 17th annual international conference on Computer documentation},
year = {1999},
pages = {147--153},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = oct,
annote = {API-Entwickler m{\"u}ssen gute Dokumentation schreiben}
}

@unpublished{Schenk:3LdEjzOu,
author = {Schenk, Julia},
title = {{Besprechung ATLAS.ti mit Julia Schenk}},
month = jul,
year = {2014}
}

@article{Ko:2011vw,
author = {Ko, A J and Riche, Y},
title = {{The role of conceptual knowledge in API usability}},
journal = {IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC), 2011},
year = {2011},
pages = {173--176},
annote = {Studie mit Studenten zum Thema Notwendigkeit Konzeptionellen Wissens (= Dom{\"a}nenwissen)
- ohne, keine zielgerichteten Anfragen (z.B. Suchmachine)
- ohne, keine Einsch{\"a}tzbarkeit m{\"o}glicherweise relevanter Materialien

daher muss Doku auch Einf{\"u}hrungen in
- zentrale Konzepte
- Standards
- Ideen
mit Verweisen auf Anleitungen des Gebrauchs etc. enthalten}
}

@article{Blinman:2005wr,
author = {Blinman, Scott and Cockburn, Andy},
title = {{Program Comprehension: Investigating the Effects of Naming Style and Documentation.}},
journal = {AUIC},
year = {2005},
pages = {73--78},
annote = {Finden von Faktoren, die die Benutzer-Interaktion mit einem Framework auf dem Source-Code-Level beeinflussen.

Evaluation von (full descriptive naming style / non-descriptive naming style) x (documentation provided / no documentation provided)

Basierend auf .Net Framework mit J{\#}
11 post-graduates

Ergbnis: meaningful names + documentation = best
Wenn descriptive names, dann weniger Konsultation der Doku;
Fortgeschrittene brauchen weniger Naming Style weil Sie auf ein gr{\"o}{\ss}eres Reperatoir zur{\"u}ckgreifen k{\"o}nnen}
}

@inproceedings{Coman:2007de,
author = {Coman, Irina D},
title = {{An analysis of developers' tasks using low-level, automatically collected data}},
booktitle = {ESEC-FSE '07: Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering},
year = {2007},
pages = {579--582},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = sep
}

@book{strauss1987qualitative,
author = {Strauss, Anselm Leonard},
title = {{Qualitative Analysis for Social Scientists}},
publisher = {Cambridge University Press},
year = {1987},
annote = {zitierbar f{\"u}r M{\"o}glichkeit der Subdimensionalisierung}
}

@misc{Unterstutzungmehrer:2011wf,
title = {{Unterst{\"u}tzung mehrerer Projekte in einer Saros-Sitzung}},
author = {Dohnert, Christian},
howpublished = {Freie Universit{\"a}t Berlin},
year = {2011}
}

@webpage{Simula.simula.1294,
author = {Yamashita, Aiko},
title = {{Measuring the outcomes of a maintenance project: Technical details and protocols}},
year = {2012},
month = may,
url = {https://www.simula.no/publications/measuring-outcomes-maintenance-project-technical-details-and-protocols}
}

@webpage{Bloch:2005wn,
author = {Bloch, Joshua},
title = {{How to design a good API and why it matters}},
year = {2006},
annote = {Motivation f{\"u}r gute API},
url = {http://lcsd05.cs.tamu.edu/slides/keynote.pdf}
}

@webpage{Young:2014tl,
author = {Young, Susan},
title = {{Industrieprodukt Genomsequenz}},
year = {2014},
month = jan,
url = {http://www.heise.de/tr/artikel/Industrieprodukt-Genomsequenz-2084085.html}
}

@article{BRYANT:2008da,
author = {Bryant, Sallyann and Romero, P and du Boulay, Benedict},
title = {{Pair programming and the mysterious role of the navigator}},
journal = {International Journal of Human-Computer Studies},
year = {2008},
volume = {66},
number = {7},
pages = {519--529},
month = jul
}

@article{Djemili:2007tp,
author = {Djemili, Riad and Oezbek, Christopher and Salinger, Stephan},
title = {{Saros: Eine Eclipse-Erweiterung zur verteilten Paarprogrammierung}},
journal = {Software Engineering 2007 - Beitr{\"a}ge zu den Workshops},
year = {2007},
pages = {1--4},
month = feb
}

@article{Fouts:2000:SLE:353360.353375,
author = {Fouts, Jason W.},
title = {{On site: an {\textquotedblleft}out-of-box{\textquotedblright} experience}},
journal = {Communications of the ACM},
year = {2000},
volume = {43},
number = {11},
pages = {28--29},
month = nov
}

@article{Molich:1990co,
author = {Molich, Rolf and Nielsen, Jakob},
title = {{Improving a human-computer dialogue}},
journal = {Communications of the ACM},
year = {1990},
volume = {33},
number = {3},
pages = {338--348},
month = mar
}

@inproceedings{Anonymous:W5Yeki-w,
author = {Cook, Jonathan E and Wolf, Alexander L},
title = {{Balboa: A Framework for Event-Based Process Data Analysis}},
booktitle = {AOSD '10: Proceedings of the 9th International Conference on Aspect-Oriented Software Development},
year = {1998}
}

@article{Wiedenbeck:1991ez,
author = {Wiedenbeck, Susan},
title = {{The Initial Stage of Program Comprehension.}},
journal = {International Journal of Man-Machine Studies},
year = {1991},
volume = {35},
number = {4},
pages = {517--540},
annote = {Beacons = Segmente, die als typische Indikatoren f{\"u}r eine bestimmte Programmstruktur/-operation dienen

- Macht (unbekannte) Programm f{\"u}r erfahrenen Entwickler leichter verst{\"a}ndlich
- schlecht platzierte Beacons sorgen f{\"u}r "false comprehension"
- starke Beacons sind so dominant, dass der Entwickler andere Hinweise ignoriert}
}

@article{Ivory:2005:EWS:1095872.1095876,
author = {Ivory, Melody Y. and Megraw, Rodrick},
title = {{Evolution of web site design patterns}},
journal = {ACM Transactions on Information Systems},
year = {2005},
volume = {23},
number = {4},
pages = {463--497},
month = oct
}

@article{Keenan:1999di,
author = {Keenan, Susan L and Hartson, H Rex and Kafura, Dennis G and Schulman, Robert S},
title = {{The Usability Problem Taxonomy: A Framework for Classification and Analysis}},
journal = {Empirical Software Engineering},
year = {1999},
volume = {4},
number = {1},
pages = {71--104},
month = feb,
annote = {Usability-Problem-Taxonomy

2x anektotisch gepr{\"u}ft}
}

@inproceedings{Oman:1990eg,
author = {Oman, Paul W and Cook, Curtis R},
title = {{A taxonomy for programming style}},
booktitle = {CSC '90: Proceedings of the 1990 ACM annual conference on Cooperation},
year = {1990},
pages = {244--250},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = jan,
annote = {Stellen eine Taxonomie zum Einordnen / Ordnen von Style Guides

- sehr interessant, dass es in der Forschung bis dato eine einhellige Meinung zu bestimmten Fragen gibt:
  - "Don't sacrifice clarity for efficiency." (!= Template Programming)
  - "Validate input for legality and plausibility." (Vergleiche SeqAn I/O wo es keine Fehlerpr{\"u}fung der Eingabe gibt.)}
}

@inproceedings{Zimmerman:2002fz,
author = {Zimmerman, Marc K and Lundqvist, Kristina and Leveson, Nancy},
title = {{Investigating the readability of state-based formal requirements specification languages}},
booktitle = {ICSE '02: Proceedings of the 24th International Conference on Software Engineering},
year = {2002},
pages = {33--43},
publisher = {ACM Press},
address = {New York, New York, USA},
month = may
}

@inproceedings{roast2000formal,
author = {Roast, C R and Khazaei, B and Siddiqi, J I},
title = {{Formal comparisons of program modification}},
booktitle = {VL 2000 IEEE Symposium on Visual Languages},
year = {2000},
pages = {165--171},
publisher = {IEEE Comput. Soc},
annote = {Zitierquelle f{\"u}r Anwendung des Cognitive Dimensions Framework. Messung Premature Commitment mittels Anzahl sekund{\"a}rer Entschiedungen vor prim{\"a}rer Entscheidung}
}

@inproceedings{Watson:2009da,
author = {Dekel, Uri and Herbsleb, James D},
title = {{Improving API documentation usability with knowledge pushing}},
booktitle = {ICSE '09: Proceedings of the 2009 IEEE 31st International Conference on Software Engineering},
year = {2009},
pages = {320--330},
publisher = {~IEEE Computer Society},
month = may,
annote = {eMoose = Eclipse Plug-in, dass kritische Funktionen, mit Hinweisen (aus der Doku stammend) dekoriert}
}

@inproceedings{McKeogh:2004gj,
author = {McKeogh, John and Exton, Chris},
title = {{Eclipse plug-in to monitor the programmer behaviour}},
booktitle = {eclipse '04: Proceedings of the 2004 OOPSLA workshop on eclipse technology eXchange},
year = {2004},
pages = {93--97},
publisher = {~ACM},
address = {New York, New York, USA},
month = oct,
annote = {Einfache Datenaufzeichnung in Eclipse mittels Editor-{\"U}berwachung.

Weitere Prozessierung in Excel (per XML)}
}

@unpublished{GogolDoring:5iYhf2VJ,
author = {Gogol-D{\"o}ring, Andreas and Kahlert, Bj{\"o}rn},
title = {{Templatemetaprogrammierung und OOP in SeqAn}},
month = dec,
year = {2013}
}

@article{Henning:2007kg,
author = {Henning, Michi},
title = {{API design matters}},
journal = {Queue},
year = {2007},
volume = {5},
number = {4},
pages = {24--36},
month = may,
annote = {Beispielhafte Schilderung typischer API-Unzul{\"a}nglichkeiten am beisen von .NET Sockets

Moral: Kleine Fehlentscheidungen, gro{\ss}er Schaden}
}

@inproceedings{Eisenberg:2010ds,
author = {Eisenberg, Daniel S and Stylos, Jeffrey and Faulring, Andrew R and Myers, Brad A},
title = {{Using Association Metrics to Help Users Navigate API Documentation}},
booktitle = {2010 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)},
year = {2010},
pages = {23--30},
publisher = {IEEE},
annote = {Doku-Tool, bei dem man {\"u}ber Assoziationen zwischen den Klassen/Methoden/etc. browsen kann.
- Hervorhebung popul{\"a}rer Eintr{\"a}ge (je nach Kontext)
- Browsen basierend auf initiale Suchbegriffe
- Berechnung der Assoziationen mittels Suchemaschine und Quellcode}
}

@article{Frokjaer:2008jx,
author = {Fr{\o}kj{\ae}r, Erik and Hornb{\ae}k, Kasper},
title = {{Metaphors of human thinking for usability inspection and design}},
journal = {ACM Transactions on Computer-Human Interaction},
year = {2008},
volume = {14},
number = {4},
pages = {1--33},
month = jan
}

@inproceedings{Mayer:2012kl,
author = {Mayer, Clemens and Hanenberg, Stefan and Robbes, Romain and Tanter, {\'E}ric and Stefik, Andreas},
title = {{An empirical study of the influence of static type systems on the usability of undocumented software}},
booktitle = {OOPSLA '12: Proceedings of the ACM international conference on Object oriented programming systems languages and applications},
year = {2012},
pages = {683--702},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = nov,
annote = {27 Teilnehmer {\`a} 5 Programmieraufgaben jeweils mit statisch und dynamisch typisierter Sprache. In drei F{\"a}llen statisch schneller implementiert. In den beiden anderen F{\"a}llen dynamisch schneller implementiert.

Gr{\"u}nde im Schwierigkeistgrad gesehen, auch wenn offen ist, was eigentlich leicht oder schwer zu bedeuten hat. Durchmischte Ergebnisse best{\"a}tigt in Studien zuvor (u.a. von Prechelt)}
}

@webpage{Nielsen:2003ur,
author = {Nielsen, Jakob},
title = {{Paper Prototyping: Getting User Data Before You Code}},
year = {2003},
month = apr,
url = {http://www.useit.com/alertbox/20030414.html}
}

@phdthesis{Salinger:2013vd,
author = {Salinger, Stephan},
title = {{Ein Rahmenwerk f{\"u}r die qualitative Analyse der Paarprogrammierung}},
year = {2013},
address = {Berlin}
}

@webpage{vanRossum:2006tc,
author = {van Rossum, Guido},
title = {{Library or Framework?}},
year = {2006},
month = mar,
annote = {Framework = "an application with a lot of hooks"
- typically starts with one app
- generalized in various directions

Library
- developed with requirements in mind
- abstractions
- minimal API with maximal set of requirements},
url = {http://www.artima.com/weblogs/viewpost.jsp?thread=152104}
}

@unpublished{Zieris:yCXyxVc9,
author = {Zieris, Franz},
title = {{Besprechung ATLAS.ti mit Franz Zieris}},
month = oct,
year = {2014}
}

@inproceedings{Zhang:2012wl,
author = {Zhang, Cheng and Yang, Juyuan and Zhang, Yi and Fan, Jing and Zhang, Xin and Zhao, Jianjun and Ou, Peizhao},
title = {{Automatic parameter recommendation for practical API usage}},
booktitle = {ICSE '12: Proceedings of the 34th International Conference on Software Engineering},
pages = {826--836},
publisher = {IEEE},
annote = {Eclipse-Plugin "Precise", dass automatisch eine Datenbank f{\"u}r Parameter-Belegungen aufbaut und auf Nachfrage vorschl{\"a}gt
- 64% der Vorschl{\"a}ge sinnvoll
- 53% genau das, was man wollte}
}

@inproceedings{AndrewJKo:2004df,
author = {Ko, Andrew J and Myers, Brad A and Aung, Htet Htet},
title = {{Six Learning Barriers in End-User Programming Systems}},
booktitle = {VLHCC '04: Proceedings of the 2004 IEEE Symposium on Visual Languages - Human Centric Computing},
year = {2004},
publisher = {~IEEE Computer Society},
month = sep,
annote = {Programmiersprachen gut erforscht, aber nicht IDE + libraries

Identifikation von 6 generischen Lernbarrieren

Codes
- knowledge breakdowns (= Lernen, Annahmen treffen, Annahmen sind falsch, schlechterer Fortschritt)
- learning barrier}
}

@incollection{Pennington:1987:CSP:54968.54975,
author = {Pennington, Nancy},
title = {{Empirical studies of programmers: second workshop}},
year = {1987},
editor = {Olson, Gary M and Sheppard, Sylvia and Soloway, Elliot},
pages = {100--113},
publisher = {Ablex Publishing Corp.},
address = {Norwood, NJ, USA}
}

@book{Benyon:2005wx,
author = {Benyon, David and Turner, Phil and Turner, Susan},
title = {{Designing Interactive Systems}},
publisher = {Pearson Education},
year = {2005},
series = {People, Activities, Contexts, Technologies},
annote = {2004046228David Benyon, Phil Turner, and Susan Turner.col. ill. ; 25 cm.Includes bibliographical references (p. [760]-775) and index.}
}

@misc{StatistischeAuswert:2010vi,
title = {{Statistische Auswertung vorhandener Nutzungsdaten, Verfeinerung des Statistik-Frameworks und Erstellung einer Ticker Funktionalit{\"a}t}},
author = {von Hoffen, Moritz},
howpublished = {Freie Universit{\"a}t Berlin},
year = {2010}
}

@article{Yamashita:2013un,
author = {Yamashita, Aiko and Moonen, Leon},
title = {{Exploring the impact of inter-smell relations on software maintainability: an empirical study}},
journal = {Proceedings of the International Conference on Software Engineering},
year = {2013},
pages = {682--691},
annote = {Code Smell = Indikator f{\"u}r Problem mit der Qualit{\"a}t des Quellcodes, die die Weiterentwicklung behindern

Untersuchung der Interaktion von Code Smells und deren Auswirkung auf die Wartbarkeit von Software}
}

@inproceedings{LaToza:2006dr,
author = {LaToza, Thomas D and Venolia, Gina and DeLine, Robert},
title = {{Maintaining mental models}},
booktitle = {ICSE '06: Proceeding of the 28th international conference},
year = {2006},
pages = {492--501},
publisher = {ACM Press},
address = {New York, New York, USA},
annote = {Wissen ist implizit und Entwickler schreiben es einfach nicht nieder -{\&}gt; Hohe Kosten, implizites Wissen anderer zu erhalten

2 Umfragen + 11 Interviews}
}

@techreport{spoehr1984comprehension,
author = {Spoehr, K T and Morris, M E and Smith, E E},
title = {{Comprehension of Instructions for Operating Devices}},
year = {1984},
month = aug,
annote = {Paper dass die These auf Pennington 87 best{\"a}tigt, dass die Programmsprache keine Enfluss darauf hat, welche mentale Rep{\"a}sentation gew{\"a}hlt wird.

Gegenteiliges Paper: \citep{hayes1975psychological}}
}

@inproceedings{Rosson:2005hw,
author = {Rosson, M B and Ballin, J and Rode, J},
title = {{Who, what, and how: a survey of informal and professional Web developers}},
booktitle = {VLHCC '05: Proceedings of the 2005 IEEE Symposium on Visual Languages and Human-Centric Computing},
year = {2005},
pages = {199--206},
month = sep
}

@article{Glass:2002ec,
author = {Glass, Robert L and Vessey, Iris and Ramesh, V},
title = {{Research in software engineering: an analysis of the literature}},
journal = {Information and Software Technology},
year = {2002},
volume = {44},
number = {8},
pages = {491--506},
month = jun,
annote = {Weniger als 1% GTM-Forschung}
}

@book{Nielsen:1993vk,
author = {Nielsen, Jakob},
title = {{Usability Engineering}},
publisher = {Morgan Kaufmann},
year = {1993},
edition = {1st},
month = sep
}

@article{Pennington:1987dc,
author = {Pennington, Nancy},
title = {{Stimulus structures and mental representations in expert comprehension of computer programs}},
journal = {Cognitive Psychology},
year = {1987},
volume = {19},
number = {3},
pages = {295--341},
month = jul
}

@book{Scarpino:2005vz,
author = {Scarpino, Matthew and Stylos, Jeffrey and Graf, Benjamin and Busse, Daniela K and Ziegler, Carsten and Ehret, Ralf and Karstens, Jan},
title = {{SWT/JFace in action}},
publisher = {Manning},
year = {2005},
address = {Greenwich, CT},
annote = {2005272631Matthew Scarpino ... [et al.].ill. ; 25 cm."How to design graphical applications with Eclipse 3.0"--Cover.Includes index.}
}

@article{1982,
author = {Naumann, Justus D. and Jenkins, A Milton},
title = {{Prototyping: The New Paradigm for Systems Development}},
journal = {MIS Quarterly},
year = {1982},
volume = {6},
number = {3},
pages = {29}
}

@inproceedings{Conti:2010:MID:1772690.1772719,
author = {Conti, Gregory and Sobiesk, Edward},
title = {{Malicious interface design}},
booktitle = {WWW '10: Proceedings of the 19th international conference on World wide web},
year = {2010},
pages = {271},
publisher = {ACM Press},
address = {New York, New York, USA}
}

@book{Dix:2003wy,
author = {Dix, Alan and Finlay, Janet E and Abowd, Gregory D and Beale, Russell},
title = {{Human-Computer Interaction}},
publisher = {Prentice Hall},
year = {2003},
edition = {3},
month = dec
}

@article{pinker_jackendoff,
author = {Pinker, Steven and Jackendoff, Ray},
title = {{The Faculty of Language: What's Special about it?}},
journal = {Cognition},
year = {2005},
volume = {95},
number = {2},
pages = {201--236}
}

@booklet{Stavely:1985wq,
title = {{A Collection of Software Tools for Analyzing Designs of Concurrent Software Systems}},
author = {Stavely, A M and Becker, D C and Orr, S P},
howpublished = {IEEE Computer Society Press},
year = {1985}
}

@inproceedings{Wightman:2012gc,
author = {Wightman, Doug and Ye, Zi and Brandt, Joel and Vertegaal, Roel},
title = {{SnipMatch: using source code context to enhance snippet retrieval and parameterization}},
booktitle = {UIST '12: Proceedings of the 25th annual ACM symposium on User interface software and technology},
year = {2012},
pages = {219},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = oct,
annote = {Eclipse-Plugin "SnipMatch" zum interaktiven einf{\"u}gen von Code Snippets, wobei Platzhalter so eingesetzt werden, dass das Snippet direkt an verwendete Variablennamen angepasst wird. }
}

@inproceedings{Fairbanks:2006jw,
author = {Fairbanks, George and Garlan, David and Scherlis, William},
title = {{Design fragments make using frameworks easier}},
booktitle = {OOPSLA '06: Proceedings of the 21st annual ACM SIGPLAN conference on Object-oriented programming systems, languages, and applications},
year = {2006},
pages = {75--88},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = oct,
annote = {Vorschlag, wie man "monkey see, monkey do" programmierung erm{\"o}glichen kann}
}

@webpage{Nielsen:1994ue,
author = {Nielsen, Jakob},
title = {{Guerrilla HCI: Using Discount Usability Engineering to Penetrate the Intimidation Barrier}},
year = {1994},
url = {http://www.useit.com/papers/guerrilla_hci.html}
}

@article{Gordon:1995:RPL:624605.625427,
author = {Gordon, V S and Bieman, J M},
title = {{Rapid prototyping: lessons learned}},
journal = {IEEE Software},
year = {1995},
volume = {12},
number = {1},
pages = {85--95},
month = jan
}

@inproceedings{Canning:1989fp,
author = {Canning, Peter and Cook, William and Hill, Walter and Olthoff, Walter and Mitchell, John C},
title = {{F-bounded polymorphism for object-oriented programming}},
booktitle = {FPCA '89: Proceedings of the fourth international conference on Functional programming languages and computer architecture},
year = {1989},
pages = {273--280},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = nov,
annote = {Allgemeine Form von CRTP}
}

@inproceedings{Stylos:2007jb,
author = {Stylos, Jeffrey and Clarke, Steven},
title = {{Usability Implications of Requiring Parameters in Objects' Constructors}},
booktitle = {ICSE '07: Proceedings of the 29th international conference on Software Engineering},
year = {2007},
pages = {529--539},
publisher = {~IEEE Computer Society},
month = may,
annote = {Cognitive Dimensions Framework - Comparative Studie zur Notwendigkeit von Parametern in Konstruktoren; entgegen der Erwartung f{\"u}hrten APIs mit parameterlosen Konstruktoren zu weniger Fehlern

Zwei Wahlm{\"o}glichkeiten:
"required constructor"
"create-set-call"

Experiment mit 30 professionellen Programmiern aller drei Personas
- Mailversand-Aufgabe
- abh{\"a}ngig von Persona: Visual Basic, C{\#}, C++
- 2,25h (je Aufgabe ?)
- Aufgabe 1: Pseudo-Code zum {\"o}ffnen einer Datei
- Aufgabe 2: wie 1 nur in VS
- Aufgabe 3: Umgang mit ausgedachter API
- Aufgabe 4: Behebung eines Bugs in einem 100-Zeiler, der einmal im Konstruktor und einmal in einem setter vorhanden war
- Aufgabe 5: Test von convenience construktoren
- Aufgabe 6: Analyse eines ausgedruckten Programm mit Booleans im Konstruktor

- Think-aloud, semi-transparenter Spiegel
- Ergebnis: create-set-call wurde bevorzugt und war weniger problematisch
- opportunistic: mehr auf Produktivit{\"a}t aus
- pragmatic: empfanden zu viele Stolpersteine, konnten aber besser als opportunistic umgehen
- systematic: Bevorzugung wegen h{\"o}herer Freiheitsgrade

Im Interview haben sich alle Teilnehmer f{\"u}r create-set-call ausgesprochen:
- Initialisierungs-flexibilit{\"a}t
- weniger restriktiv (API sollte Anwender {\"u}berlassen, wie er etwas erledigt)
- konsistent: viele APIs verwenden Parameterlose Konstruktoren; das sollten dann auch andere tun
- mehr Kontrolle: Fehlerbehandlung je setter und nicht nur eine Exception f{\"u}r den gesamten Konstruktor

Vorteile von create-set-call f{\"u}r:
opportunistic: wichtig, da sonst zu schwierig
pragmatic: einfach nur effizienter
systematic: h{\"o}here Flexibilit{\"a}t

reuqire constructors f{\"u}hren zu:
- gr{\"o}{\ss}erer work-step unit
- st{\"a}rkerem premature commitment
- verringerung von diffuseness

Weitere Beobachtungen:
- von opportunisten und pragmatics h{\"a}ufig die Annahme, dass compiler-errors was mit Syntax und runtime-errors was mit semantik zu tun haben
- Autoren sprechen sich daher daf{\"u}r aus, aus manchen Kompiler-Fehlern Runtime-Fehler zu machen oder einen Explorationsmodus einzuf{\"u}hren, wo Compiler-Fehler nicht auftauchen und einen "spot check"-Modus bei dem sie auftauchen}
}

@inproceedings{Bruch:2006bv,
author = {Bruch, Marcel and Sch{\"a}fer, Thorsten and Mezini, Mira},
title = {{FrUiT: IDE support for framework understanding}},
booktitle = {eclipse '06: Proceedings of the 2006 OOPSLA workshop on eclipse technology eXchange},
year = {2006},
pages = {55--59},
publisher = {~ACM},
address = {New York, New York, USA},
month = oct,
annote = {Eclipse-Plugin:
- Gibt Regeln mit Wahrscheinlichkeiten an, wie man jetzt fortfahren sollte
- Z.B. wenn ich ein SWT Composite erzeuge, wird mir mit 94\% Wahrscheinlichkeit empfohlen, .setLayout darauf aufzurufen

- Kontext = Dokument (schlecht)
- Regeln automatisch generiert

- Evaluation sehr mager}
}

@inproceedings{clarke:2006,
author = {Clarke, Steven},
title = {{Describing and measuring API usability with the cognitive dimensions}},
booktitle = {Cognitive Dimensions of Notations 10th Anniversary Workshop},
year = {2005},
annote = {Cognitive Dimensions framework basieren auf dem f{\"u}r Notations
- zur Evaluation von API Usability
- f{\"u}r .NET und WinFX verwendet von Microsoft
- Experiment mit 6 Monate Pause f{\"u}r Verbesserungen: 2h auf 0:30h

- Video- und Audio-Aufzeichungen
- 3 Personas geeicht auf Visual Studio-Anwenderschaft}
}

@webpage{Schmidt:2014tf,
author = {Schmidt, Julia},
title = {{C++17 soll Gro{\ss}es bringen}},
year = {2014},
month = aug,
url = {http://www.heise.de/newsticker/meldung/C-17-soll-Grosses-bringen-2300999.html?wt_mc=rss.ho.beitrag.atom}
}

@article{Parnas:1972gp,
author = {Parnas, D L},
title = {{On the criteria to be used in decomposing systems into modules}},
journal = {Communications of the ACM},
year = {1972},
volume = {15},
number = {12},
pages = {1053--1058},
annote = {Information Hiding}
}

@incollection{Jeong:kf,
author = {Jeong, Sae Young Sophie and Xie, Yingyu Clare and Beaton, Jack and Myers, Brad A and Stylos, Jeffrey and Ehret, Ralf and Karstens, Jan and Efeoglu, Arkin and Busse, Daniela K},
title = {{Improving Documentation for eSOA APIs through User Studies}},
booktitle = {Human-Centered Software Engineering},
year = {2009},
pages = {86--105},
publisher = {Springer Berlin Heidelberg},
address = {Berlin, Heidelberg},
annote = {Verbesserung einer API Dokumentation f{\"u}r SOA
Besonderheit: Doku richtet sich an business experts und professional programmers

- Verschiedene Strategien
- Business Experts konnten {\"a}hnliche Services nicht unterscheiden
- Professional Programmers hatten Probleme mit Business Terminology

Empfehlungen:
- Konsistentes Aussehen
- Grafischer {\"U}berblick (Art wie Klassendiagramm - Fig. 1)
- Startpunkte erkl{\"a}ren
- Bread crumb navigation
- Beispiele
- Sehr gute Suchfunktion
- Diagramme benutzen, von denen man wei{\ss}, dass die Anwender sie lesen k{\"o}nnen
- Diagramme und Text anbieten
- "esoterische" interessant klingende Namen vermeiden, da sie - unabh{\"a}ngig von ihrer aktuellen Relevanz - die Aufmerksamkeit auf sich ziehen
- Existenziell wichtige Terminology muss erkl{\"a}rt werden
- Parameter besonder herausstellen
- Vergleich von Diensten erlauben
- Klare Namen
- Verwandte Dienste nennen
- Beispiele nennen
- Online Test-Funktion bereitstellen}
}

@article{Shneiderman:1977jj,
author = {Shneiderman, Ben},
title = {{Measuring computer program quality and comprehension}},
journal = {International Journal of Man-Machine Studies},
year = {1977},
volume = {9},
pages = {465--478},
month = 1977/07//
}

@book{corbin2014basics,
author = {Corbin, Juliet M and Strauss, Anselm Leonard},
title = {{Basics of Qualitative Research: Techniques and Procedures for Developing Grounded Theory}},
publisher = {SAGE Publications},
year = {2014}
}

@article{Wiedenbeck:1986fc,
author = {Wiedenbeck, Susan},
title = {{Beacons in computer program comprehension}},
journal = {International Journal of Man-Machine Studies},
year = {1986},
volume = {25},
number = {6},
pages = {697--709},
month = dec
}

@inproceedings{Ye:2002fd,
author = {Ye, Yunwen and Fischer, Gerhard},
title = {{Supporting reuse by delivering task-relevant and personalized information}},
booktitle = {ICSE '02: Proceedings of the 24th International Conference on Software Engineering},
year = {2002},
pages = {513},
publisher = {~ACM},
address = {New York, New York, USA},
month = may,
annote = {Code-Wiederverwendung
technisch, kognitiv und sozial schwierig

-{\&}gt; Entwicklung eines theoretisch und technisch anspruchsvollen Tools "reuse repository systems" "CodeBroker"
- Verwendung bereits geschriebene Code-Teile zur Suche in "reuse repository"
-{\&}gt; damit erh{\"a}lt man relevante Code-Schnipsel
- au{\ss}erdem Auswahl basieren auf Hintergrund wissen (hier nur "well known" und "vaguely known", damit Programmierer Beispiel {\"u}berhaupt richtig verwenden kann
-- basierend auf Heuristiken
-- basierend auf bereits geschriebenen Code
-- basierend auf den Aufruf von Methoden}
}

@inproceedings{Correia:2010bx,
author = {Correia, Filipe Figueiredo and Aguiar, Ademar and Ferreira, Hugo Sereno and Flores, Nuno},
title = {{Patterns for consistent software documentation}},
booktitle = {PLoP '09: Proceedings of the 16th Conference on Pattern Languages of Programs},
year = {2009},
pages = {1},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = aug,
annote = {Haben 4 Klassen von Ursachen / Patterns f{\"u}r inkonsistente Doku gefunden:
1) Information Proximity
- unterschiedliche Quellen adressieren gleiches Thema aus unterschiedlichen Sichten
- nach einiger Zeit entstehen Widerspr{\"u}che, Dopplungen und {\"U}berschneidungen
- Frage: Wie bleibt man konsistent, obwohl Information verstreut sind?

2) Co-Evolution
- {\"a}hnlich nur mit der Frage, wann man betroffene andere Dokumente an {\"A}nderung anpasst

3) Domain-Structured Information
- text-orientierte Struktur ({\"U}berschriften, Paragrafen, etc.)
- Relationen werden nicht explizit erfasst

4) Integrated Environment
- IDE bieten keine Unterst{\"u}tzung bzw. Zusammenarbeit wenn mehrere Tools involiert sind}
}

@inproceedings{Cao:2010ku,
author = {Cao, Jill and Riche, Yann and Wiedenbeck, Susan and Burnett, Margaret M and Grigoreanu, Valentina},
title = {{End-user mashup programming: through the design lens}},
booktitle = {CHI '10: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
year = {2010},
publisher = {~ACM  Request Permissions},
month = apr,
annote = {Designtheorie-basierte Untersuchung von end-user programmern
- Anwendung von Reflection-in-action-Modell
- Anwendung der ideation-Notation
- 10 Teilnehmer, die Web Mashup bauen sollten

- Eine Feststellung:
-- Anwender m{\"u}ssen einfach rumspielen k{\"o}nnen, um zu reflektieren und L{\"o}sungsalternativen explorieren zu k{\"o}nnen}
}

@book{boehm1981software,
author = {Boehm, Barry W},
title = {{Software Engineering Economics}},
publisher = {Prentice Hall},
year = {1981},
annote = {Zitierquelle f{\"u}r: Rule of Ten / Zehnerregel der Fehlerkosten}
}

@webpage{Adobe:2010vn,
author = {{Adobe}},
title = {{Kuler}},
year = {2010},
url = {http://kuler.adobe.com/}
}

@webpage{Pugh:Ks4cicwp,
author = {Pugh, Ken},
title = {{Interface-Oriented Design (Pragmatic Programmers)}},
year = {2006},
month = jul,
annote = {Praktisches aber dennoch technisch orientiertes Buch zu Interface (= API) Design

Kleiner aber rein erfahrungsbasierter Abschnitt zum Thema der Komplexit{\"a}t einer API (ab S. 63)

Nur ein Hinweis auf Usability; Test-Driven entwickeln, um Usability sicher zu stellen},
url = {http://www.amazon.de/Interface-Oriented-Design-Pragmatic-Programmers-Pugh/dp/0976694050}
}

@article{Brooks:1983fj,
author = {Brooks, Ruven E},
title = {{Towards a Theory of the Comprehension of Computer Programs.}},
journal = {International Journal of Man-Machine Studies},
year = {1983},
volume = {18},
number = {6},
pages = {543--554},
annote = {Theorie zum Erkl{\"a}ren von Programmverstehen
Faktoren
- Programmaufgabe (Zweck) - obwohl Programmkomplexit{\"a}t, -L{\"a}nge usw. identisch sind
- intrinsische Eigenschaften des Codes (Sprache, Doku)
- Aufgabentyp ({\"A}ndern, Debuggen, etc.)
- Unterschied zwischen Individuen der Anwenderschaft

Verstehensprozess
- Br{\"u}cke zwischen Code und urspr{\"u}nglichem Problem (also nach \cite{BenShneiderman:gn} Syntax und Semantik) wird rekonstruiert (kann mehrere Zwischenebenen / Abstratkionen umfassen)
- top-down (also von Dom{\"a}ne bis hin zum Programm)
- Hypothesen/Erwartungs-getrieben (konkretisiert sich)}
}

@article{Larman:2001dt,
author = {Larman, Craig},
title = {{Protected Variation: The Importance of Being Closed}},
journal = {IEEE Software},
year = {2001},
volume = {18},
number = {3},
pages = {89--91},
annote = {Information hiding is PV, not data encapsulation}
}

@book{Hartman:1991vt,
author = {Hartmann, Petra},
title = {{Wunsch und Wirklichkeit}},
publisher = {Deutscher Universit{\"a}tsverlag},
year = {1991},
series = {Theorie und Empirie sozialer Erw{\"u}nschtheit},
address = {Wiesbaden}
}

@book{hansen2013bioinformatik,
author = {Hansen, A},
title = {{Bioinformatik: Ein Leitfaden f{\"u}r Naturwissenschaftler}},
publisher = {Birkh{\"a}user Basel},
year = {2013}
}

@phdthesis{GogolDoring:2009vz,
author = {Gogol-D{\"o}ring, Andreas},
title = {{SeqAn - A Generic Software Library for Sequence Analysis}},
year = {2009},
address = {Freie Universit{\"a}t Berlin},
month = nov,
annote = {Usability-Nachweis

- 14.2 Verwendung in anderen Arbeiten derselben Arbeitsgruppe (Bioinformatiker, die im direkten Kontakt zu Gogol standen!)

- 14.1 Compliance to design
-- Core-Design auf einer Handvoll von Techniken
-- jede Technik "limited complexity"
-- "our approach may be not as common for most programmers" wie OOP
-- Fehlermeldungen immer noch "ziemlich" verst{\"a}ndlich
-- Vereinfachung durch template subclassing
-- "Shortcuts for frequently used classes"

- 15 Neuimplementierung von LAGAN (Brudno et al. 2003)

 }
}

@book{cwalina2008framework,
author = {Cwalina, Krzysztof and Abrams, Brad},
title = {{Framework design guidelines: conventions, idioms, and patterns for reusable. net libraries}},
publisher = {Pearson Education},
year = {2008}
}

@book{Bamberg:2011tv,
author = {Bamberg, Eva and Mohr, Gisela and Busch, Christian},
title = {{Arbeitspsychologie}},
publisher = {Hogrefe Verlag},
year = {2011},
annote = {Quelle f{\"u}r Vollst{\"a}ndigkeit einer Arbeitsaufgabe}
}

@misc{Blackwell:2007uy,
title = {{A Cognitive Dimensions Questionnaire}},
author = {Blackwell, Alan F and Green, Thomas R G},
year = {2007}
}

@inproceedings{Karat:1992:CET:142750.142873,
author = {Karat, Claire-Marie and Campbell, Robert and Fiegel, Tarra},
title = {{Comparison of empirical testing and walkthrough methods in user interface evaluation}},
booktitle = {CHI '92 Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
year = {1992},
pages = {397--404},
publisher = {ACM},
address = {Monterey, California, USA}
}

@inproceedings{DonRoberts:q5BCNI-K,
author = {Don Roberts, Ralph Johnson},
title = {{Evolving Frameworks: A Pattern Language for Developing Object-Oriented Frameworks}},
booktitle = {Proceedings of the Third Conference on Pattern Languages and Programming},
year = {1996}
}

@book{Sarodnick:2006vc,
author = {Sarodnick, Florian and Brau, Henning},
title = {{Methoden der Usability Evaluation: Wissenschaftliche Grundlagen und praktische Anwendung}},
publisher = {Verlag Hans Huber, Hogrefe AG},
year = {2006},
address = {Bern},
edition = {1. Auflage}
}

@inproceedings{SIGCHI:2009up,
author = {Farooq, Umer and Zirkler, Dieter},
title = {{Scaling API Design Knowledge in Large Software Organizations}},
booktitle = {CSCW '10: Proceedings of the 2010 ACM conference on Computer supported cooperative work},
year = {2009},
month = dec,
annote = {Heben Wichtigkeit hervor und 4 Ma{\ss}nahme {\"u}ber Usability-Verbesserung:

1) Usability-Studien (Empirie)
2) Peer Reviews ({\"a}hnlich CWT)
3) Cognitive Dimensions}
}

@article{Sillitti:2003tt,
author = {Sillitti, A and Janes, A and Succi, G and Vernazza, T},
title = {{Collecting, integrating and analyzing software metrics and personal software process data}},
journal = {Euromicro Conference on Software Engineering and Advanced Applications. Proceedings},
year = {2003},
pages = {336--342},
month = sep
}

@inproceedings{deSouza:ek,
author = {de Souza, C R B and Bentolila, D L M},
title = {{Automatic evaluation of API usability using complexity metrics and visualizations}},
booktitle = {ICSE-Companion 2009. 31st International Conference on Software Engineering - Companion Volume, 2009},
year = {2009},
pages = {299--302}
}

@inproceedings{DualaEkoko:2012tk,
author = {Duala-Ekoko, Ekwa and Robillard, Martin P},
title = {{Asking and answering questions about unfamiliar APIs: An exploratory study}},
booktitle = {ICSE '12: Proceedings of the 34th International Conference on Software Engineering},
pages = {266--276},
publisher = {IEEE},
annote = {Ziel: Verbesserung von Tool-Support

Methode: Videoaufzeichnungen von 20 Entwicklern, die mit zwei realen APIs Programmieraufgaben l{\"o}sen mussten (= 40 Aufzeichnungen)

Ergebnis: 20 Fragetypen, die gestellt werden, um unbekannte API zu verstehen (p.269)

F{\"u}nf schwierigsten Fragen:
<b>Q.6 </b>Which keywords best describe a functionality provided by the API? <b>Q.7 </b>How is the type X related to the type Y? <b>Q.11 </b>Does the API provide a helper-type for manipulating objects of a given type?
<b>Q.12 </b>How do I create an object of a given type without a public constructor? <b>Q.20 </b>How do I determine the outcome of a method call?}
}

@inproceedings{EndUserSoftwareEn:2012wp,
author = {Dwivedi, Vishal and Elizondo, Perla Velasco and Fernandes, Jose Maria and Schmerl, Bradley},
title = {{End User Software Engineering}},
booktitle = {Human Aspects for Software Development},
year = {2012}
}

@article{Mayhew:1987:APC:44665.44666,
author = {Mayhew, P. J. and Dearnley, P. A.},
title = {{An alternative prototyping classification}},
journal = {The Computer Journal},
year = {1987},
volume = {30},
pages = {481--484},
month = dec
}

@article{Robillard:2009cs,
author = {Robillard, Martin P},
title = {{What Makes APIs Hard to Learn? Answers from Developers}},
journal = {IEEE Software},
year = {2009},
volume = {26},
number = {6},
pages = {27--34},
month = dec,
annote = {1000 zuf{\"a}llig ausgew{\"a}hlte Microsoft-Entwickler -{\&}gt; Survey zum Thema Lernhindernisse;
83 Antworten; repr{\"a}sentative Verteilung bzgl. Microsoft-Softwareentwickler

- Bereitstellung von Lernressourcen genauso wichtig wie die API
- wichtig: Designentscheidung auf Startseite der Doku erl{\"a}utern}
}

@book{Glaser:1967ts,
author = {Glaser, Barney G and Strauss, Anselm Leonard},
title = {{The Discovery of Grounded Theory: Strategies for Qualitative Research}},
publisher = {Aldine de Gruyter},
year = {1967},
address = {New York, NY}
}

@inproceedings{Crosby02theroles,
author = {Crosby, Martha E and Scholtz, Jean and Wiedenbeck, Susan},
title = {{The Roles Beacons Play in Comprehension for Novice and Expert Programmers}},
booktitle = {PPIG 2002 - Programmers, 14th Workshop of the Psychology of Programming Interest Group},
year = {2002},
pages = {18--21},
organization = {Brunel University}
}

@book{Nielsen:1994tx,
author = {Nielsen, Jakob and Mack, Robert L},
title = {{Usability Inspection Methods}},
publisher = {Wiley John + Sons},
year = {1994},
address = {New York}
}

@article{Corritore:1999bd,
author = {Corritore, Cynthia and Wiedenbeck, Susan},
title = {{Mental representations of expert procedural and object-oriented programmers in a software maintenance task}},
journal = {International Journal of Human-Computer Studies},
year = {1999},
volume = {50},
number = {1},
pages = {61--83},
month = jan,
annote = {Nur relevant, weil dort Brooks und Pennington verglichen werden}
}

@inproceedings{Tenny:2011jp,
author = {Gerken, Jens and Jetter, Hans-Christian and Z{\"o}llner, Michael and Mader, Martin and Reiterer, Harald},
title = {{The concept maps method as a tool to evaluate the usability of APIs}},
booktitle = {CHI '11 Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
year = {2011},
pages = {3373},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = may,
annote = {Methode zum Evaluieren von API
- usability issues
- learning barriers
- Entwicklung der Usability {\"u}ber die Zeit}
}

@inproceedings{Nielsen:1990bw,
author = {Nielsen, Jakob and Molich, Rolf},
title = {{Heuristic evaluation of user interfaces}},
booktitle = {CHI '90: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
year = {1990},
pages = {249--256},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = mar
}

@incollection{Letondal:2006dy,
author = {Letondal, Catherine},
title = {{Participatory Programming: Developing Programmable Bioinformatics Tools for End-Users}},
booktitle = {Human-Computer Interaction Series},
year = {2006},
pages = {207--242},
publisher = {Springer Netherlands},
address = {Dordrecht},
annote = {Zu schnelle Entwicklung in der Bioinformatik (gr{\"o}{\ss}ere Datenmengen, neue Algorithmen, neue Hypothesen) -> Anwenderfreundliche Entwicklung kommt nicht nach
-> mehr Programmiernotwendigkeit auf Entwicklerseite -> Bioinformatiker m{\"u}ssen programmieren
Existierende Tools unzureichend
- General-Purpose Language (anstelle einer DSL/EUP language) stellt keine Probleme f{\"u}r Bioinformatiker dar
- Partizipation (at design time) hier: Code-{\"A}nderungen an der Software werden von Entwicklern in die Hauptversion aufgenommen oder in den Workshops besprochen
- Bioinformatiker haben wenig SE-Kenntnisse; sie k{\"o}nnen programmieren, aber nicht im gro{\ss}en (daher macht SeqAn Sinn, wo ja nur Glue Code geschrieben wird)
- H{\"a}ufiges Bed{\"u}rfnis, existierendesn Tool anzupassen (spricht auch f{\"u}r SeqAn)
WICHTIG f{\"u}r SeqAn: D{\"o}ring hatte beabsichtigt, dass SeqAn erweitert wird (mittels Template Mechanismus). Das ist in den Daten aber nicht zu sehen. Da wird nur Glue Code geschrieben. Letondal best{\"a}tigt das. Bioinformatiker bei ihr haben auch nur {\"A}nderungen an Code vorgenommen, der sie selbst kontrollieren. Selbst das {\"U}berschreiben von Methoden kam denen nicht in den Sinn.
- The PITUI (Programming In The User Interface) approach enables incremental programming and progressive learning [\citep{Carroll:1990ex}].
- Klassen werden auch grafisch dargestellt (was dazu f{\"u}hrt, dass ein Entwickler statt "Class" auch "Frame" sagte)
-- genauere Details hierzu fehlen aber im Paper}
}

@article{Blais:2015tw,
author = {Blais, Christopher M and White, Janet L},
title = {{Bioethics in practice - a quarterly column about medical ethics: ebola and medical ethics - ethical challenges in the management of contagious infectious diseases.}},
journal = {The Ochsner journal},
year = {2015},
volume = {15},
number = {1},
pages = {5--7}
}

@article{Schank:1993kk,
author = {Schank, Patricia K and Linn, Marcia C and Clancy, Michael J},
title = {{Supporting Pascal programming with an on-line template library and case studies}},
journal = {International Journal of Man-Machine Studies},
year = {1992},
volume = {38},
number = {6},
pages = {1031--1048},
month = dec,
annote = {Stellen "template library" (Code-Templates) als gute Repr{\"a}sentation von Programmierwissen vor.

Hier: Pascal
Getestet an Anf{\"a}ngern, Fortgeschritten und Experten

Fragestellungen:
"How do subjects  organize templates?"
"How well can subjects understand and locate templates in the template library?"
"Does the template library help subjects reuse templates to solve new problems?"

Nutzen nachgewiesen;
Alternativen werden nicht diskutiert

-{\&}gt; SeqAn: Online-Dokumentations-Beispiele und Tutorials k{\"o}nnen als Template Library aufgefasst werden. Insbesondere die Tutorials erf{\"u}llen den Zweck, semantisch geb{\"u}ndelter Beispiel-Codes wie die Notwendigkeit auch von Pennington betont wird}
}

@inproceedings{161956,
author = {Blackwell, Alan F and Green, Thomas R G},
title = {{A Cognitive Dimensions Questionnaire Optimised for Users}},
booktitle = {PPIG 2000: Proceedings of the Twelth Annual Meeting of the Psychology of Programming Interest Group},
year = {2000},
pages = {137--152},
annote = {Autoren haben einen Fragebogen erarbeitet, der ein breites Spektrum an System untersucht, mit denen sich Produkte erstellen lassen.

Basieren auf Fortentwicklung (vermutlich Green {\&}amp; Blackwell 1998) des CD von Green (1989).

 M{\"o}glichere Fragebogen-Vorlage f{\"u}r Workshop'13
-{\&}gt; wenn dann aber nur den Nachfolger!

Unklar, ob die Rede von Notation oder System ist!
Beispiel:
{\"U}berschrift "Section 4 - Questions about the main notation" und gleich danach "encouraging the respondent to identify fatures of the system that are relevant to each dimension"
oder auch "Premature Commitment" -{\&}gt; "{\ldots} or dos the system force you to think ahead{\ldots}"}
}

@article{Dan:2007hx,
author = {van der Horst, Dan},
title = {{NIMBY or not? Exploring the relevance of location and the politics of voiced opinions in renewable energy siting controversies}},
journal = {Energy Policy},
year = {2007},
volume = {35},
number = {5},
pages = {2705--2714},
month = may
}

@inproceedings{deSouza:2004:SYN:1031607.1031620,
author = {de Souza, Cleidson R B and Redmiles, David and Cheng, Li-Te and Millen, David and Patterson, John},
title = {{Sometimes You Need to See Through Walls: A Field Study of Application Programming Interfaces}},
booktitle = {Proceedings of the 2004 ACM Conference on Computer Supported Cooperative Work},
year = {2004},
pages = {63--71},
publisher = {ACM},
address = {New York, NY, USA}
}

@article{MuhlmeyerMentzel:2011vs,
author = {M{\"u}hlmeyer-Mentzel, A},
title = {{The logical structure of data in ATLAS. ti and its advantage for grounded theory studies}},
journal = {Forum Qualitative Sozialforschung / Forum: Qualitative Social Research},
year = {2011},
volume = {12},
number = {1},
month = jan
}

@inproceedings{Cook:1995gi,
author = {Cook, Jonathan E and Wolf, Alexander L},
title = {{Automating process discovery through event-data analysis}},
booktitle = {ICSE '95: Proceedings of the 17th international conference on Software engineering},
year = {1995},
pages = {73--82},
publisher = {ACM Press},
address = {New York, New York, USA}
}

@misc{AnIntroductiontot:1996ux,
title = {{An Introduction to the Cognitive Dimensions Framework}},
author = {Green, Thomas R G},
howpublished = {MRC Applied Psychology Unit, 15 Chaucer Road, Cambridge CB2 2EF, UK},
month = nov,
year = {1996}
}

@inproceedings{Watson:2009bm,
author = {Watson, Robert B},
title = {{Improving software API usability through text analysis: A case study}},
booktitle = {2009 IEEE International Professional Communication Conference},
year = {2009},
pages = {1--7},
publisher = {IEEE},
annote = {Verbesserung einer API mittels "technical communications skills and tools"
- Signaturen extrahiert
- und auf "Konsistenz" {\"u}berpr{\"u}ft wie in CD definiert
- mittels Vorerfahrung sensibel f{\"u}r Inkonsistenzen gewesen
- keine Validierung}
}

@article{Lyytinen:1987:DPI:28865.28867,
author = {Lyytinen, Kalle},
title = {{Different perspectives on information systems: problems and solutions}},
journal = {ACM Computing Surveys},
year = {1987},
volume = {19},
number = {1},
pages = {5--46},
month = mar
}

@article{Souza:2009:RAC:1666305.1666318,
author = {de Souza, Cleidson R B and Redmiles, David F},
title = {{On The Roles of APIs in the Coordination of Collaborative Software Development}},
journal = {Computer Supported Cooperative Work (CSCW)},
year = {2009},
volume = {18},
number = {5-6},
pages = {445--475}
}

@article{RASMUSSENJ.:1983,
author = {Rasmussen, Jens},
title = {{Knowledge Signals, Signs, and Symbols and Other Distinctions in Human Performance Models}},
journal = {IEEE Systems, Man, and Cybernetics Society},
year = {1983},
pages = {257--267}
}

@booklet{AComparisonofHeur:1993vv,
title = {{A Comparison of Heuristic Evaluation and Usability Testing}},
author = {Dykstra, Dean Julian},
howpublished = {A {\&} M University, Texas},
year = {1993}
}

@article{Robillard:2010bh,
author = {Robillard, Martin P and DeLine, Robert},
title = {{A field study of API learning obstacles}},
journal = {Empirical Software Engineering},
year = {2010},
volume = {16},
number = {6},
pages = {703--732},
annote = {- explorative Umfrage
- qualitative interviews
- follow-up survey zur Sammlung von Meinungen und Erfahrungen (440 Entwickler)

Am wichtigsten: Dokumentation
Wichtige Einflussfaktoren
- documentation of intent
- code examples
-- dienen der Illustration
- matching APIs with scenarios
-- upwars
--- problem domain -{\&}gt; implementation
--- was soll die API {\"u}berhaupt k{\"o}nnen und was nicht
-- downwards
--- wie arbeitet API
- penetrability of the API
- format and presentation
-- viel an einer Stelle, wenig verlinkung bevorzugt

Literaturzusammenfassung
-------
- Viele Studien best{\"a}tigen Wichtigkeit von Beispielen beim Lernprozess
- Sillito (2008) + Ko (2007) zeigen, dass Mapping von Library nach Szenario wichtig ist}
}

@inproceedings{Holmes:2005cm,
author = {Holmes, Reid and Murphy, Gail C},
title = {{Using structural context to recommend source code examples}},
booktitle = {ICSE '05: Proceedings of the 27th international conference on Software engineering},
year = {2005},
pages = {117},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = may,
annote = {Elipse-Plugin, dass basierend auf aktuellem Kontext Code-Beispiele bereitgestellt.

Vorteile zu bisherigen L{\"o}sungen:
- Automatische Erkennung des Kontexts
- Automatische Erzeugung von Code-Beispielen}
}

@article{Tenny:1988ir,
author = {Tenny, T},
title = {{Program Readability: Procedures Versus Comments}},
journal = {IEEE Transactions on Software Engineering},
year = {1988},
volume = {14},
number = {9},
pages = {1271--1279},
month = sep,
annote = {<b>2x2 Vergleich: </b>Programme mit und ohne Prozeduren (mit guter Benennung) und mit und ohne Kommentare

Studenten sollten im Anschluss Fragen beantworten k{\"o}nnen
Beispiele, Benamung
Bestes Verst{\"a}ndnis wenn gute Benamung, (Kapselung) und Kommentare vorliegen

}
}

@webpage{Day:2000wo,
author = {Day, M. and {Lotus} and Aggarwal, S. and {Microsoft} and Mohr, G. and {Activerse} and Vincent, J. and Networks, Into},
title = {{RFC 2779 - Instant Messaging / Presence Protocol Requirements}},
year = {2000},
url = {http://tools.ietf.org/html/rfc2779}
}

@webpage{sunshine2014searching,
author = {Sunshine, Joshua and Herbsleb, James D and Aldrich, Jonathan},
title = {{Searching the State Space: A Qualitative Study of API Protocol Usability}},
year = {2014},
annote = {Studie zur APIs, die Protokolle umsetzen

Verwendet open coding nach Strauss 87},
url = {http://www.cs.cmu.edu/~jssunshi/pubs/icse14-searching.pdf}
}

@inproceedings{Carroll:1990ex,
author = {Carroll, John M and Singer, Janice A and Bellamy, Rachel K E and Alpert, Sherman R},
title = {{A view matcher for learning Smalltalk}},
booktitle = {CHI '90: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
year = {1990},
publisher = {~ACM  Request Permissions},
month = mar,
annote = {nur zum zitieren}
}

@webpage{Juntke:2011uz,
author = {Juntke, Katrin},
title = {{Brandenburgische Technische Universit{\"a}t Cottbus: Kooperative Forschungsstelle Technikstress startet an der BTU Cottbus}},
year = {2011},
url = {http://www.tu-cottbus.de/btu/en/university/press-public-relations/presseinformationen/einzelansicht.html?tx_ttnews%5Btt_news%5D=650&cHash=a5ef0fe09a6da82e97df0c6ec9fd075d}
}

@webpage{Wolf:2014vv,
author = {Wolf, Nicholas},
title = {{Using Quotation Names for Coding: An Illustration From Grounded Theory}},
year = {2014},
month = mar,
url = {https://atlastiblog.wordpress.com/2014/03/26/1608/}
}

@webpage{Allan:2011tn,
author = {Allan, Alasdair and Warden, Pete},
title = {{iPhone Tracker}},
year = {2011},
url = {http://petewarden.github.com/iPhoneTracker/}
}

@book{bryant2010sage,
author = {Bryant, Antony and Charmaz, Kathy},
title = {{The SAGE Handbook of Grounded Theory: Paperback Edition}},
publisher = {SAGE Publications},
year = {2010}
}

@incollection{Roberts:1997tt,
author = {Roberts, Don and Johnson, Ralph E},
title = {{Patterns for evolving frameworks}},
booktitle = {Pattern languages of program design 3},
year = {1997},
editor = {Martin, Robert C and Riehle, Dirk and Buschmann, Frank},
pages = {471--486},
publisher = {Addison-Wesley Longman Publishing Co., Inc.},
address = {Boston, MA, USA}
}

@book{shneiderman2009designing,
author = {Shneiderman, Ben and Plaisant, C.},
title = {{Designing the user interface: strategies for effective human-computer interaction}},
publisher = {Addison-Wesley},
year = {2009}
}

@book{Schmidt:2010vu,
author = {Schmidt, Robert F and Lang, Florian and Heckmann, Manfred},
title = {{Physiologie des Menschen: mit Pathophysiologie mit Repetitorium (Springer-Lehrbuch) (German Edition)}},
publisher = {Heidelberg Springer-Medizin-Verlag},
year = {2010},
edition = {31}
}

@article{10.1109/ICRE.2004.1335679,
author = {Van, Hung Tran and van Lamsweerde, Axel and Massonet, Philippe and Ponsard, Christophe},
title = {{Goal-Oriented Requirements Animation}},
journal = {Requirements Engineering, IEEE International Conference on},
year = {2004},
volume = {0},
pages = {218--228}
}

@article{Walbot:2009ek,
author = {Walbot, Virginia},
title = {{Are we training pit bulls to review our manuscripts?}},
journal = {Journal of biology},
year = {2009},
volume = {8},
number = {3},
pages = {24--24}
}

@article{BenShneiderman:gn,
author = {Shneiderman, Ben and Mayer, Richard},
title = {{Syntactic/semantic interactions in programmer behavior: A model and experimental results}},
journal = {International Journal of Computer {\&} Information Sciences},
year = {1979},
volume = {8},
number = {3},
pages = {219--238},
month = jun,
annote = {Cognitive framework
- describes
  - program composition
  - program comprehension
  - program debugging
  - program modification
  - learning (skillsm knowledge)
 - acquisition of
  - new programming concepts
  - new programming skills
  - new programming knowledge

Kurzzeitged{\"a}chtnis
- about 7 Chunks
- Informationen aus der Au{\ss}enwelt wie Beschreibungen, was noch zu programmieren ist

Langzeitged{\"a}chtnis:
- Ablage von dauerhaften wissen
- Unendlich gro{\ss}

Arbeitsged{\"a}chtnis:
- etwas dazwischen
- Integration von Wissen und Kurz- u. Langzeitged{\"a}chtnis

Welche Kognitiven Strukturen gibt es?
Welche Integrationsprozesse gibt es?

Semantisches Wissen
- gro{\ss}e Spanne (Assignment bis Flugsicherung)
- generalisierbar

Syntaktischen Wissen
- konkret
- leicht verg{\"a}sslich
- weniger generalisierbar

Haben selbst eine Handvoll Experimente (kontrolliert) durchgef{\"u}hrt, wo sie Aussagen zu sinnvollen Variablennamen, high-level comments etc. machen}
}

@webpage{Neumann:vy6wwkpV,
author = {Neumann, Alexander},
title = {{Verbesserter Bing Developer Assistant f{\"u}r Visual Studio}},
year = {2014},
month = aug,
url = {http://m.heise.de/developer/meldung/Verbesserter-Bing-Developer-Assistant-fuer-Visual-Studio-2296224.html?wt_mc=rss.developer.beitrag.atom&from-classic=1}
}

@webpage{Microsoft:c8ZOTiXm,
author = {{Microsoft}},
title = {{Bing Developer Assistant Beta}},
year = {2014},
month = aug,
url = {http://visualstudiogallery.msdn.microsoft.com/a1166718-a2d9-4a48-a5fd-504ff4ad1b65}
}

@article{Gross:2010iz,
author = {Gross, Paul and Kelleher, Caitlin},
title = {{Non-programmers identifying functionality in unfamiliar code: strategies and barriers}},
journal = {Journal of Visual Languages {\&} Computing},
year = {2009},
volume = {21},
number = {5},
pages = {263--276},
month = dec,
annote = {Explorative Studie zu der Frage, wie End-User Programmers Code-Beispiele finden und anpassen

Beschreibung der Strategien und Probleme bei der Suche mittels zwei Modellen:
1) Task Process Model
2) Landmark-Mapping model

WAHRSCHEINLICH RELEVANT F{\"U}R SEQAN ALS ERKL{\"A}RUNG

Schlussgefolderte Guidelines f{\"u}r IDE:
- Erm{\"o}glichung der Interpretation mittels sichtbarer Funktionalit{\"a}t (Mapping von Code zu Output)
- Sichtbarmachung von execution flow (Anwender sehen alle Statements als Sequenz oder verstehen nichts)
- Bereitstellung von Navigationsm{\"o}glichkeit durch den Code
- Code-Ausf{\"u}hrung von schlechten Code-Snippets aus dem Netz, um besser Funktion z.B. bei schlechter Namensgebung zu verdeutlichen}
}

@webpage{Venkataramana:2005wl,
author = {Venkataramana, M.},
title = {{Best practices in JFace TreeViewer usage}},
year = {2005},
url = {http://www.eclipsezone.com/eclipse/forums/t53983.html}
}

@inproceedings{deSouza:2008:ESS:1368088.1368122,
author = {de Souza, Cleidson R B and Redmiles, David F},
title = {{An empirical study of software developers' management of dependencies and changes}},
booktitle = {ICSE '08: Proceedings of the 30th international conference on Software engineering},
year = {2008},
pages = {241},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = may
}

@inproceedings{Giannotti:1987iy,
author = {Giannotti, Elena},
title = {{Algorithm animator: a tool for programming learning}},
booktitle = {SIGCSE '87: Proceedings of the eighteenth SIGCSE technical symposium on Computer science education},
year = {1987},
pages = {308--314},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = feb
}

@webpage{Beecher:2011va,
author = {Beecher, Karl and Prechelt, Lutz},
title = {{Getting Started with Saros}},
year = {2011},
url = {http://www.saros-project.org/GettingStarted}
}

@webpage{Boehm:2003tc,
author = {Boehm, Andreas and Legewie, Heiner and Muhr, Thomas},
title = {{Kursus Textinterpretation: Grounded Theory
}},
year = {2003},
month = nov,
url = {http://www.qualitative-forschung.de/information/publikation/modelle/kurs_ti.pdf}
}

@article{Maarten:1999gc,
author = {Maarten, Wolsink},
title = {{Wind power and the NIMBY-myth: institutional capacity and the limited significance of public support}},
journal = {Renewable Energy},
year = {1999},
volume = {21},
number = {1},
pages = {49--64},
month = dec
}

@article{Hasselbring:2000:PLS:349194.349199,
author = {Hasselbring, Wilhelm},
title = {{Programming languages and systems for prototyping concurrent applications}},
journal = {ACM Computing Surveys},
year = {2000},
volume = {32},
pages = {43--79},
month = mar
}

@article{Kraft:1991tb,
author = {Zibran, Minhaz F and Kraft, Michael E. and Clary, Bruce B. and Eishita, Farjana Z and Roy, Chanchal K},
title = {{Citizen Participation and the Nimby Syndrome: Public Response to Radioactive Waste Disposal}},
journal = {Political Research Quarterly},
year = {1991},
volume = {44},
number = {2},
pages = {299--328},
month = jan,
annote = {10.1177/106591299104400204}
}

@article{Khajouei:2011bm,
author = {Khajouei, R and Peute, L W P and Hasman, A and Jaspers, M W M},
title = {{Classification and prioritization of usability problems using an augmented classification scheme.}},
journal = {Journal of Biomedical Informatics},
year = {2011},
volume = {44},
number = {6},
pages = {948--957},
month = nov
}

@webpage{Edgar:2007ui,
author = {Teasley, Barbee E and Edgar, Nick and Haaland, Kevin and Li, Jin and Peter, Kimberley},
title = {{User Interface Guidelines}},
year = {2007},
url = {http://wiki.eclipse.org/User_Interface_Guidelines}
}

@incollection{Haselhoff:2010gj,
author = {Haselhoff, Vanessa},
title = {{Konzeption der empirischen Untersuchung}},
booktitle = {Patientenvertrauen in Krankenh{\"a}user},
year = {2010},
pages = {85--114},
publisher = {Gabler},
address = {Wiesbaden},
annote = {Quelle f{\"u}r Zitat, dass GTM nach Glaser als "puristisch orientiert" bezeichnet werden kann}
}

@article{Dear:1992dw,
author = {Dear, Michael},
title = {{Understanding and Overcoming the NIMBY Syndrome}},
journal = {Journal of the American Planning Association},
year = {1992},
volume = {58},
number = {3},
pages = {288--300},
month = jan,
annote = {doi: 10.1080/01944369208975808}
}

@article{Muller:1998dn,
author = {Muller, Michael J. and Matheson, Lisa and Page, Colleen and Gallup, Robert},
title = {{Methods {\&} tools: participatory heuristic evaluation}},
journal = {interactions},
year = {1998},
volume = {5},
number = {5},
pages = {13--18},
month = sep
}

@inproceedings{Layzell:fv,
author = {Layzell, P J and Champion, R},
title = {{DOCKET: Program comprehension-in-the-large}},
booktitle = {Proceedings of the IEEE Second Workshop on Program Comprehension, 1993},
year = {1993},
pages = {140--148},
address = {Capri},
month = jul,
annote = {A major factor in programming productivity is the maintenance of software systems. Software maintenance involves enhancing and extending the functionality of existing programs and collectively is estimated to account for between 50 and 70% of programming time}
}

@book{meyers1998effective,
author = {Meyers, Scott},
title = {{Effective C++: 50 specific ways to improve your programs and designs}},
publisher = {Addison-Wesley},
year = {1992},
series = {Addison-Wesley Professional Computing Series},
address = {Reading, MA}
}

@article{Suddaby:2006ja,
author = {Suddaby, Roy},
title = {{From the Editors: What Grounded Theory is Not}},
journal = {Academy of Management Journal},
year = {2006},
volume = {49},
number = {4},
pages = {633--642},
month = aug
}

@article{Henning:2009hz,
author = {Henning, Michi},
title = {{API design matters}},
journal = {Communications of the ACM},
year = {2009},
volume = {52},
number = {5},
pages = {46--56},
month = may
}

@booklet{Gagne:1985tx,
title = {{The Conditions of Learning and Theory of Instruction}},
author = {Gagn{\'e}, Robert Mills},
howpublished = {Holt, Rinehart and Winston},
year = {1985},
annote = {Lernphasen
werden sequentiell durchlaufen

1. Motivation Phase: Expectancy
2. Apprehending Phase: Attention, Selection, Perception
3. Acquisition Phase: Coding, Storage Entry
4. Retention Phase: Memory, Storage
5. Recall Phase: Retrieval
6. Generalization Phase: Transfer
7. Performance Phase: Responding
8. Feedback Phase: Reinforcement

F{\"u}r Lehrer http://www.people.vcu.edu/{\textasciitilde}rmreardon/706/Models%20of%20Teaching/Gagne_phases.htm
}
}

@webpage{Conway:2005va,
author = {Conway, Damian},
title = {{\textbf{Ten Essential Development Practices}}},
year = {2005},
month = jul,
url = {http://www.perl.com/pub/2005/07/14/bestpractices.html}
}

@article{Walker:1984hu,
author = {Walker, Gordon and Weber, David},
title = {{A Transaction Cost Approach to Make-or-Buy Decisions}},
journal = {Administrative Science Quarterly},
year = {1984},
volume = {29},
number = {3},
pages = {373--391},
month = sep
}

@inproceedings{Kadoda:2000vj,
author = {Kadoda, Gada},
title = {{A Cognitive Dimensions view of the differences between designers and users of theorem proving assistants}},
booktitle = {PPIG 2000: Proceedings of the Twelth Annual Meeting of the Psychology of Programming Interest Group},
year = {2000},
pages = {33--44}
}

@inproceedings{Pirolli:1995:IFI:223904.223911,
author = {Pirolli, Peter and Card, Stuart},
title = {{Information foraging in information access environments}},
booktitle = {CHI '95: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
year = {1995},
pages = {51--58},
publisher = {ACM Press},
address = {New York, New York, USA}
}

@book{Meyers:2001uz,
author = {Meyers, Scott},
title = {{Effective STL: 50 Specific Ways to Improve Your Use of the Standard Template Library}},
publisher = {Addison-Wesley},
year = {2001},
address = {Indianapolis, IN}
}

@inproceedings{Parnin:2011kp,
author = {Parnin, Chris and Treude, Christoph},
title = {{Measuring API documentation on the web}},
booktitle = {Web2SE '11: Proceedings of the 2nd International Workshop on Web 2.0 for Software Engineering},
year = {2011},
pages = {25--30},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = may,
annote = {Erforschung des typischen }
}

@article{Reid:R1ZT4-2v,
author = {Reid, John E},
title = {{STEME: Suffix arrays for probabilistic motif finding}},
year = {2014}
}

@webpage{Apple:2009tp,
author = {{Apple}},
title = {{Apple Human Interface Guidelines: The Design Process}},
year = {2009},
month = sep,
url = {http://developer.apple.com/library/mac/#documentation/UserExperience/Conceptual/AppleHIGuidelines/XHIGDesignProcess/XHIGDesignProcess.html}
}

@webpage{Gieselmann:-Uisl6hs,
author = {Gieselmann, Hartmut},
title = {{Spiele-Entwicklungs-Umgebung Unity 5 bringt u.a. bessere Grafik und 64-Bit-Support}},
year = {2014},
month = aug,
url = {http://m.heise.de/developer/meldung/Spiele-Entwicklungs-Umgebung-Unity-5-bringt-u-a-bessere-Grafik-und-64-Bit-Support-2298586.html?wt_mc=rss.developer.beitrag.atom&from-classic=1}
}

@article{Pliskin:1987:EPS:1017816.1017817,
author = {Schank, Patricia K and Pliskin, Nava and Shoval, Peretz and Linn, Marcia C and Clancy, Michael J},
title = {{End-user prototyping: sophisticated users supporting system development}},
journal = {SIGMIS Database},
year = {1987},
volume = {18},
pages = {7--17},
month = jul
}

@book{bloch2008effective,
author = {Bloch, Joshua},
title = {{Effective Java}},
publisher = {Pearson Education},
year = {2008},
series = {Java Series}
}

@book{Cheshire:2006uv,
author = {Cheshire, Stuart and Steinberg, Daniel H.},
title = {{Zero configuration networking : the definitive guide}},
publisher = {O'Reilly},
year = {2006},
address = {Beijing ; Sebastopol, CA},
edition = {1st},
annote = {2006275160Stuart Cheshire and Daniel H. Steinberg.ill. ; 24 cm."Covers Apple's Bonjour APIs"--Cover.Includes index.}
}

@book{Haselhoff:2010jh,
author = {Haselhoff, Vanessa},
title = {{Patientenvertrauen in Krankenh{\"a}user}},
publisher = {Gabler},
year = {2010},
series = {Eine qualitative Analyse zur Bedeutung, Bildung und unterschiedlichen Vertrauensebenen},
address = {Wiesbaden}
}

@book{oates2006researching,
author = {Oates, Briony J},
title = {{Researching Information Systems and Computing}},
publisher = {SAGE Publications},
year = {2006}
}

@article{McLellan:1998cu,
author = {McLellan, Samuel G and Roesler, Alvin W and Tempest, Joseph T and Spinuzzi, Clay I},
title = {{Building More Usable APIs}},
journal = {IEEE Software},
year = {1998},
volume = {15},
number = {3},
pages = {78--86},
month = may,
annote = {<b>Was getan?</b>
Gegenstand: Oilfield management software - Kommerzielle API

Focus: "large-scale software"

20-60min{\"u}tige Beobachtung von Entwicklern bei 3 Standorten mittels Think Aloud

4 Entwickler mit mehrj{\"a}hriger C++-Programmiererfahrung

R{\"u}ckfragem{\"o}glichkeit beim Entwickler

<b>Zentrale Aussagen</b>
Beispiele - ob im Code oder in der Doku - sind sehr wichtig (unabh{\"a}ngig davon, ob Code-Beispiel voll verstanden wurde)
{\textasciitilde} wichtig zum Verstehen von Ein- u. Ausgabe, sowie (Anwendung)kontext (ebenso W.Visser,{\textquotedblleft}StrategiesinProgrammingProgrammableControllers: A Field Study on a Professional Programmer,{\textquotedblright} Empirical Studies of Programmers: Second Workshop, G.M. Olson, S. Sheppard, and E. Soloway, eds., Ablex, Norwood, N.J., 1987, pp. 217-230.
) (ebenso: \cite{Lange:1989jr})

{\textasciitilde} sorgen daf{\"u}r, den Code nicht vollst{\"a}ndig verstehen zu m{\"u}ssen (ebenso B.M. Lange and T.G. Moher, {\textquotedblleft}Some Strategies of Reuse in an Object- Oriented Programming Environment,{\textquotedblright} Human Factors in Computing Systems: CHI {\textquoteright}89 Proc., ACM Press, New York, 1989, pp. 69-73.)

{\textasciitilde} geben einen Eindruck, {\"u}ber Funktionsumfang der API und dessen Funktionsweise

Konsistente Benahmung ist sehr wichtig - z.B. wenn es GetCommonType() gibt, muss es auch PutCommonType() geben
Im Beispiel gab es ein get mit Parameter aber die set-Methoden waren ausdifferenziert (setParamX, setParamY, etc.)

Erstaunlich: Bei GetCommonAttr() fragte eine Entwicklerin sogar nach GetUncommonAttr()

3 der 4 Entwickler zogen es vor, wenn der Code sich selbst erkl{\"a}rt und das nicht erst die Doku machen muss

"semantic overloading": Bezeichnungen, die verschiedene Konzepte meinen, m{\"u}ssen klar unterschieden werden (z.B. C++ template und other kinds of templates)

Entwickler interessieren sich f{\"u}r die Frage, welche Funktionen bei welchen Daten relevant sind
-{\&}gt; vgl. "fact finding" aus S. G. McLellan, A. W. Roesler, J. T. Tempest, and C. I. Spinuzzi, {\textquotedblleft}Building more usable APIs,{\textquotedblright} IEEE Softw., vol. 15, no. 3, pp. 78{\textendash}86, 1998.

3/4 Entwickler zogen eine generalisierte Funktion mit 10 Parameterns besser, als 5 Spezialisierungen, die verschiedene Kombinationen der 10 Parameter ben{\"o}tigten

Methodisch reicht kein API Test (analog zum Usablity Test) aus: man ben{\"o}tigt einen Ansatz, der mehrere Methoden verwendet

<b>Relevanzkriterien</b>
Nur 4 Teilnehmer.

Relativ oberfl{\"a}chliche Betrachtung (auch wenn sie qualitativ ist).

Einzig reliable Erkenntnisse: Beispiel sind {\"a}u{\ss}erst wichtig f{\"u}r API-Anwender; Usablity Engineering (wird nicht so benannt) sollte auch bei APIs angewendet werden (mit den Worten der Autoren: fr{\"u}h und iterativ testen und Erkenntnisse immer wieder in API einflie{\ss}en lassen)

--{\&}gt; nur punktuelle Auseinandersetzung. Kaum Generalisierung.
Daf{\"u}r wird angeregt, diese Erkenntnisse mit anderen Arbeiten zusammenzufassen.

}
}

@article{Hughes:2003km,
author = {Hughes, Janet and Parkes, Steve},
title = {{Trends in the use of verbal protocol analysis in software engineering research}},
journal = {Behaviour {\&} Information Technology},
year = {2003},
volume = {22},
number = {2},
pages = {127--140}
}

@article{doi:10.1080/03637757309375796,
author = {Knapp, Mark L and Hart, Roderick P and Friedrich, Gustav W and Shulman, Gary M},
title = {{The rhetoric of goodbye: Verbal and nonverbal correlates of human leave-taking}},
journal = {Communications {\ldots}},
year = {1973},
volume = {40},
number = {3},
pages = {182--198},
annote = {Zusammenfassung von http://www2.fiu.edu/{\textasciitilde}brownj/Abstracts/Goodbye.pdf

The purpose of this study was to describe leave-taking norms, in particular, to look at verbal and nonverbal behaviors associated with departures and to determine the effects of status and acquaintance on these behaviors. Knapp and his colleagues argue there are three functions of leave-taking: to signal inaccessibility, to signal supportiveness, and to summarize the interaction. They wanted to see how each is shown verbally and nonverbally.
Their method was to videotape students as they interviewed familiar or unfamiliar people of either the same status or higher. Subjects{\textquoteright} concluding remarks and behavior were coded. Two types of categories were used: verbal and nonverbal. Some of the verbal categories coded the function of the concluding remarks (justifications or legitimizations of the leave-taking, appreciation or concern for the other{\textquoteright}s welfare, expressions of desire for future contact). Others recorded the forms of the utterance (whether it was a filler, a reinforcement, or a buffer such as {\textquotedblleft}uh{\textquotedblright} or {\textquotedblleft}well{\textquotedblright}). Nonverbal categories included changes in body position, movements of the limbs, eye contact, smiling, and so on.
The results indicated that status and acquaintance had little effect on leave- taking. In general, leave-taking was shown verbally by increases in professional inquiry (How long have you been a major?), reinforcement (Yeah), buffing (Well), and appreciation (I really want to thank you). Nonverbally, leave-taking was signaled by breaking eye contact, left-positioning, forward lean, and head nodding. The major status difference was that the low-status partner did more reinforcement and buffing. More reinforcements also occurred between those previously acquainted than between strangers.
Nonverbal behaviors peaked during the 15 seconds prior to standing. The authors suggest, {\textquotedblleft}In the light of such patterns, it is easy to see why we often become frustrated if we are not {\textquoteleft}released{\textquoteright} after rising. Such an interpersonal denial means that we must go through the whole routine again!{\textquotedblright}
Analysis showed the presence of only two of the leave-taking functions: signaling inaccessibility and support for the relationship. Little summarizing took place, although this could have been due to the college atmosphere. While the majority of nonverbal cues signaled inaccessibility, indications of warmth, approval, and affiliation were either directly verbalized or indicated nonverbally. The authors conclude: {\textquotedblleft}Perhaps because we feel that the termination of an interaction may be perceived as a threat to terminate the relationship, we humans go through a veritable song-and-dance when taking leave of our fellows.{\textquotedblright}}
}

@inproceedings{Farooq:2010iv,
author = {Farooq, Umer and Zirkler, Dieter},
title = {{API peer reviews: a method for evaluating usability of application programming interfaces}},
booktitle = {CSCW '10: Proceedings of the 2010 ACM conference on Computer supported cooperative work},
year = {2010},
pages = {207},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = feb,
annote = {Neben dem zweiten Review Paper noch was interessantes:
- Vergleich von Usability Review und Test
- CD: abstractio + work step unit + viscosity = learning objectives}
}

@book{Weinberg:1992vk,
author = {Weinberg, Gerald M},
title = {{Quality software management (Vol. 1): systems thinking}},
publisher = {Dorset House Publishing Co., Inc.},
year = {1992},
annote = {Tats{\"a}chlich kann die gleiche Funktion (auf Anwendungsebene) heute meist viel schneller realisiert werden{\textbullet} Ein Datenpunkt daf{\"u}r stammt von Gerald Weinberg: {\textbullet} Quality Software Management 1, 18.3.1, Seite 290{\textbullet} Er schrieb ein 1956 Programm zur Simulation von hydraulischen Netzen (Wasserleitungs-Netzen) mit {\textasciitilde}500 Stunden Aufwand{\textbullet} 1979 schrieb er das gleiche Programm erneut: {\textbullet} 2,5 Std. Aufwand{\textbullet} Das ist eine Produktivit{\"a}tsverbesserung von 20.000% oder ca. 25% j{\"a}hrlich!}
}

@book{Hix:1993vj,
author = {Hix, Deborah and Hartson, H Rex},
title = {{User Interface Development: Ensuring Usability through Product and Process}},
publisher = {John Wiley {\&} Sons},
year = {1993},
address = {New York}
}

@article{Green:1989wb,
author = {Green, Thomas R G},
title = {{Cognitive Dimensions of Notations}},
journal = {People and Computers V},
year = {1989},
pages = {443--460},
annote = {Motivation: Reduktion des Begriffs Usability auf Grunddimensionen, durch deren Auspr{\"a}gung alle Ph{\"a}nomene erkl{\"a}rbar sind (Bsp.: Physik: Masse, L{\"a}nge, Zeit)

Sehr interessant, da sehr generische Dimensionen gefunden wurden; allerdings: {\"U}berpr{\"u}fung noch nicht {\"u}berpr{\"u}ft

Vorschlag von 5 Dimensionen, die nicht den Anspruch haben, alles abzudecken}
}

@inproceedings{Doerner:2014cm,
author = {Dohnert, Christian and Faulring, Andrew R and Myers, Brad A},
title = {{EUKLAS}},
booktitle = {PLATEAU '14: Proceedings of the 5th Workshop on Evaluation and Usability of Programming Languages and Tools},
year = {2014},
pages = {13--20},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = oct
}

@book{3593326450,
author = {Hildebrand-Nilshon, Martin},
title = {{Die Entwicklung der Sprache: Phylogenese und Ontogenese (German Edition)}},
publisher = {Campus-Verlag},
year = {1980},
address = {Frankfurt / New York}
}

@book{lieberman2006end,
title = {{End User Development}},
publisher = {Springer},
year = {2006},
series = {Human--Computer Interaction Series}
}

@book{Carroll:2003us,
author = {Carroll, John M},
title = {{HCI Models, Theories, and Frameworks}},
publisher = {Morgan Kaufmann},
year = {2003},
series = {Toward a Multidisciplinary Science},
address = {San Francisco}
}

@book{3827404800,
author = {Balzert, Helmut},
title = {{\textbf{Lehrbuch der Software-Technik - Software-Entwicklung - mit 2 CD-ROM}}},
publisher = {Spektrum Akademischer Verlag},
year = {2000},
volume = {2},
month = nov
}

@booklet{Brown:2003uv,
title = {{Usability Analysis of the Channel Application Programming Interface}},
author = {Brown, Christopher A},
month = jun,
year = {2003},
annote = {Analyse einer API nach IEEE Fallstudie auf
- generelle Usability-Attribute
  - nach Ref3
  - Learnability
  - Efficiency
  - Memorability
  - Errors
  - Satisfaction
- spezifische Usability-Attribute
- F{\"a}higkeit, sich selbst zu erkl{\"a}ren}
}

@article{Stylos:2008cu,
author = {Stylos, Jeffrey and Graf, B and Busse, D K and Ziegler, C and Ehret, R and Karstens, J},
title = {{A case study of API redesign for improved usability}},
journal = {IEEE Symposium on Visual Languages and Human-Centric Computing. Proceedings},
year = {2008},
pages = {189--192},
month = sep,
annote = {Verbesserung einer Business Rules Engine API
- Sprache: ABAB
- RELEVANT und WICHTIG: hat alle 26 bisher existierend rule engines ersetzt
- BESONDERS: Produktiv-API von SAP
- vormals f{\"u}r Platform-Entwickler
- Ziel: f{\"u}r Platform- und Anwendungsentwickler
-- Anwendungsentwickler haben weniger, spezifische / flexible Anspr{\"u}che, simplere Use Cases
L{\"o}sung: Einf{\"u}hrung einer zweiten Wrapper-API

Erfolgreiche Evaluation
These basierend auf Stakeholder-Interviews:
- Platform-Entwickler = systematic developers
- Application-Entwickler = pragmatic developers
- Consultants = opportunistic developers

- Anwender konnten - auch wenn nicht alle - ohne Doku 1-3/3 Aufgaben im Zeitlimit l{\"o}sen
- Software-Team hatte subjektiven Eindruck, dass Geschwindigkeit hoch ist und daher kein weiterer Vergleichstest notwendig ist

6x 60-80min interviews mit Anwender zum Herausfinden von Anforderungen an API
- Beobachtung: Rule Engine hat eher eine Selektion in den meisten Use Cases gemacht
- die eigentlichen Inhalte der Regeln war hard-coded ausgelagert
--{\&}gt; neue API
--{\&}gt; alte aber schon da
--{\&}gt; 2 M{\"o}glichkeiten: (1) abw{\"a}rtskompatibel (2) zweite API
--{\&}gt; hier: Wrapper API}
}

@book{ann2007using,
author = {Lewins, Ann and Silver, Christina},
title = {{Using Software in Qualitative Research: A Step-by-Step Guide}},
publisher = {SAGE Publications},
year = {2007},
annote = {Auflistung der f{\"u}hrende QDA-Software}
}

@inproceedings{Stylos:2009bq,
author = {Stylos, Jeffrey and Myers, Brad A and Yang, Zizhuang},
title = {{Jadeite}},
booktitle = {CHI '09 Extended Abstracts on Human Factors in Computing Systems},
year = {2009},
pages = {4429},
publisher = {ACM Press},
address = {New York, New York, USA},
month = apr
}

@article{Karahasanovic:2009gu,
author = {Karahasanovic, Amela and Hinkel, Unni Nyhamar and Sj{\o}berg, Dag and Thomas, Richard},
title = {{Comparing of feedback-collection and think-aloud methods in program comprehension studies}},
journal = {Behaviour {\&} Information Technology},
year = {2009},
volume = {28},
number = {2},
pages = {139--164},
month = mar
}

@article{Oppermann1992Evalu-26396,
author = {Oppermann, Reinhard and Reiterer, Harald},
title = {{Der Evaluationsleitfaden EVADIS II}},
journal = {Ergonomie Informatik},
year = {1992},
volume = {15},
pages = {25--29}
}

@book{charmaz2006constructing,
author = {Charmaz, Kathy},
title = {{Constructing Grounded Theory: A Practical Guide Through Qualitative Analysis}},
publisher = {SAGE Publications},
year = {2006},
series = {Constructing grounded theory}
}

@article{Needleman:1970vq,
author = {Needleman, S B and Wunsch, C D},
title = {{A general method applicable to the search for similarities in the amino acid sequence of two proteins.}},
journal = {Journal of molecular biology},
year = {1970},
volume = {48},
number = {3},
pages = {443--453},
month = mar
}

@webpage{Hoffmann:2006vl,
author = {Hoffmann, Marc R.},
title = {{Eclipse Workbench: Using the Selection Service}},
year = {2006},
month = apr,
url = {http://www.eclipse.org/articles/Article-WorkbenchSelections/article.html}
}

@article{Good:1984kr,
author = {Good, Michael D and Whiteside, John A and Wixon, Dennis R. and Jones, Sandra J},
title = {{Building a user-derived interface}},
journal = {Communications of the ACM},
year = {1984},
volume = {27},
number = {10},
pages = {1032--1043},
month = oct,
annote = {Verbesserung eines vollst{\"a}ndig undokumentierten Command-Line-Interfaces (zum Mail-Versand) durch Interaktiven Fake: Eingaben werden durch einen Menschen beantwortet wenn das Kommando nicht bereits vom Computer erkannt wurde

-{\&}gt; Gr{\"o}{\ss}te Verbesserung durch Unterst{\"u}tzung von Aliasen}
}

@book{Schweibenz:2003tu,
author = {Schweibenz, Werner and Thissen, Frank},
title = {{Qualit{\"a}t im Web}},
publisher = {Springer},
year = {2003},
series = {Benutzerfreundliche Webseiten durch Usability-Evaluation}
}

@book{Rehfus:2003ti,
author = {Rehfus, Wulff D},
title = {{Handw{\"o}rterbuch Philosophie}},
publisher = {Vandenhoeck {\&} Ruprecht},
year = {2003},
address = {G{\"o}ttingen}
}

@article{Fowler:2002ds,
author = {Fowler, Martin},
title = {{Public versus published interfaces}},
journal = {IEEE Software},
year = {2002},
volume = {19},
number = {2},
pages = {18--19},
month = mar,
annote = {Unterschied von technisch {\"o}ffentlichen Interfaces und ver{\"o}ffentlichten Interfaces, auf deren Best{\"a}ndigkeit man sich verlassen darf.

Relevant bei {\"U}berarbeitung von SeqAn

- Problem: Leichtes Refactoring aber abh{\"a}ngige Programme werden davon nicht ber{\"u}cksichtigt

- Starke Code Ownership f{\"u}hrt dazu, dass Interfaces published werden, weil fremder Code nicht anger{\"u}hrt wird}
}

@article{Gruber:1993jz,
author = {Gruber, Thomas R},
title = {{A translation approach to portable ontology specifications}},
journal = {Knowledge Acquisition},
year = {1993},
volume = {5},
number = {2},
pages = {199--220},
month = jun
}

@inproceedings{Prechelt:2006,
author = {Prechelt, Lutz},
title = {{Extreme Programming: Selbstorganisation durch gezielt ineinander greifende Praktiken}},
booktitle = {Workshop {\quotedblbase}Praktiken des Programmierens{\textquotedblleft}},
year = {2006},
address = {Berlin},
month = dec
}

@book{Prechelt:2010uv,
author = {Prechelt, Lutz},
title = {{Einf{\"u}hrung Anwendungssysteme}},
year = {2010},
address = {Berlin, Germany}
}

@article{Kemerer:ga,
author = {Kemerer, C F and Paulk, M C},
title = {{The Impact of Design and Code Reviews on Software Quality: An Empirical Study Based on PSP Data}},
journal = {IEEE Transactions on Software Engineering},
volume = {35},
number = {4},
pages = {534--550}
}

@techreport{Gellenbeck:1991vn,
author = {Gellenbeck, Edward M and Cook, Curtis R},
title = {{An Investigation of Procedure and Variable Names as Beacons During Program Comprehension}},
institution = {Oregon State University Corvallis, OR, USA},
year = {1991}
}

@article{Ko:2005cl,
author = {Ko, Andrew J and Myers, Brad A},
title = {{Human factors affecting dependability in end-user programming}},
journal = {SIGSOFT Softw. Eng. Notes},
year = {2005},
volume = {30},
number = {4},
pages = {1--4},
month = jul,
annote = {Forschungszusammenfassung zu menschlichen Faktoren, die Programmierung beeinflussen:
- (WAS AUCH IMMER END-USER PROGRAMMER SIND?)

Cognitive Biases
- Weg des geringsten Wiederstands ({\"a}hnlich Verst{\"a}ndnisvermeidung \cite{Lange:1989jr})
- Testen der erst-besten Hypothese
- Erreichung kurzfristiger Ziele wichtiger als Code-Qualit{\"a}t
- Schnelles, schlechtes Feedback wird aufwendigerem aber detaillierterem Feedback (print vs debugging) vorgezogen
- Korrelierende Ereignisse (z.B. unmittelbar zuvor passiert) haben was mit der aktuellen Situation zu tun. (z.B. {\"A}nderung, die angeblich einen erst jetzt entdeckten Fehler eingef{\"u}hrt hat)

Languages, Libraries, Tools
- Sprach-Syntax
- Wenn Sprachkonstrukt gelernt, klammert man sich dran (egal ob es gerade passt)
- mehrere L{\"o}sungswege
- L{\"o}sungen bestehen aus mehreren Schritten, die richtig kombiniert werden m{\"u}ssen

Code
Keine Unterst{\"u}tzung von Hypothesen-Testen

Vorschl{\"a}ge
---------
- mehr Vorschl{\"a}ge durch IDE
- bessere Alternative f{\"u}r print
- Ausgabe aller Werte einer Variablen
- Bereitstellung wiederverwendbarer Code-Templates
-  Verwendung leicht erkennbarer Syntax
- Todo-Listen bereitstellen f{\"u}r typische Programmieraufgaben
- Kopierten Code erkennbar machen - am Besten mit Verlinkung zur Quelle}
}

@inproceedings{Uddin:2011cf,
author = {Uddin, Gias and Dagenais, Barthelemy and Robillard, Martin P},
title = {{Analyzing temporal API usage patterns}},
booktitle = {ASE '11: Proceedings of the 2011 26th IEEE/ACM International Conference on Automated Software Engineering},
year = {2011},
pages = {456--459},
publisher = {~IEEE Computer Society},
month = nov,
annote = {Beobachtung von API-{\"A}nderungen {\"u}ber die Zeit;
Ergebnisse nicht fertig gestellt sondern f{\"u}r sp{\"a}teres Paper angek{\"u}ndigt}
}

@inproceedings{Barghouti:1995di,
author = {Barghouti, Naser S and Krishnamurthy, Balachander},
title = {{Using event contexts and matching constraints to monitor software processes}},
booktitle = {ICSE '95: Proceedings of the 17th international conference on Software engineering},
year = {1995},
pages = {83--92},
publisher = {ACM Press},
address = {New York, New York, USA},
annote = {Erweiterung des Event-Monitoring-System "Yeast" um die M{\"o}glichkeit, nur relevant Events (Abh{\"a}ngig vom Arbeitskontext = Arbeitsschritt innerhalb eines Prozessmodels) zu erheben; die Erkennung dieses Kontexts ist das Neue und soll die Einf{\"u}hrung von PSEE (Process-centered software engineering environments) vorantreiben}
}

@book{university1975ph,
author = {Lauer, Hugh Conrad},
title = {{On Ph.D. thesis proposals in computing science}},
publisher = {The University},
year = {1975},
series = {Computing Laboratory}
}

@article{Blackwell:1999vi,
author = {Blackwell, A F and Green, TRG},
title = {{Investment of attention as an analytic approach to cognitive dimensions}},
journal = {Collected Papers of the 11th Annual Workshop of the Psychology of Programming Interest Group (PPIG '11)},
year = {1999},
pages = {24--35}
}

@book{Mey:2011iy,
author = {Mey, G{\"u}nter and Mruck, Katja},
editor = {Mey, G{\"u}nter and Mruck, Katja},
title = {{Grounded Theory Reader}},
publisher = {VS Verlag f{\"u}r Sozialwissenschaften},
year = {2011},
address = {Wiesbaden}
}

@inproceedings{Stylos:2006ji,
author = {Stylos, Jeffrey},
title = {{Informing API Design through Usability Studies of API Design Choices: A Research Abstract}},
booktitle = {VLHCC '06: Proceedings of the 2006 IEEE Symposium on Visual Languages - Human Centric Computing},
year = {2006},
pages = {246--247},
publisher = {IEEE},
month = sep
}

@article{Stylos:2009gc,
author = {Stylos, Jeffrey and Faulring, Andrew and Yang, Zizhuang and Myers, Brad A},
title = {{Improving API documentation using API usage information}},
journal = {2009 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)},
year = {2009},
pages = {119--126},
annote = {API-Dokumentations-Verbesserungen {\"a}hnlich zu JavaDoc
1) Einsatz von Placeholdern
-- mithilfe von JavaDoc doclets
2) Hervorhebung h{\"a}ufig genutzer Klassen
-- nicht mittels Sortierung nach Popularit{\"a}t
-- sondern mit Schriftgr{\"o}{\ss}e (damit man auch Klassen findet, wo man wei{\ss}, wo sie stehen)
-- Logarithmische Gr{\"o}{\ss}enverteilung
3) Viele Konstruktionsbeispiele f{\"u}r Klassen
-- gleich unterhalb der Klassenhierarchie
-- Konstruktionsbeispiel f{\"u}r jede Klasse
--- geklaut von Google mit regul{\"a}ren Ausdr{\"u}cken
-- Problem, bei anh{\"a}ngigen Variablen
--- Auslassung mittels {\ldots}
--- Klassennamen k{\"o}nnen angeklickt werden f{\"u}r deren Konstruktion
--- Problem: Kontext geht verloren
--- Selten Anzeige von zwei Konstruktoren, wenn zweiter auch sehr relevant ist

-{\&}gt; 3x schneller f{\"u}r typische Aufgaben im Vergleich zu JavaDoc}
}

@article{doi:10.1080/00140138008924799,
author = {Green, Thomas R G and Sime, M E and Fitter, M J},
title = {{The problems the programmer faces}},
journal = {Ergonomics},
year = {1980},
volume = {23},
number = {9},
pages = {893--907},
annote = {Paper zum Thema Benutzerfreundlichkeit von Programmiersprachen}
}

@inproceedings{Gould:1983:DUP:800045.801579,
author = {Gould, John D. and Lewis, Clayton},
title = {{Designing for usability{\&}mdash;key principles and what designers think}},
booktitle = {CHI '92 Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
year = {1983},
pages = {50--53},
publisher = {ACM},
address = {Boston, Massachusetts, USA}
}

@webpage{Nielsen:2009uh,
author = {Nielsen, Jakob},
title = {{Discount Usability: 20 Years}},
year = {2009},
month = sep,
url = {http://www.useit.com/alertbox/discount-usability.html}
}

@inproceedings{Buse:2012vv,
author = {Buse, Raymond P L and Weimer, Westley},
title = {{Synthesizing API usage examples}},
booktitle = {ICSE '12: Proceedings of the 34th International Conference on Software Engineering},
year = {2012},
publisher = {~IEEE Press},
month = jun,
annote = {Tool, das automatisch Code-Beispiele generiert

Studie mit {\"u}ber 150 Teilnehmer
- 82% fanden automatisch generierte Beispiele gleichwertig zu von Menschen geschriebene
- 94% zogen Sie sogar vor}
}

@article{Petsko:2007kg,
author = {Petsko, Gregory A},
title = {{A day in the life of a genome biologist in the not-too-distant future.}},
journal = {Genome biology},
year = {2007},
volume = {8},
number = {3},
pages = {104--104},
annote = {Indeed not-to-distant future: 
"6:15 pm to 7 pm.packed up to go home. Waited 45 minutes for shuttle bus to parking lot. while waiting, checked latest news on iPhone."}
}

@book{strauss1996grounded,
author = {Strauss, Anselm Leonard and Corbin, Juliet M},
title = {{Grounded Theory: Grundlagen qualitativer Sozialforschung}},
publisher = {Beltz, Psychologie-Verlag-Union},
year = {1996}
}

@article{HighsmithFowler2001,
author = {Highsmith, Jim and Fowler, Martin},
title = {{The Agile Manifesto}},
journal = {Software Development Magazine},
year = {2001},
volume = {9},
number = {8},
pages = {29--30}
}

@webpage{Rarey:E0TiqhGO,
author = {Rarey, Matthias},
title = {{Was ist Informatik?}},
year = {2010},
url = {http://www.zbh.uni-hamburg.de/informationen-fuer-schueler-innen/was-ist-bioinformatik.html}
}

@inproceedings{Stylos:2008jt,
author = {Stylos, Jeffrey and Myers, Brad A},
title = {{The implications of method placement on API learnability}},
booktitle = {SIGSOFT '08/FSE-16: Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering},
year = {2008},
pages = {105--112},
publisher = {ACM Press},
address = {New York, New York, USA},
annote = {Usability-Experiment, bei dem 10 Teilnehmer Pseudo-Code und echten OOP-Code schreiben sollten. Interessant war, welche Ordnung die Anwender bez{\"u}glich der Platzierung von Objektmethoden f{\"u}r intuitiver / einfacher hielten.

Also message.send(server) oder server.send(message)

Code Ownershop (wo ist Methode implementiert) wegen globaler Funktionen nur in Dokumentation abgebildet. Generische Namen wie length haben durch ihre globale Implementierung pl{\"o}tzlich keine Ownership mehr, obwohl sie diese mal technisch hatten.


Object Combination (sowohl statisch, z.B. Aggregation, als auch interaktiv, z.B. damit A was machen kann, ben{\"o}tigt es ein B; konkreter: Method Placement)

Code Ownership (= send muss irgendwo implementiert werden. z.B. bei der Klasse server. send "geh{\"o}rt" dann der Server-Klasse)

Generic Global Function Names (hat was mit Code Ownership zu tun. N{\"a}mlich, dass generische benamte Funktionen pl{\"o}tzlich und nur technisch Ihre Ownership verlieren. Trotzdem ist determiniert, f{\"u}r welche Objekte eine solche Methode {\"u}berhaupt funktioniert bzw. ein sinnvolles Ergebnis liefert. z.B. length)

Unsichtbare Abh{\"a}ngigkeiten sind "b{\"o}se", z.B. Mailversand: message.setSmtpServer gibt es nicht. Stattdessen muss ein Options-Objekt erzeugt werden, welche diese Methode hat. Das "k{\"u}nstliche" Options-Objekt muss dann wiederrum {\"u}ber message.setOptions der Message bekannt gemacht werden)
Beispiel bei SeqAn: AlignConfig

Terminology Origin / Domain vs. Technics (= Welche Ansatz der Benamung wird gew{\"a}hlt? Einer, der der Anwendungsdom{\"a}ne z.B. Bioinformatik entspringt (z.B. Peptide) oder ein technischer (z.B. AminoAcidString)?


Korrekte Methodenplatzierung beschleunigt Entwicklung (bei OOP).

Kombination mehrerer Objekte ist eine Herausforderung.

API Usability beeinflusst durch Programmiersprache, Entwicklungswerkzeuge, API documentation, API

(1) Einstieg ist Aufgabenl{\"o}sung f{\"a}ngt immer bei einem "starting class" an, (2) dessen Name gut gew{\"a}hlt sein sollte (Message statt MimeMessage).
Sollte es eine Abh{\"a}ngigkeit von diesem Object bzgl. eines anderen geben, sollte diese vom starting class ausgehen (also message.send(server) anstelle von server.send(message)).

In F{\"a}llen wo API-Designziele der Usability widersprechen (z.B. Performance f{\"u}hrt zum Template Programming) k{\"o}nnen immer noch die Dokumentation und Entwicklungstools angepasst werden.

Methoden in Hilfsklassen provozieren folgende Probleme:
(1) Findet man nicht die richtige Methode bei der starting class, zweifelt man an der (evtl. bereits korrekten) Wahl
(2) Benutzer m{\"u}ssen erst heraus bekommen, dass eine zweite Klasse involviert ist
(3) Die zweite Klasse muss auch noch lokalisiert werden.

APIs sollten entworfen werden, damit Usability fr{\"u}h evaluiert und verbessert werden kann.

Anwender erwarten, nur eine Klasse zu ben{\"o}tigen. Konsequenz: Wenn notwendig, muss auf die Existenz weiterer Klassen on Doku aufmerksam gemacht werden; au{\ss}erdem m{\"u}ssen die Klassen einfach zu finden sein

Placeholders sind ein probates Mittel, um Anwender bei Ihrer Doku-Suche zu unterst{\"u}tzen (z.B. message.send verwei{\ss}t auf server.send(message))

degree-of-interest font-size model (h{\"a}ufig benutzte / relevante Funktionen / Klassen sollen gr{\"o}{\ss}er erscheinen)

Forschung Richtung "fact finding" interessant: Relevant f{\"u}r API, Doku und Tools - Unterst{\"u}tzung bei Exploration, welche Methoden und Klassen relevant zur L{\"o}sung einer Aufgabe sein k{\"o}nnen}
}

@inproceedings{Nosek:1992cm,
author = {Nosek, John and Baram, Gary and Steinberg, Geoff},
title = {{Ease of learning and using a case software tool: an empirical evaluation}},
booktitle = {SIGCPR '92 Proceedings of the 1992 ACM SIGCPR conference on Computer personnel research},
year = {1992},
pages = {75--80},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = may
}

@webpage{SaintAndre:2004um,
author = {Saint-Andre, Peter},
title = {{RFC 3920 - Extensible Messaging and Presence Protocol (XMPP): Core}},
year = {2004},
url = {http://tools.ietf.org/html/rfc3920#page-87}
}

@inproceedings{Stiemerling:1997:MSS:263552.263646,
author = {Stiemerling, Oliver and Kahler, Helge and Wulf, Volker},
title = {{How to make software softer{\textemdash}designing tailorable applications}},
booktitle = {DIS '97: Proceedings of the 2nd conference on Designing interactive systems: processes, practices, methods, and techniques},
year = {1997},
pages = {365--376},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = aug
}

@inproceedings{Yamashita:2013hn,
author = {Yamashita, Aiko and Moonen, Leon},
title = {{Do developers care about code smells? An exploratory survey}},
booktitle = {2013 20th Working Conference on Reverse Engineering (WCRE)},
pages = {242--251},
publisher = {IEEE}
}

@book{Anonymous:1987ta,
publisher = {Ablex Publishing Corp.},
year = {1987},
address = {Norwood, NJ, USA}
}

@webpage{EclipseFoundation:2011uc,
author = {{Eclipse~Foundation}},
title = {{The Eclipse Foundation open source community website}},
year = {2011},
url = {http://www.eclipse.org/}
}

@misc{EntwicklungeinerEc:2006vj,
title = {{Entwicklung einer Eclipse-Erweiterung zur Realisierung und Protokollierung verteilter Paarprogrammierung}},
author = {Djemili, Riad},
howpublished = {Freie Universit{\"a}t Berlin},
year = {2006}
}

@inproceedings{Omar:2012tw,
author = {Omar, Cyrus and Yoon, Young Seok and LaToza, Thomas D and Myers, Brad A},
title = {{Active code completion}},
booktitle = {ICSE '12: Proceedings of the 34th International Conference on Software Engineering},
year = {2012},
pages = {859--869},
publisher = {IEEE},
address = {Z{\"u}rich},
month = jun
}

@book{Fowler:424198,
author = {Fowler, Martin},
title = {{Refactoring: improving the design of existing code}},
publisher = {Addison-Wesley},
year = {1999},
address = {Reading, MA},
annote = {Buch zum Thema Code Smells}
}

@webpage{OSGi:2011wm,
author = {OSGi, Equinox},
title = {{Equinox}},
year = {2011},
url = {http://www.eclipse.org/equinox/}
}

@article{Tractinsky:2000gg,
author = {McLellan, S G and Tractinsky, N. and Katz, A. S. and Roesler, A W and Ikar, D. and Tempest, J T and Spinuzzi, C I},
title = {{What is beautiful is usable}},
journal = {Interacting with Computers},
year = {2000},
volume = {13},
number = {2},
pages = {127--145},
month = apr
}

@webpage{Reardon:2008wl,
author = {Reardon, Martin},
title = {{Planning for Phases of Learning}},
year = {2008},
month = sep,
annote = {Bezieht sich auf Gagn{\'e}, R. M. (1985). The conditions of learning and theory of instruction (4 ed.). Holt, Rinehart and Winston. Retrieved from http://books.google.de/books?id=c1MmAQAAIAAJ},
url = {http://www.people.vcu.edu/~rmreardon/706/Models%20of%20Teaching/Gagne_phases.htm}
}

@inproceedings{Bronsard:2009dw,
author = {Bronsard, Francois},
title = {{Practical framework constraints}},
booktitle = {ESEC/FSE '09: Proceedings of the 7th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering on European software engineering conference and foundations of software engineering symposium},
year = {2009},
pages = {273--276},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = aug,
annote = {Haben durch historische Forschung contraints ausgemacht, die bei Einhaltung vorteile bringen und automatisch mit einem Tool gepr{\"u}ft werden k{\"o}nnen}
}

@webpage{Bager:IDwRnNoQ,
author = {Bager, Jo},
title = {{\textbf{Werbenetzwerk Zanox setzt auf Browser-Fingerprinting}}},
year = {2013},
month = sep,
url = {http://www.heise.de/newsticker/meldung/Werbenetzwerk-Zanox-setzt-auf-Browser-Fingerprinting-1962527.html?wt_mc=rss.ho.beitrag.atom}
}

@inproceedings{Flores:2008jh,
author = {Flores, Nuno and Aguiar, Ademar},
title = {{Patterns for understanding frameworks}},
booktitle = {PLoP '08: Proceedings of the 15th Conference on Pattern Languages of Programs},
year = {2008},
pages = {1},
publisher = {~ACM},
address = {New York, New York, USA},
month = oct,
annote = {Stellt Handlungsvorschl{\"a}ge vor, die man in Bezug auf den Umgang mit Frameworks verwenden kann.

Z.B. Die Frage nach der Eignung eines Frameworks f{\"u}r die eigenen Zwecke.}
}

@webpage{GreenCognitive,
author = {Green, Thomas R G and Blackwell, Alan F},
title = {{\textbf{Cognitive Dimensions of Information Artefacts: a tutorial }
}},
year = {1998},
month = oct,
annote = {Tutorial zu 6 der 13 Cognitive Dimensions:
- Abstraction (types and availability of abstraction mechanisms)
- Hidden dependencies (important links between entities are not visible)
- Premature commitment (constraints on the order of doing things)
- Secondary notation (extra information in means other than formal syntax)
- Viscosity (resistance to change)
- Visibility (ability to view components easily)
  
Nicht behandelt￼
Closeness of mapping (closeness of representation to domain)
Consistency (similar semantics are expressed in similar syntactic forms)
Diffuseness (verbosity of language)
Error-proneness (notation invites mistakes)
Hard mental operations (high demand on cognitive resources)
Progressive evaluation (work-to-date can be checked at any time)
Provisionality (degree of commitment to actions or marks)
Role-expressiveness (the purpose of a component is readily inferred)
},
url = {http://www.cl.cam.ac.uk/~afb21/CognitiveDimensions/CDtutorial.pdf}
}

@article{Dahotre:2011vr,
author = {Dahotre, Aniket and Krishnamoorthy, Vasanth and Corley, Matt and Scaffidi, Christopher},
title = {{Using intelligent tutors to enhance student learning of application programming interfaces}},
journal = {Journal of Computing Sciences in Colleges},
year = {2011},
volume = {27},
number = {1},
pages = {195--201},
month = oct,
annote = {Problem: Vermittlung von APIs an Sch{\"u}ler/Studenten aufwendig

L{\"o}sung: "ApiTutor" = Zusammenstellbarer Online-Kurs
- Tutor macht Google-Suche
- Findet so Code Examples
- Relevante Examples werden in ApiTutor sortiert und als Kurs (Quiz-{\"a}hnlich) bereitgestellt

Anwendungsgebiete auch in Firmen mit eigenen APIs}
}

@article{Kintsch:1988bz,
author = {Kintsch, Walter},
title = {{The role of knowledge in discourse comprehension: A construction-integration model.}},
journal = {Psychological Review},
year = {1988},
volume = {95},
number = {2},
pages = {163--182}
}

@book{Beck:2004tm,
author = {Beck, Kent and Andres, Cynthia},
title = {{Extreme Programming Explained: Embrace Change (2nd Edition)}},
publisher = {Addison-Wesley Professional},
year = {2004},
edition = {2},
month = nov
}

@book{gogol2009biological,
author = {Gogol-D{\"o}ring, Andreas and Reinert, Knut},
title = {{Biological Sequence Analysis Using the SeqAn C++ Library}},
publisher = {CRC Press},
year = {2009},
series = {Chapman {\&} Hall/CRC Mathematical and Computational Biology}
}

@inproceedings{Ko:2004fc,
author = {Ko, Andrew J and Myers, Brad A},
title = {{Designing the whyline: a debugging interface for asking questions about program behavior}},
booktitle = {CHI '04: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
year = {2004},
pages = {151--158},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = apr,
annote = {Neues Debugging Paradigm: Interrogative Debugging
- Whyline eine Implementierung davon
- erlaubt Fragen nach Warum und Warum nicht?
- im Experiment 8x schnelleres Debugging}
}

@webpage{Kamkar:FIOYXZjo,
author = {Kamkar, Samy},
title = {{\textbf{evercookie -- never forget.}}},
year = {2010},
month = oct,
url = {http://samy.pl/evercookie/}
}

@book{Stylos:2009ts,
author = {Stylos, Jeffrey},
title = {{Making apis more usable with improved api designs, documentation and tools}},
publisher = {Carnegie Mellon University},
year = {2009},
address = {Pittsburgh, PA, USA},
month = jan,
annote = {AAI3358065}
}

@inproceedings{Hundhausen:2006ev,
author = {Hundhausen, Christopher D and Brown, Jonathan L and Farley, Sean and Skarpas, Daniel},
title = {{A methodology for analyzing the temporal evolution of novice programs based on semantic components}},
booktitle = {ICER '06: Proceedings of the second international workshop on Computing education research},
year = {2006},
pages = {59--71},
publisher = {ACM Press},
address = {New York, New York, USA},
month = sep,
annote = {Entwicklung einer Methodologie zum Vergleichen von IDEs f{\"u}r Programmieranf{\"a}nger
- Zum Kodieren
- Fokus auf Prozess und nicht dem Ergebnis
- Fokus auf worauf sich Programmierer konzentriert und wo ihm die IDE dabei hilft

Basierend auf von den Authoren entwickelten Codes, 19,6h Videos ohne Audio}
}

@inproceedings{Cronholm:2009:UUG:1738826.1738864,
author = {Cronholm, Stefan},
title = {{The usability of usability guidelines}},
booktitle = {OZCHI '09 Proceedings of the 21st Annual Conference of the Australian Computer-Human Interaction Special Interest Group: Design: Open 24/7},
year = {2009},
pages = {233},
publisher = {ACM Press},
address = {New York, New York, USA}
}

@webpage{Dresing:2006te,
author = {Dresing, Thorsten},
title = {{MAXqda und Grounded Theory?}},
year = {2006},
month = dec,
url = {http://www.maxqda.de/support/forum/viewtopic.php?f=6&t=291}
}

@book{038754352X,
author = {Budde, Reinhard and Kautz, Karlheinz and Kuhlenkamp, Karin},
title = {{Prototyping: An Approach to Evolutionary System Development}},
publisher = {Springer},
year = {1992}
}

@inproceedings{Uddin:2012wm,
author = {Uddin, Gias and Dagenais, Barthelemy and Robillard, Martin P},
title = {{Temporal analysis of API usage concepts}},
booktitle = {ICSE '12: Proceedings of the 34th International Conference on Software Engineering},
pages = {804--814},
publisher = {IEEE}
}

@article{Zhong:2011cq,
author = {Zhong, Hao and Zhang, Lu and Xie, Tao and Mei, Hong},
title = {{Inferring specifications for resources from natural language API documentation}},
journal = {Automated Software Engineering},
year = {2011},
volume = {18},
number = {3-4},
pages = {227--261},
month = dec,
annote = {Software "Doc2Spec", die Spezifikation auf der Dokumentation herleitet und damit Bugs findet.

Eigentliche Schwierigkeit: Methodenbeschreibungen nehmen nicht immer explizit auf einander Bezug und man muss sich die Spezifikation (erst lesen, dann schlie{\ss}en) selbst herleiten}
}

@webpage{SaintAndre:2011uq,
author = {Saint-Andre, Peter},
title = {{RFC 6120 - Extensible Messaging and Presence Protocol (XMPP): Core}},
year = {2011},
url = {http://tools.ietf.org/html/rfc6120}
}

@webpage{Kucharzeck:2011wy,
author = {Kucharzeck, Mendel and Fujara, Robert},
title = {{Synium - Screenium}},
year = {2011},
url = {http://www.syniumsoftware.com/screenium/}
}

@article{DBLP:journals/iwc/Vanderdonckt99,
author = {Vanderdonckt, Jean},
title = {{Development milestones towards a tool for working with guidelines}},
journal = {Interacting with Computers},
year = {1999},
volume = {12},
number = {2},
pages = {81--118}
}

@inproceedings{DBLP:conf/interact/SouzaB90,
author = {de Souza, Flavio and Bevan, Nigel},
title = {{The use of guidelines in menu interface design: Evaluation of a draft standard}},
booktitle = {Human-Computer Interaction, INTERACT '90, Proceedings of the IFIP TC13 Third Interantional Conference on Human-Computer Interaction, Cambridge, UK, 27-31 August, 1990},
year = {1990},
pages = {435--440}
}

@article{Lange:1989jr,
author = {Lange, B M and Moher, T G},
title = {{Some strategies of reuse in an object-oriented programming environment}},
journal = {ACM SIGCHI Bulletin},
year = {1989},
volume = {20},
number = {SI},
pages = {69--73},
month = mar,
annote = {Ein-W{\"o}chige Beobachtung (Think-Aloud, analoge Bildschirmaufzeichnung) einer Objective C-Programmiererin

- Verst{\"a}ndnisvermeidung (kein Code-Verst{\"a}ndnis, keine symbolische Ausf{\"u}hrung)
- Validierung praktisch immer mittels Ausf{\"u}hrung des Programms
- Umgang mit Programm, als w{\"a}re es ihr vollkommen fremd (dabei stammen die relevanten Teile gr{\"o}{\ss}tenteils von ihr)
- 85% der Methoden entstanden mittels existierendem Code
- nur 6 von 99 Methoden wurden vollst{\"a}ndig neu geschrieben
- sehr h{\"a}ufig Schwesterklasse (sibling) als Vorlage verwendet f{\"u}r eigene Klasse (= strong template method)
- Vorstellung von 6 Coding-Techniken (literal = pure copies; copy/edit = copied + edited; model = step-by-step transformation of a template; cliche = one liners; original = coding from scratch; rework = split large into small methods)

--{\&}gt; kein richtiges OOP bei SeqAn, Klassen gibt es nicht. Reichen daher Dox und Tuts?}
}

@article{zibran2008makes,
author = {Zibran, Minhaz F},
title = {{\textbf{What Makes APIs Difficult to Use?}}},
journal = {IJCSNS International Journal of Computer Science and Network Security},
year = {2008},
volume = {8},
number = {4},
pages = {255--261},
month = apr,
annote = {Guter {\"U}berblick {\"u}ber Literatur}
}

@book{Polya:puYL6ohw,
author = {Polya, George},
title = {{How to Solve it: A New Aspects of Mathematical Method}},
publisher = {Princeton University Press},
year = {1957},
edition = {2nd edition},
annote = {How To und How What
Unterscheidung {\"a}hnlich zu Shneiderman}
}

@article{Daughtry:2009dv,
author = {Daughtry, John M and Farooq, Umer and Stylos, Jeffrey and Myers, Brad A},
title = {{API usability: CHI'2009 special interest group meeting}},
journal = {CHI '09 Extended Abstracts on Human Factors in Computing Systems},
year = {2009},
pages = {2771--2774},
month = apr
}

@article{Boehm:du,
author = {Boehm, Barry W},
title = {{Software Engineering Economics}},
journal = {IEEE Transactions on Software Engineering},
year = {1984},
volume = {SE-10},
number = {1},
pages = {4--21},
month = jan,
annote = {50-75% Kosten entfallen auf Wartung}
}

@book{Anonymous:2012vw,
editor = {Winckler, Marco and Forbrig, Peter and Bernhaupt, Regina},
title = {{Human-Centered Software Engineering}},
publisher = {Springer Berlin Heidelberg},
year = {2012},
volume = {7623},
series = {Lecture Notes in Computer Science},
address = {Berlin, Heidelberg}
}

@webpage{Beecher:2011ws,
author = {Beecher, Karl and Djemili, Riad and Prechelt, Lutz and Schenk, Julia and {\"O}zbek, Christopher},
title = {{What is Saros?}},
year = {2011},
url = {http://www.saros-project.org/#What_is_Saros}
}

@inproceedings{Wixon:2002:UPF:506443.506646,
author = {Farooq, Umer and Wixon, Dennis R. and Ramey, Judy and Zirkler, Dieter and Holtzblatt, Karen and Beyer, Hugh and Hackos, JoAnn and Rosenbaum, Stephanie and Page, Colleen and Laakso, Sari A. and Laakso, Karri-Pekka},
title = {{Usability in practice: field methods evolution and revolution}},
booktitle = {CHI '02 extended abstracts on Human factors in computing systems},
year = {2002},
pages = {880--884},
publisher = {ACM},
address = {New York, NY, USA}
}

@article{Alexander:2012fb,
author = {Alexander, Erik K and Kennedy, Giulia C and Baloch, Zubair W and Cibas, Edmund S and Chudova, Darya and Diggans, James and Friedman, Lyssa and Kloos, Richard T and LiVolsi, Virginia A and Mandel, Susan J and Raab, Stephen S and Rosai, Juan and Steward, David L and Walsh, P Sean and Wilde, Jonathan I and Zeiger, Martha A and Lanman, Richard B and Haugen, Bryan R},
title = {{Preoperative Diagnosis of Benign Thyroid Nodules with Indeterminate Cytology}},
journal = {New England Journal of Medicine},
year = {2012},
volume = {367},
number = {8},
pages = {705--715}
}

@article{DeLine:2010:SDC:1831327.1831329,
author = {DeLine, Robert and Venolia, Gina and Rowan, Kael},
title = {{Software Development with Code Maps}},
journal = {Queue - Visualization},
year = {2010},
volume = {8},
number = {7},
pages = {10:10--10:18},
month = jul,
annote = {Diagramme sind omnipr{\"a}sent und in allen Varianten verf{\"u}gbar.
Code Map ist eine Form
- Bereitstellung als zentrales Instrument in IDE 
-- verringert Desorientierung
-- Beantwortet {\"u}bliche Informationsbed{\"u}rfnisse
-- Intensiviert Team-Konversationen}
}

@inproceedings{Beaton:2008jn,
author = {Beaton, Jack and Jeong, Sae Young Sophie and Xie, Yingyu Clare and Stylos, Jeffrey and Myers, Brad A},
title = {{Usability challenges for enterprise service-oriented architecture APIs}},
booktitle = {VLHCC '08: Proceedings of the 2008 IEEE Symposium on Visual Languages and Human-Centric Computing},
year = {2008},
publisher = {~IEEE Computer Society},
month = sep
}

@book{dekel2011increasing,
author = {Dekel, Uri},
title = {{Increasing Awareness of Delocalized Information to Facilitate Api Usage}},
publisher = {Proquest, UMI Dissertation Publishing},
year = {2011},
month = sep,
annote = {Arbeitet zum Thema API Direktiven, die mittels der Software eMoose direkt in IDE eingeblendet werden}
}

@inproceedings{Dagenais:2008kj,
author = {Dagenais, Barthelemy and Ossher, Harold},
title = {{Automatically locating framework extension examples}},
booktitle = {SIGSOFT '08/FSE-16: Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering},
year = {2008},
pages = {203--213},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = nov,
annote = {Tool "XFinder", dass Implementierungen und Vererbungen von Klassen {\"u}ber einen Umweg {\"u}ber die Doku (Nachteil) findet;
Arbeitsweise: Was will ich haben und ich erfahre, wie ich es baue) (im Gegensatz zu Fruit, wo ich erfahre, was ich mit meinem Objekt machen kann)

Vorteil gegen{\"u}ber anderen Example Tools: Kann auch andere Artefakte als Quelltext behandeln}
}

@article{Winfield:2009fo,
author = {Winfield, Mark S},
title = {{Beyond NIMBY: Hazardous Waste Siting in Canada and the United States Barry G. Rabe, Washington, D.C.: The Brookings Institution, 1994), pp. xvii, 199.}},
journal = {Canadian Journal of Political Science},
year = {2009},
volume = {28},
number = {04},
pages = {777},
month = nov
}

@webpage{Fowler:2004tz,
author = {Fowler, Martin},
title = {{Inversion of Control Containers and the Dependency Injection pattern}},
year = {2004},
url = {http://www.martinfowler.com/articles/injection.html}
}

@inproceedings{eagan2008buzz,
author = {Eagan, James R and Stasko, John T},
title = {{The buzz: supporting user tailorability in awareness applications}},
booktitle = {CHI '08: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
year = {2008},
pages = {1729},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = apr,
annote = {Quelle f{\"u}r: Subjektive Daten (aus subjektiven Datenerhebungsverfahren) eignen sich besonder gut zur Erhebung von Anforderungen an ein Softwaresystem

Gefunden {\"u}ber \citep{Ko:2011el}}
}

@webpage{Spinellis:2006tj,
author = {Spinellis, Diomidis},
title = {{\textbf{The Bad Code Spotter's Guide}}},
year = {2006},
month = apr,
url = {http://www.informit.com/articles/article.aspx?p=457502}
}

@article{Furnas:1987hl,
author = {Furnas, G W and Landauer, T K and Gomez, L M and Dumais, S T},
title = {{The vocabulary problem in human-system communication}},
journal = {Communications of the ACM},
year = {1987},
volume = {30},
number = {11},
pages = {964--971},
month = nov,
annote = {Studie zum Benennungsproblem, dass 2 Leute den gleichen Begriff vorziehen, ist kleiner 20%.

Experiment: Mehr als Tausend Paare mussten einem fiktivem Computerprogramm / -Funktion einen Namen geben; weniger als ein Dutzend hatte Einstimmigkeit.
Breit aufgestellt bzgl. Dom{\"a}ne, Erhebungstechnik, Typen von Menschen, {\ldots}

- stimulus: "object", "item"
- result: "terms", "words", "descriptors", "names"

Armchair-Method:
- Designer / Implementierer nimmt eigenen Favoriten
- Chance, dass man nicht auf das Wort als Au{\ss}enstehender kommt: 80-90%
  - Durch andere Literatur best{\"a}tigt
- {\"a}hnlich schlecht bei Expert-to-Expert

Mehrere Armchair-Begriffe genauso gut wie ein optimaler Armchair-Begriff;
Mehrere optimale Armchair-Begriffe besser allerdings sinkt Verbesserung stark mit jedem weiteren Term;
Mit 15 Aliasen deckt man 60-80% der "attempts" ab

Problem: Der Designer kann nicht alle m{\"o}glichen Terme f{\"u}r ein Item benennen und damit nicht anbieten

"Unlimited Aliasing"
----------------
Also: Unbeschr{\"a}nkt viele Aliase
-{\&}gt; Pr{\"a}zisionsproblem
-{\&}gt; L{\"o}sung: Bei Mehrdeutigkeit, alle Varianten nennen.

Wer User durch tolerante Systeme schlampiger "Unesidrable habits": Nein, da Auswahl aus Varianten immer noch teurer ist, als gleich den richtigen Begriff zu w{\"a}hlen.
Die User werde sich an die "korrekte" Terminologie gew{\"o}hnen.

G{\"u}nstige L{\"o}sungen f{\"u}r Aliase:
1. 3-6 Aliase ausdenken ("quick and dirty")
2. Synonyme aus Inhalt (z.B. Dokumentation) extrahieren
3. Indexing
-- User sucht
-- User failed
-- User findet Begriff
-- Alle zuvor verwandten Suchbegriffe werden in den Index aufgenommen und dienen nun auch als Treffer}
}

@book{Strubing:2005ve,
author = {Str{\"u}bing, J{\"o}rg},
title = {{Pragmatistische Wissenschafts- und Technikforschung}},
publisher = {Campus Verlag},
year = {2005},
series = {Theorie und Methode}
}

@inproceedings{Boehm:2006:VCS:1134285.1134288,
author = {Boehm, Barry W},
title = {{A view of 20th and 21st century software engineering}},
booktitle = {ICSE '06: Proceeding of the 28th international conference},
year = {2006},
pages = {12},
publisher = {ACM Press},
address = {New York, New York, USA}
}

@article{Li:2012fl,
author = {Li, Jing-Woei and Schmieder, Robert and Ward, R Matthew and Delenick, Joann and Olivares, Eric C and Mittelman, David},
title = {{SEQanswers: an open access community for collaboratively decoding genomes.}},
journal = {Bioinformatics},
year = {2012},
volume = {28},
number = {9},
pages = {1272--1273},
month = may
}

@book{clark1991product,
author = {Clark, Kim B and Fujimoto, T},
title = {{Product Development Performance: Strategy, Organization, and Management in the World Auto Industry}},
publisher = {Harvard Business School Press},
year = {1991},
annote = {Zitierquelle f{\"u}r: Rule of Ten / Zehnerregel der Fehlerkosten}
}

@inproceedings{Burity:2015:QEA:2695664.2695909,
author = {Burity, Tha{\'\i}s and Elias, Gledson},
title = {{A quantitative, evidence-based approach for recommending software modules}},
booktitle = {SAC '15: Proceedings of the 30th Annual ACM Symposium on Applied Computing},
year = {2015},
pages = {1449--1456},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = apr
}

@article{Eddy:2005ts,
author = {Eddy, Sean R},
title = {{"Antedisciplinary" Science.}},
journal = {PLoS Computational Biology (PLOSCB) 1(1)},
year = {2005},
volume = {1},
number = {1},
pages = {e6--e6}
}

@inproceedings{4660352,
author = {Aschwanden, Christoph and Crosby, Martha E},
title = {{Code Scanning Patterns in Program Comprehension}},
booktitle = {HICSS: 39th Hawaii International Conference on System Sciences},
year = {2006}
}

@book{mayring2002einfhrung,
author = {Mayring, Philipp},
title = {{Einf{\"u}hrung in die qualitative Sozialforschung: Eine Anleitung zu qualitativem Denken}},
publisher = {Beltz Verlag},
year = {2002},
address = {Weinheim}
}

@inproceedings{Stylos:2007ip,
author = {Robertson, Scott M},
title = {{Postsecondary Education {\&} Autism: Developing an Online Community}},
booktitle = {VLHCC '07: Proceedings of the IEEE Symposium on Visual Languages and Human-Centric Computing},
year = {2007},
pages = {50--60},
publisher = {~IEEE Computer Society},
month = sep,
annote = {Zusammenfassung bekannter API design empfehlungen zu einem Modell + Mapping zu API 

quality attributes (performance, power, usability)

API-Designentscheidung = Alle Entscheidungen
minus
- Tool-Support
- Dokumentation
- Prozessentscheidungen
- Welche API gebaut werden soll
- Implementierungsdetails

API-Designentscheidungen entlang der Dimensionen:
- inter- and intra-class decision (oder auch structural vs. specific)
- language-level vs. archictectural level (d.h. Eigenschaften, die auf Sprachmittel wie static oder synchronised zur{\"u}ckgehen UND Eigenschaften, die abstrakter sind und meist unabh{\"a}ngig von der Sprache existieren)

Erstaunlicherweise ist Gro{\ss}teil von Empfehlungen auf Sprachebene

Wichtigkeit
- Design-H{\"a}ufigkeit
- Design-Schwierigkeit
- Verwendungs-H{\"a}ufigkeit
- Verwendungs-Schwierigkeit}
}

@article{Johnson:2003uw,
author = {Johnson, Philip M and Kou, Hongbing and Agustin, Joy and Chan, Christopher and Moore, Carleton A and Miglani, Jitender and Zhen, Shenyan and Doane, William E J},
title = {{Beyond the Personal Software Process: Metrics collection and analysis for the differently disciplined.}},
journal = {ICSE '07: Proceedings of the 29th international conference on Software Engineering},
year = {2003},
pages = {641--646}
}

@inproceedings{Nielsen:1989:UED:92449.92499,
author = {Nielsen, Jakob},
title = {{Usability engineering at a discount}},
booktitle = {Proceedings of the third international conference on human-computer interaction on Designing and using human-computer interfaces and knowledge based systems (2nd ed.)},
year = {1989},
pages = {394--401},
publisher = {Elsevier Science Inc.},
address = {New York, NY, USA}
}

@webpage{Nielsen:2005uv,
author = {Nielsen, Jakob},
title = {{Heuristic Evaluation}},
year = {2005},
url = {http://www.useit.com/papers/heuristic/}
}

@article{lethbridge2003software,
author = {Lethbridge, Timothy and Singer, Janice A and Forward, Andrew},
title = {{How Software Engineers Use Documentation: The State of the Practice.}},
journal = {IEEE Software},
year = {2003},
volume = {20},
number = {6},
pages = {35--39}
}

@article{Hekmatpour:1987:EEP:24574.24577,
author = {Hekmatpour, S},
title = {{Experience with evolutionary prototyping in a large software project}},
journal = {SIGSOFT Softw. Eng. Notes},
year = {1987},
volume = {12},
pages = {38--41},
month = jan
}

@inproceedings{Briand:1997fw,
author = {Briand, Lionel C and Bunse, Christian and Daly, John W},
title = {{An experimental evaluation of quality guidelines on the maintainability of object-oriented design documents}},
booktitle = {ESP '97: Papers presented at the seventh workshop},
year = {1997},
pages = {1--19},
publisher = {ACM Press},
address = {New York, New York, USA},
annote = {Kontrolliertes Experiment; Einfluss von Quality-Guidelines auf Wartbarkeit von OOP-Dokumenten

- positiver Einfluss
- OOP = anspruchsvoll, daher weniger Beherrschbar und damit schlechtere Qualit{\"a}t
- Offene These: Das liegt an den Maintainern, die durchschnittlich weniger Erfahrung mit OOP haben}
}

@article{Shaft:1998tc,
author = {Shaft, Teresa M and Vessey, Iris},
title = {{The Relevance of Application Domain Knowledge: Characterizing the Computer Program Comprehension Process}},
journal = {Journal of Management Information Systems},
year = {1998},
volume = {15},
number = {1},
pages = {51--78},
month = jun,
annote = {Tracing study mittels think aloud (24 information system professionals)
- 1x Programm mit bekannter Problemdom{\"a}ne
- 1x Programm mit unbekannter Problemdom{\"a}ne

Manche Entwickler flexible in ihrem comprehension process; andere entscheiden sich f{\"u}r top-down oder bottom-up

Kenntnisse in Anwendungsdom{\"a}ne + Gebrauch einer bestimmen comprehension process entscheiden {\"u}ber Fortschritt

Flexible comprehension process ist der effektivste

Programmiere verbrinen 50-90% ihrer Zeit mit dem Verstehen existierendener Programme

Die Kombination top-down ohne Dom{\"a}nenwissen + bottom-up mit Dom{\"a}nenwissen trat nicht auf}
}

@booklet{Cooper:1999vg,
title = {{\textbf{The Inmates Are Running the Asylum: }Why High-tech Products Drive Us Crazy and how to Restore the Sanity}},
author = {Cooper, Alan},
howpublished = {Sams Publishing},
month = feb,
year = {2004},
annote = {Ungelesenes Buch
u.A. zum Thema Personas}
}

@inproceedings{Nykaza:2002im,
author = {Nykaza, J and Messinger, R and Boehme, F},
title = {{What programmers really want: results of a needs assessment for SDK documentation}},
booktitle = {SIGDOC '02: Proceedings of the 20th annual international conference on Computer documentation},
year = {2002},
annote = {Fragebogen
- interessante Fragen nach Target Groups brachte heraus, dass eine Gruppe nur wenige C++ Kenntnisse (Zielsprache) hatte (wie bei SeqAn)}
}

@article{Woodfield:1981jz,
author = {Woodfield, S N and Shen, V Y and Dunsmore, H E},
title = {{A study of several metrics for programming effort}},
journal = {Journal of Systems and Software},
year = {1981},
volume = {2},
number = {2},
pages = {97--103},
month = jun,
annote = {Vergleich von vier Metriken f{\"u}r Programmkomplexit{\"a}t zur Verbesserung von Programm-Entwicklung u. -Wartung}
}

@inproceedings{Nuseibeh:2000:RER:336512.336523,
author = {Nuseibeh, Bashar and Easterbrook, Steve},
title = {{Requirements engineering: a roadmap}},
booktitle = {ICSE '00: Proceedings of the Conference on The Future of Software Engineering},
year = {2000},
pages = {35--46},
publisher = {ACM},
address = {New York, NY, USA}
}

@inproceedings{Bruch:il,
author = {Bruch, M and Mezini, M and Monperrus, M},
title = {{Mining subclassing directives to improve framework reuse}},
booktitle = {Mining Software Repositories (MSR), 2010 7th IEEE Working Conference on},
year = {2010},
pages = {141--150},
publisher = {IEEE},
month = may
}

@webpage{Barth:2011uh,
author = {Barth, Michael},
title = {{API Evaluation}},
year = {2011},
month = dec,
annote = {{\"U}berblick {\"u}ber eine Paar API Usablity Metriken:
- Abstraction Level
- Comprehensibility
- Conistensty 
- Learning Barriers

und

4 API Usability Evaluierungsmethoden
- Think Aloud
- HE
- CW
- Cognitive Dimensions Framework
-- Weiterentwicklung vom Cognitive Dimensions of Notations zur Evaluation von APIs hin.
- },
url = {http://www.michaelbarth.net/files/publications/api-evaluation.pdf}
}

@webpage{Reinert:tg,
author = {Reinert, Knut and Weese, David and Holtegrewe, Manuel and Singer, Jochen and Krakau, Sabrina and Kahlert, Bj{\"o}rn},
title = {{Abschlussbericht VIP-Projekt \emph{BioStore}}},
year = {2014},
url = {https://docs.google.com/document/d/1A8ekjPMsRr-Iag2UiS97Mz2XMcOGpZc6jcT3Mbf1dTI/edit?usp=sharing}
}

@inproceedings{DaqingHou:2005ba,
author = {Hou, Daqing and Wong, Kenny and Hoover, H James},
title = {{What Can Programmer Questions Tell Us About Frameworks?}},
booktitle = {IWPC '05: Proceedings of the 13th International Workshop on Program Comprehension},
year = {2005},
publisher = {~IEEE Computer Society},
month = may,
annote = {300 Newsgroup-Fragen von Entwicklern zu zwei Swing-Komponenten nach Design-Features klassifiziert

Klassifizierung anhang der Features wie beim JTree Model-View mit dem Sub-Feature "Notification Failures" unabh{\"a}ngig durch zwei Forscher

Design issues
- Tightly coupled variation points: Variation points that depend "on too many parts of the framework"
- De-localized concerns: Aufgaben, die sich nur erledigen lassen, wenn man an mehreren Stellen des Codes arbeitet
- Inherited features: werden verletzt, wenn pl{\"o}tzlich etwas anders gemcht wird, als man durch die Vererbungshierarchie erwarten w{\"u}rde. z.B. das Hinzuf{\"u}gen von Komponenten passt bei irgendeinem Widget nicht direkt als Kind des Widgets, sondern als Kind einer Teilkomponente des Widgets, was sich auch in der API zeigt

Documentation issues
- gibt keinen {\"U}berblick
- alphabetische statt logische Gruppierung

People issues
- fehlende Foren, da Foren exzellenten und g{\"u}nstigen Support liefern}
}

@inproceedings{Lee:2011ip,
author = {Lee, Michael J and Ko, Andrew J},
title = {{Personifying programming tool feedback improves novice programmers' learning}},
booktitle = {ICER '11: Proceedings of the seventh international workshop on Computing education research},
year = {2011},
pages = {109},
publisher = {ACM Press},
address = {New York, New York, USA}
}

@article{Faulkner:2003wn,
author = {Faulkner, Laura},
title = {{Beyond the Five-User Assumption: Benefits of Increased Sample Sizes in Usability Testing}},
journal = {Behavior Research Methods},
year = {2003},
volume = {35},
number = {3},
month = apr
}

@inproceedings{Stylos:2006td,
author = {Stylos, Jeffrey and Clarke, Steven and Myers, B},
title = {{Comparing API design choices with usability studies: A case study and future directions}},
booktitle = {Proceedings of the 18th Annual PPIG - PPIG 2006},
year = {2006},
month = sep,
annote = {Generalisierung der Uability-Evaluationstechnik mittels Cognitive Dimensions Framework und Zeigen der Funktionst{\"u}chtigkeit am Beispiel Parameterlose Konstruktoren

Interessant: Erstmalig Treffen Stylos und Cognitive Framework aufeinander

Offene Frage: Auch unbekannte API-Eigenschaften erkennbar?}
}

@inproceedings{Wiedenbeck:kt,
author = {Wiedenbeck, Susan},
title = {{Facilitators and Inhibitors of End-User Development by Teachers in a School Environment}},
booktitle = {VLHCC '05: Proceedings of the 2005 IEEE Symposium on Visual Languages and Human-Centric Computing},
year = {2005},
publisher = {~IEEE Computer Society},
month = sep
}

@webpage{Komatineni:2006vw,
author = {Komatineni, Satya},
title = {{Reshaping IT Project Delivery Through Extreme Prototyping}},
year = {2006},
month = nov,
url = {http://onjava.com/pub/a/onjava/2006/11/15/reshaping-it-project-delivery-through-extreme-prototyping.html}
}

@book{Schulz:1989tr,
author = {Schulz, Winfried and Kaase, Max},
title = {{Massenkommunikation}},
publisher = {VS Verlag f{\"u}r Sozialwissenschaften},
year = {1989}
}

@inproceedings{Hou:2010fd,
author = {Hou, Daqing and Pletcher, David M},
title = {{Towards a better code completion system by API grouping, filtering, and popularity-based ranking}},
booktitle = {RSSE '10: Proceedings of the 2nd International Workshop on Recommendation Systems for Software Engineering},
year = {2010},
pages = {26--30},
publisher = {ACM Press},
address = {New York, New York, USA},
annote = {Typische Code-Completion (see Eclipse) hat 4 Schw{\"a}chen:
1) Public != API
2) Manche Methoden sind nur f{\"u}r bestimmte Kontexte gedacht
3) Alphabetische Ordnung statt logische Ordnung
4) H{\"a}ufig verwendete API erscheint meist erst weiter nach irrelevanter API

Gel{\"o}st mittels BCC (Better Code Completion)
Validiert mittels Swing-Programmaufgabe.
Bestes Ergbnis: ranking+type+filtering}
}

@book{Nierstrasz:1995:OSC:232469,
author = {Nierstrasz, Oscar Marius and Tsichritzis, Dionysios C},
editor = {Nierstrasz, Oscar Marius and Tsichritzis, Dennis},
title = {{Object-oriented Software Composition}},
publisher = {Prentice Hall International (UK) Ltd.},
year = {1995},
address = {Hertfordshire, UK, UK}
}

@article{Daughtry:2009be,
author = {Daughtry, John M and Farooq, Umer and Myers, Brad A and Stylos, Jeffrey},
title = {{API usability: report on special interest group at CHI}},
journal = {SIGSOFT Softw. Eng. Notes},
year = {2009},
volume = {34},
number = {4},
pages = {27},
month = jul,
annote = {Sehr gute Zusammenfassung der Forschung Ende 1990 und 2009}
}

@inproceedings{Kulesza:2008kr,
author = {Kulesza, Todd and Wong, Weng-Keen and Stumpf, Simone and Perona, Stephen and White, Rachel and Burnett, Margaret M and Oberst, Ian and Ko, Andrew J},
title = {{Fixing the program my computer learned: barriers for end users, challenges for the machine}},
booktitle = {IUI '09: Proceedingsc of the 13th international conference},
year = {2009},
pages = {187--196},
publisher = {~ACM  Request Permissions},
address = {New York, New York, USA},
month = feb,
annote = {Problem: Machinen-Lernen erzeugte Programme schwer zu debuggen; L{\"o}sungsansatz verwandt mit Whyline \cite{Ko:2004fc}}
}

@inproceedings{Beaton:2008ix,
author = {Beaton, Jack and Myers, Brad A and Stylos, Jeffrey and Jeong, Sae Young Sophie and Xie, Yingyu Clare},
title = {{Usability evaluation for enterprise SOA APIs}},
booktitle = {RSSE '10: Proceedings of the 2nd International Workshop on Recommendation Systems for Software Engineering},
year = {2008},
pages = {29},
publisher = {ACM Press},
address = {New York, New York, USA},
annote = {Untersuchung der SAP E-SOA API
- mittels HCI techniques (Anpassungen jeweils im Text)
-- Think aloud
-- Expert Evaliations
--- Heuristic Evaluation
--- Cognitive Dimensions
-- Cognitive Walkthrough  
- Herausfinden von "usable design patterns"

5 Forschungsfelder:
- API Design for SOA
- IDE support f{\"u}r SOA
- SOA documentation (insb. verschiedene Clientsprachen)
- Anwendbarkeit von HCI auf API Usabiity
- Pr{\"a}sentation(Umgang) von Ergebnissen (z.B. API {\"A}nderungen, Kosten, etc.)}
}

@article{Boehm:1986:SMS:12944.12948,
author = {Boehm, B},
title = {{A spiral model of software development and enhancement}},
journal = {SIGSOFT Softw. Eng. Notes},
year = {1986},
volume = {11},
number = {4},
pages = {22--42},
month = aug
}

@article{Wang:2013ub,
author = {Wang, Wei and Godfrey, Michael W},
title = {{Detecting API usage obstacles: a study of iOS and Android developer questions.}},
journal = {Mining Software Repositories (MSR), 2013 10th IEEE Working Conference on},
year = {2013},
pages = {61--64}
}

@article{Brooks:1980kb,
author = {Brooks, Ruven E},
title = {{Studying programmer behavior experimentally: the problems of proper methodology}},
journal = {Communications of the ACM},
year = {1980},
volume = {23},
number = {4},
pages = {207--213},
month = apr,
annote = {Bschreibung von 3 gro{\ss}en Probleme behaviorilistischer Forschung: Auswahl der Subjekte, des Materials und der Messmethode

weniger relevant wegen Forschungs mittels GT}
}

@article{Miller:1956dz,
author = {Miller, George A},
title = {{The magical number seven, plus or minus two: some limits on our capacity for processing information.}},
journal = {Psychological Review},
year = {1956},
volume = {63},
number = {2},
pages = {81--97}
}

@booklet{green1991comprehensibility,
title = {{Comprehensibility of Visual and Textual Programs}},
author = {Green, Thomas R G and Petre, M and Bellamy, Rachel K E},
howpublished = {Open University, Computer Assisted Learning Research Group},
year = {1991}
}

